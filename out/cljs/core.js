// Compiled by ClojureScript 0.0-2850 {:elide-asserts true, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__13010__delegate = function (args){
return console.log.apply(console,(function (){var G__13009 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__13009) : cljs.core.into_array.call(null,G__13009));
})());
};
var G__13010 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13011__i = 0, G__13011__a = new Array(arguments.length -  0);
while (G__13011__i < G__13011__a.length) {G__13011__a[G__13011__i] = arguments[G__13011__i + 0]; ++G__13011__i;}
  args = new cljs.core.IndexedSeq(G__13011__a,0);
} 
return G__13010__delegate.call(this,args);};
G__13010.cljs$lang$maxFixedArity = 0;
G__13010.cljs$lang$applyTo = (function (arglist__13012){
var args = cljs.core.seq(arglist__13012);
return G__13010__delegate(args);
});
G__13010.cljs$core$IFn$_invoke$arity$variadic = G__13010__delegate;
return G__13010;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__13014 = x;
return goog.isString(G__13014);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__13016 = x__$1;
return goog.typeOf(G__13016);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3762__auto__ = ty;
if(cljs.core.truth_(and__3762__auto__)){
return ty.cljs$lang$type;
} else {
return and__3762__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__13018 = obj;
return goog.typeOf(G__13018);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__13020 = Symbol;
return goog.typeOf(G__13020);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4661__auto___13022 = len;
var i_13023 = (0);
while(true){
if((i_13023 < n__4661__auto___13022)){
(new_arr[i_13023] = (arr[i_13023]));

var G__13024 = (i_13023 + (1));
i_13023 = G__13024;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__13025 = (i + (1));
i = G__13025;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__13034__delegate = function (array,i,idxs){
var G__13031 = aget;
var G__13032 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__13033 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__13031,G__13032,G__13033) : cljs.core.apply.call(null,G__13031,G__13032,G__13033));
};
var G__13034 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__13035__i = 0, G__13035__a = new Array(arguments.length -  2);
while (G__13035__i < G__13035__a.length) {G__13035__a[G__13035__i] = arguments[G__13035__i + 2]; ++G__13035__i;}
  idxs = new cljs.core.IndexedSeq(G__13035__a,0);
} 
return G__13034__delegate.call(this,array,i,idxs);};
G__13034.cljs$lang$maxFixedArity = 2;
G__13034.cljs$lang$applyTo = (function (arglist__13036){
var array = cljs.core.first(arglist__13036);
arglist__13036 = cljs.core.next(arglist__13036);
var i = cljs.core.first(arglist__13036);
var idxs = cljs.core.rest(arglist__13036);
return G__13034__delegate(array,i,idxs);
});
G__13034.cljs$core$IFn$_invoke$arity$variadic = G__13034__delegate;
return G__13034;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__13037 = null;
if (arguments.length > 2) {
var G__13038__i = 0, G__13038__a = new Array(arguments.length -  2);
while (G__13038__i < G__13038__a.length) {G__13038__a[G__13038__i] = arguments[G__13038__i + 2]; ++G__13038__i;}
G__13037 = new cljs.core.IndexedSeq(G__13038__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__13037);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__13047__delegate = function (array,idx,idx2,idxv){
var G__13043 = aset;
var G__13044 = (array[idx]);
var G__13045 = idx2;
var G__13046 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__13043,G__13044,G__13045,G__13046) : cljs.core.apply.call(null,G__13043,G__13044,G__13045,G__13046));
};
var G__13047 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__13048__i = 0, G__13048__a = new Array(arguments.length -  3);
while (G__13048__i < G__13048__a.length) {G__13048__a[G__13048__i] = arguments[G__13048__i + 3]; ++G__13048__i;}
  idxv = new cljs.core.IndexedSeq(G__13048__a,0);
} 
return G__13047__delegate.call(this,array,idx,idx2,idxv);};
G__13047.cljs$lang$maxFixedArity = 3;
G__13047.cljs$lang$applyTo = (function (arglist__13049){
var array = cljs.core.first(arglist__13049);
arglist__13049 = cljs.core.next(arglist__13049);
var idx = cljs.core.first(arglist__13049);
arglist__13049 = cljs.core.next(arglist__13049);
var idx2 = cljs.core.first(arglist__13049);
var idxv = cljs.core.rest(arglist__13049);
return G__13047__delegate(array,idx,idx2,idxv);
});
G__13047.cljs$core$IFn$_invoke$arity$variadic = G__13047__delegate;
return G__13047;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__13050 = null;
if (arguments.length > 3) {
var G__13051__i = 0, G__13051__a = new Array(arguments.length -  3);
while (G__13051__i < G__13051__a.length) {G__13051__a[G__13051__i] = arguments[G__13051__i + 3]; ++G__13051__i;}
G__13050 = new cljs.core.IndexedSeq(G__13051__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__13050);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__13057 = (function (a,x){
a.push(x);

return a;
});
var G__13058 = [];
var G__13059 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13057,G__13058,G__13059) : cljs.core.reduce.call(null,G__13057,G__13058,G__13059));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__13060__i = 0, G__13060__a = new Array(arguments.length -  2);
while (G__13060__i < G__13060__a.length) {G__13060__a[G__13060__i] = arguments[G__13060__i + 2]; ++G__13060__i;}
  args = new cljs.core.IndexedSeq(G__13060__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__13061){
var obj = cljs.core.first(arglist__13061);
arglist__13061 = cljs.core.next(arglist__13061);
var s = cljs.core.first(arglist__13061);
var args = cljs.core.rest(arglist__13061);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj13063 = {};
return obj13063;
})();


cljs.core.IFn = (function (){var obj13065 = {};
return obj13065;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13111 = x__4418__auto__;
return goog.typeOf(G__13111);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13113 = x__4418__auto__;
return goog.typeOf(G__13113);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13115 = x__4418__auto__;
return goog.typeOf(G__13115);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13117 = x__4418__auto__;
return goog.typeOf(G__13117);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13119 = x__4418__auto__;
return goog.typeOf(G__13119);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13121 = x__4418__auto__;
return goog.typeOf(G__13121);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13123 = x__4418__auto__;
return goog.typeOf(G__13123);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13125 = x__4418__auto__;
return goog.typeOf(G__13125);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13127 = x__4418__auto__;
return goog.typeOf(G__13127);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13129 = x__4418__auto__;
return goog.typeOf(G__13129);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13131 = x__4418__auto__;
return goog.typeOf(G__13131);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13133 = x__4418__auto__;
return goog.typeOf(G__13133);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13135 = x__4418__auto__;
return goog.typeOf(G__13135);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13137 = x__4418__auto__;
return goog.typeOf(G__13137);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13139 = x__4418__auto__;
return goog.typeOf(G__13139);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13141 = x__4418__auto__;
return goog.typeOf(G__13141);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13143 = x__4418__auto__;
return goog.typeOf(G__13143);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13145 = x__4418__auto__;
return goog.typeOf(G__13145);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13147 = x__4418__auto__;
return goog.typeOf(G__13147);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13149 = x__4418__auto__;
return goog.typeOf(G__13149);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13151 = x__4418__auto__;
return goog.typeOf(G__13151);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._invoke[(function (){var G__13153 = x__4418__auto__;
return goog.typeOf(G__13153);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._invoke["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj13155 = {};
return obj13155;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3762__auto__ = value;
if(and__3762__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3762__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4418__auto__ = (((value == null))?null:value);
return (function (){var or__3774__auto__ = (cljs.core._clone[(function (){var G__13159 = x__4418__auto__;
return goog.typeOf(G__13159);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._clone["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj13161 = {};
return obj13161;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._count[(function (){var G__13165 = x__4418__auto__;
return goog.typeOf(G__13165);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._count["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj13167 = {};
return obj13167;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._empty[(function (){var G__13171 = x__4418__auto__;
return goog.typeOf(G__13171);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._empty["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj13173 = {};
return obj13173;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._conj[(function (){var G__13177 = x__4418__auto__;
return goog.typeOf(G__13177);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._conj["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj13179 = {};
return obj13179;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._nth[(function (){var G__13185 = x__4418__auto__;
return goog.typeOf(G__13185);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._nth["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._nth[(function (){var G__13187 = x__4418__auto__;
return goog.typeOf(G__13187);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._nth["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj13189 = {};
return obj13189;
})();


cljs.core.ISeq = (function (){var obj13191 = {};
return obj13191;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._first[(function (){var G__13195 = x__4418__auto__;
return goog.typeOf(G__13195);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._first["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._rest[(function (){var G__13199 = x__4418__auto__;
return goog.typeOf(G__13199);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._rest["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj13201 = {};
return obj13201;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._next[(function (){var G__13205 = x__4418__auto__;
return goog.typeOf(G__13205);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._next["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj13207 = {};
return obj13207;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._lookup[(function (){var G__13213 = x__4418__auto__;
return goog.typeOf(G__13213);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._lookup["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._lookup[(function (){var G__13215 = x__4418__auto__;
return goog.typeOf(G__13215);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._lookup["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj13217 = {};
return obj13217;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__13221 = x__4418__auto__;
return goog.typeOf(G__13221);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._assoc[(function (){var G__13225 = x__4418__auto__;
return goog.typeOf(G__13225);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._assoc["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj13227 = {};
return obj13227;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._dissoc[(function (){var G__13231 = x__4418__auto__;
return goog.typeOf(G__13231);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj13233 = {};
return obj13233;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._key[(function (){var G__13237 = x__4418__auto__;
return goog.typeOf(G__13237);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._key["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._val[(function (){var G__13241 = x__4418__auto__;
return goog.typeOf(G__13241);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._val["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj13243 = {};
return obj13243;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._disjoin[(function (){var G__13247 = x__4418__auto__;
return goog.typeOf(G__13247);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj13249 = {};
return obj13249;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._peek[(function (){var G__13253 = x__4418__auto__;
return goog.typeOf(G__13253);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._peek["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._pop[(function (){var G__13257 = x__4418__auto__;
return goog.typeOf(G__13257);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._pop["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj13259 = {};
return obj13259;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._assoc_n[(function (){var G__13263 = x__4418__auto__;
return goog.typeOf(G__13263);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj13265 = {};
return obj13265;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._deref[(function (){var G__13269 = x__4418__auto__;
return goog.typeOf(G__13269);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._deref["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj13271 = {};
return obj13271;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._deref_with_timeout[(function (){var G__13275 = x__4418__auto__;
return goog.typeOf(G__13275);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj13277 = {};
return obj13277;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._meta[(function (){var G__13281 = x__4418__auto__;
return goog.typeOf(G__13281);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._meta["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj13283 = {};
return obj13283;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._with_meta[(function (){var G__13287 = x__4418__auto__;
return goog.typeOf(G__13287);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj13289 = {};
return obj13289;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._reduce[(function (){var G__13295 = x__4418__auto__;
return goog.typeOf(G__13295);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._reduce["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._reduce[(function (){var G__13297 = x__4418__auto__;
return goog.typeOf(G__13297);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._reduce["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj13299 = {};
return obj13299;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._kv_reduce[(function (){var G__13303 = x__4418__auto__;
return goog.typeOf(G__13303);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj13305 = {};
return obj13305;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._equiv[(function (){var G__13309 = x__4418__auto__;
return goog.typeOf(G__13309);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._equiv["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj13311 = {};
return obj13311;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._hash[(function (){var G__13315 = x__4418__auto__;
return goog.typeOf(G__13315);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._hash["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj13317 = {};
return obj13317;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._seq[(function (){var G__13321 = x__4418__auto__;
return goog.typeOf(G__13321);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._seq["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj13323 = {};
return obj13323;
})();


cljs.core.IList = (function (){var obj13325 = {};
return obj13325;
})();


cljs.core.IRecord = (function (){var obj13327 = {};
return obj13327;
})();


cljs.core.IReversible = (function (){var obj13329 = {};
return obj13329;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._rseq[(function (){var G__13333 = x__4418__auto__;
return goog.typeOf(G__13333);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._rseq["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj13335 = {};
return obj13335;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._sorted_seq[(function (){var G__13339 = x__4418__auto__;
return goog.typeOf(G__13339);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._sorted_seq_from[(function (){var G__13343 = x__4418__auto__;
return goog.typeOf(G__13343);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._entry_key[(function (){var G__13347 = x__4418__auto__;
return goog.typeOf(G__13347);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._comparator[(function (){var G__13351 = x__4418__auto__;
return goog.typeOf(G__13351);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._comparator["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj13353 = {};
return obj13353;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3762__auto__ = writer;
if(and__3762__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3762__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4418__auto__ = (((writer == null))?null:writer);
return (function (){var or__3774__auto__ = (cljs.core._write[(function (){var G__13357 = x__4418__auto__;
return goog.typeOf(G__13357);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._write["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3762__auto__ = writer;
if(and__3762__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3762__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4418__auto__ = (((writer == null))?null:writer);
return (function (){var or__3774__auto__ = (cljs.core._flush[(function (){var G__13361 = x__4418__auto__;
return goog.typeOf(G__13361);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._flush["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj13363 = {};
return obj13363;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._pr_writer[(function (){var G__13367 = x__4418__auto__;
return goog.typeOf(G__13367);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj13369 = {};
return obj13369;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3762__auto__ = d;
if(and__3762__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3762__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4418__auto__ = (((d == null))?null:d);
return (function (){var or__3774__auto__ = (cljs.core._realized_QMARK_[(function (){var G__13373 = x__4418__auto__;
return goog.typeOf(G__13373);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj13375 = {};
return obj13375;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._notify_watches[(function (){var G__13379 = x__4418__auto__;
return goog.typeOf(G__13379);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._add_watch[(function (){var G__13383 = x__4418__auto__;
return goog.typeOf(G__13383);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3762__auto__ = this$;
if(and__3762__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3762__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4418__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3774__auto__ = (cljs.core._remove_watch[(function (){var G__13387 = x__4418__auto__;
return goog.typeOf(G__13387);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj13389 = {};
return obj13389;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._as_transient[(function (){var G__13393 = x__4418__auto__;
return goog.typeOf(G__13393);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj13395 = {};
return obj13395;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3762__auto__ = tcoll;
if(and__3762__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3762__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4418__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3774__auto__ = (cljs.core._conj_BANG_[(function (){var G__13399 = x__4418__auto__;
return goog.typeOf(G__13399);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3762__auto__ = tcoll;
if(and__3762__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3762__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4418__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3774__auto__ = (cljs.core._persistent_BANG_[(function (){var G__13403 = x__4418__auto__;
return goog.typeOf(G__13403);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj13405 = {};
return obj13405;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3762__auto__ = tcoll;
if(and__3762__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3762__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4418__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3774__auto__ = (cljs.core._assoc_BANG_[(function (){var G__13409 = x__4418__auto__;
return goog.typeOf(G__13409);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj13411 = {};
return obj13411;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3762__auto__ = tcoll;
if(and__3762__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3762__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4418__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3774__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__13415 = x__4418__auto__;
return goog.typeOf(G__13415);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj13417 = {};
return obj13417;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3762__auto__ = tcoll;
if(and__3762__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3762__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4418__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3774__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__13421 = x__4418__auto__;
return goog.typeOf(G__13421);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3762__auto__ = tcoll;
if(and__3762__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3762__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4418__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3774__auto__ = (cljs.core._pop_BANG_[(function (){var G__13425 = x__4418__auto__;
return goog.typeOf(G__13425);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj13427 = {};
return obj13427;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3762__auto__ = tcoll;
if(and__3762__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3762__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4418__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3774__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__13431 = x__4418__auto__;
return goog.typeOf(G__13431);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj13433 = {};
return obj13433;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3762__auto__ = x;
if(and__3762__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3762__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4418__auto__ = (((x == null))?null:x);
return (function (){var or__3774__auto__ = (cljs.core._compare[(function (){var G__13437 = x__4418__auto__;
return goog.typeOf(G__13437);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._compare["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj13439 = {};
return obj13439;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._drop_first[(function (){var G__13443 = x__4418__auto__;
return goog.typeOf(G__13443);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj13445 = {};
return obj13445;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._chunked_first[(function (){var G__13449 = x__4418__auto__;
return goog.typeOf(G__13449);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._chunked_rest[(function (){var G__13453 = x__4418__auto__;
return goog.typeOf(G__13453);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj13455 = {};
return obj13455;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._chunked_next[(function (){var G__13459 = x__4418__auto__;
return goog.typeOf(G__13459);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj13461 = {};
return obj13461;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3762__auto__ = x;
if(and__3762__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3762__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4418__auto__ = (((x == null))?null:x);
return (function (){var or__3774__auto__ = (cljs.core._name[(function (){var G__13465 = x__4418__auto__;
return goog.typeOf(G__13465);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._name["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3762__auto__ = x;
if(and__3762__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3762__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4418__auto__ = (((x == null))?null:x);
return (function (){var or__3774__auto__ = (cljs.core._namespace[(function (){var G__13469 = x__4418__auto__;
return goog.typeOf(G__13469);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._namespace["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj13471 = {};
return obj13471;
})();


cljs.core.IReset = (function (){var obj13473 = {};
return obj13473;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._reset_BANG_[(function (){var G__13477 = x__4418__auto__;
return goog.typeOf(G__13477);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj13479 = {};
return obj13479;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._swap_BANG_[(function (){var G__13489 = x__4418__auto__;
return goog.typeOf(G__13489);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._swap_BANG_[(function (){var G__13491 = x__4418__auto__;
return goog.typeOf(G__13491);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._swap_BANG_[(function (){var G__13493 = x__4418__auto__;
return goog.typeOf(G__13493);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._swap_BANG_[(function (){var G__13495 = x__4418__auto__;
return goog.typeOf(G__13495);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj13497 = {};
return obj13497;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3762__auto__ = o;
if(and__3762__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3762__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4418__auto__ = (((o == null))?null:o);
return (function (){var or__3774__auto__ = (cljs.core._vreset_BANG_[(function (){var G__13501 = x__4418__auto__;
return goog.typeOf(G__13501);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj13503 = {};
return obj13503;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3762__auto__ = coll;
if(and__3762__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3762__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4418__auto__ = (((coll == null))?null:coll);
return (function (){var or__3774__auto__ = (cljs.core._iterator[(function (){var G__13507 = x__4418__auto__;
return goog.typeOf(G__13507);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._iterator["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__13510 = (4294967295);
var G__13511 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__13510,G__13511) : Math.imul.call(null,G__13510,G__13511));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__13514 = a;
var G__13515 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__13514,G__13515) : Math.imul.call(null,G__13514,G__13515));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__13516 = (i + (2));
var G__13517 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__13516;
h1 = G__13517;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj13519 = {};
return obj13519;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__13520 = (i + (1));
var G__13521 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__13520;
hash = G__13521;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj13525 = {};
return obj13525;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__13528 = o;
if(G__13528){
var bit__4448__auto__ = (G__13528.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4448__auto__) || (G__13528.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__13529 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__13529) : Math.floor.call(null,G__13529));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3762__auto__ = cljs.core.not(a.ns);
if(and__3762__auto__){
return b.ns;
} else {
return and__3762__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__13536 = a.ns;
var G__13537 = b.ns;
return goog.array.defaultCompare(G__13536,G__13537);
})();
if(((0) === nsc)){
var G__13538 = a.name;
var G__13539 = b.name;
return goog.array.defaultCompare(G__13538,G__13539);
} else {
return nsc;
}
}
} else {
var G__13540 = a.name;
var G__13541 = b.name;
return goog.array.defaultCompare(G__13540,G__13541);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4195__auto__ = self__._hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__13543 = null;
var G__13543__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__13543__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__13543 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__13543__2.call(this,self__,coll);
case 3:
return G__13543__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13543.cljs$core$IFn$_invoke$arity$2 = G__13543__2;
G__13543.cljs$core$IFn$_invoke$arity$3 = G__13543__3;
return G__13543;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args13542){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13542)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__13591 = null;
var G__13591__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__13591__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__13591__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__13591__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__13591__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__13591__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__13591__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__13591__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__13591__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__13591__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__13591__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__13591__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__13591__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__13591__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__13591__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__13591__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__13591__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__13591__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__13591__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__13591__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__13591__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__13591__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13547 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__13548 = a;
var G__13549 = b;
var G__13550 = c;
var G__13551 = d;
var G__13552 = e;
var G__13553 = f;
var G__13554 = g;
var G__13555 = h;
var G__13556 = i;
var G__13557 = j;
var G__13558 = k;
var G__13559 = l;
var G__13560 = m;
var G__13561 = n;
var G__13562 = o;
var G__13563 = p;
var G__13564 = q;
var G__13565 = r;
var G__13566 = s;
var G__13567 = t;
var G__13568 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13547,G__13548,G__13549,G__13550,G__13551,G__13552,G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559,G__13560,G__13561,G__13562,G__13563,G__13564,G__13565,G__13566,G__13567,G__13568) : cljs.core.apply.call(null,G__13547,G__13548,G__13549,G__13550,G__13551,G__13552,G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559,G__13560,G__13561,G__13562,G__13563,G__13564,G__13565,G__13566,G__13567,G__13568));
});
G__13591 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13591__1.call(this,self__);
case 2:
return G__13591__2.call(this,self__,a);
case 3:
return G__13591__3.call(this,self__,a,b);
case 4:
return G__13591__4.call(this,self__,a,b,c);
case 5:
return G__13591__5.call(this,self__,a,b,c,d);
case 6:
return G__13591__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13591__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13591__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13591__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13591__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13591__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13591__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13591__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13591__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13591__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13591__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13591__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13591__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13591__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13591__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13591__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13591__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13591.cljs$core$IFn$_invoke$arity$1 = G__13591__1;
G__13591.cljs$core$IFn$_invoke$arity$2 = G__13591__2;
G__13591.cljs$core$IFn$_invoke$arity$3 = G__13591__3;
G__13591.cljs$core$IFn$_invoke$arity$4 = G__13591__4;
G__13591.cljs$core$IFn$_invoke$arity$5 = G__13591__5;
G__13591.cljs$core$IFn$_invoke$arity$6 = G__13591__6;
G__13591.cljs$core$IFn$_invoke$arity$7 = G__13591__7;
G__13591.cljs$core$IFn$_invoke$arity$8 = G__13591__8;
G__13591.cljs$core$IFn$_invoke$arity$9 = G__13591__9;
G__13591.cljs$core$IFn$_invoke$arity$10 = G__13591__10;
G__13591.cljs$core$IFn$_invoke$arity$11 = G__13591__11;
G__13591.cljs$core$IFn$_invoke$arity$12 = G__13591__12;
G__13591.cljs$core$IFn$_invoke$arity$13 = G__13591__13;
G__13591.cljs$core$IFn$_invoke$arity$14 = G__13591__14;
G__13591.cljs$core$IFn$_invoke$arity$15 = G__13591__15;
G__13591.cljs$core$IFn$_invoke$arity$16 = G__13591__16;
G__13591.cljs$core$IFn$_invoke$arity$17 = G__13591__17;
G__13591.cljs$core$IFn$_invoke$arity$18 = G__13591__18;
G__13591.cljs$core$IFn$_invoke$arity$19 = G__13591__19;
G__13591.cljs$core$IFn$_invoke$arity$20 = G__13591__20;
G__13591.cljs$core$IFn$_invoke$arity$21 = G__13591__21;
G__13591.cljs$core$IFn$_invoke$arity$22 = G__13591__22;
return G__13591;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args13546){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13546)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__13569 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__13570 = a;
var G__13571 = b;
var G__13572 = c;
var G__13573 = d;
var G__13574 = e;
var G__13575 = f;
var G__13576 = g;
var G__13577 = h;
var G__13578 = i;
var G__13579 = j;
var G__13580 = k;
var G__13581 = l;
var G__13582 = m;
var G__13583 = n;
var G__13584 = o;
var G__13585 = p;
var G__13586 = q;
var G__13587 = r;
var G__13588 = s;
var G__13589 = t;
var G__13590 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575,G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583,G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590) : cljs.core.apply.call(null,G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575,G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583,G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__13593 = x;
if(G__13593){
var bit__4455__auto__ = null;
if(cljs.core.truth_((function (){var or__3774__auto__ = bit__4455__auto__;
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return G__13593.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__13593.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__13593);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__13593);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__13595 = value;
if(G__13595){
var bit__4455__auto__ = (G__13595.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4455__auto__) || (G__13595.cljs$core$ICloneable$)){
return true;
} else {
if((!G__13595.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__13595);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__13595);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13597 = coll;
if(G__13597){
var bit__4448__auto__ = (G__13597.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4448__auto__) || (G__13597.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13599 = coll;
if(G__13599){
var bit__4448__auto__ = (G__13599.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4448__auto__) || (G__13599.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__13601 = coll;
if(G__13601){
var bit__4448__auto__ = (G__13601.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4448__auto__) || (G__13601.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13603 = coll;
if(G__13603){
var bit__4448__auto__ = (G__13603.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4448__auto__) || (G__13603.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__13608__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__13609 = y;
var G__13610 = cljs.core.first(more);
var G__13611 = cljs.core.next(more);
x = G__13609;
y = G__13610;
more = G__13611;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13608 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13612__i = 0, G__13612__a = new Array(arguments.length -  2);
while (G__13612__i < G__13612__a.length) {G__13612__a[G__13612__i] = arguments[G__13612__i + 2]; ++G__13612__i;}
  more = new cljs.core.IndexedSeq(G__13612__a,0);
} 
return G__13608__delegate.call(this,x,y,more);};
G__13608.cljs$lang$maxFixedArity = 2;
G__13608.cljs$lang$applyTo = (function (arglist__13613){
var x = cljs.core.first(arglist__13613);
arglist__13613 = cljs.core.next(arglist__13613);
var y = cljs.core.first(arglist__13613);
var more = cljs.core.rest(arglist__13613);
return G__13608__delegate(x,y,more);
});
G__13608.cljs$core$IFn$_invoke$arity$variadic = G__13608__delegate;
return G__13608;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__13614 = null;
if (arguments.length > 2) {
var G__13615__i = 0, G__13615__a = new Array(arguments.length -  2);
while (G__13615__i < G__13615__a.length) {G__13615__a[G__13615__i] = arguments[G__13615__i + 2]; ++G__13615__i;}
G__13614 = new cljs.core.IndexedSeq(G__13615__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13614);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__13616 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__13616) : cljs.core.es6_iterator_seq.call(null,G__13616));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__13617 = (n + (1));
var G__13618 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__13619 = cljs.core.next(coll__$1);
n = G__13617;
hash_code = G__13618;
coll__$1 = G__13619;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__13620 = (n + (1));
var G__13621 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__13622 = cljs.core.next(coll__$1);
n = G__13620;
hash_code = G__13621;
coll__$1 = G__13622;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__13623 = o;
return goog.getUid(G__13623);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__13625 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13625) : cljs.core.deref.call(null,G__13625));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__13632 = val;
var G__13633 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13632,G__13633) : f.call(null,G__13632,G__13633));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13638 = nval;
var G__13639 = (n + (1));
val = G__13638;
n = G__13639;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__13634 = val__$1;
var G__13635 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13634,G__13635) : f.call(null,G__13634,G__13635));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13640 = nval;
var G__13641 = (n + (1));
val__$1 = G__13640;
n = G__13641;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__13636 = val__$1;
var G__13637 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13636,G__13637) : f.call(null,G__13636,G__13637));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13642 = nval;
var G__13643 = (n + (1));
val__$1 = G__13642;
n = G__13643;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__13650 = val;
var G__13651 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13650,G__13651) : f.call(null,G__13650,G__13651));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13656 = nval;
var G__13657 = (n + (1));
val = G__13656;
n = G__13657;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__13652 = val__$1;
var G__13653 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13652,G__13653) : f.call(null,G__13652,G__13653));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13658 = nval;
var G__13659 = (n + (1));
val__$1 = G__13658;
n = G__13659;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__13654 = val__$1;
var G__13655 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13654,G__13655) : f.call(null,G__13654,G__13655));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13660 = nval;
var G__13661 = (n + (1));
val__$1 = G__13660;
n = G__13661;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__13663 = x;
if(G__13663){
var bit__4455__auto__ = (G__13663.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4455__auto__) || (G__13663.cljs$core$ICounted$)){
return true;
} else {
if((!G__13663.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__13663);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__13663);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__13665 = x;
if(G__13665){
var bit__4455__auto__ = (G__13665.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4455__auto__) || (G__13665.cljs$core$IIndexed$)){
return true;
} else {
if((!G__13665.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__13665);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__13665);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__13666 = coll__$1;
var G__13667 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13666,G__13667) : cljs.core.equiv_sequential.call(null,G__13666,G__13667));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13668 = o;
var G__13669 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13668,G__13669) : cljs.core.cons.call(null,G__13668,G__13669));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__13672 = coll__$1;
var G__13673 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13672,G__13673) : cljs.core.equiv_sequential.call(null,G__13672,G__13673));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__13674 = cljs.core.List.EMPTY;
var G__13675 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__13674,G__13675) : cljs.core.with_meta.call(null,G__13674,G__13675));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__13676 = f;
var G__13677 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__13676,G__13677) : cljs.core.seq_reduce.call(null,G__13676,G__13677));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__13678 = f;
var G__13679 = start;
var G__13680 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__13678,G__13679,G__13680) : cljs.core.seq_reduce.call(null,G__13678,G__13679,G__13680));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13681 = o;
var G__13682 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13681,G__13682) : cljs.core.cons.call(null,G__13681,G__13682));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__13683 = sn;
s = G__13683;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__13688__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__13689 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__13690 = cljs.core.first(xs);
var G__13691 = cljs.core.next(xs);
coll = G__13689;
x = G__13690;
xs = G__13691;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__13688 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__13692__i = 0, G__13692__a = new Array(arguments.length -  2);
while (G__13692__i < G__13692__a.length) {G__13692__a[G__13692__i] = arguments[G__13692__i + 2]; ++G__13692__i;}
  xs = new cljs.core.IndexedSeq(G__13692__a,0);
} 
return G__13688__delegate.call(this,coll,x,xs);};
G__13688.cljs$lang$maxFixedArity = 2;
G__13688.cljs$lang$applyTo = (function (arglist__13693){
var coll = cljs.core.first(arglist__13693);
arglist__13693 = cljs.core.next(arglist__13693);
var x = cljs.core.first(arglist__13693);
var xs = cljs.core.rest(arglist__13693);
return G__13688__delegate(coll,x,xs);
});
G__13688.cljs$core$IFn$_invoke$arity$variadic = G__13688__delegate;
return G__13688;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__13694 = null;
if (arguments.length > 2) {
var G__13695__i = 0, G__13695__a = new Array(arguments.length -  2);
while (G__13695__i < G__13695__a.length) {G__13695__a[G__13695__i] = arguments[G__13695__i + 2]; ++G__13695__i;}
G__13694 = new cljs.core.IndexedSeq(G__13695__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__13694);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__13696 = cljs.core.next(s);
var G__13697 = (acc + (1));
s = G__13696;
acc = G__13697;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__13699 = coll;
if(G__13699){
var bit__4448__auto__ = (G__13699.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4448__auto__) || (G__13699.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__13700 = cljs.core.next(coll);
var G__13701 = (n - (1));
coll = G__13700;
n = G__13701;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__13702 = cljs.core.next(coll);
var G__13703 = (n - (1));
var G__13704 = not_found;
coll = G__13702;
n = G__13703;
not_found = G__13704;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__13709 = coll;
if(G__13709){
var bit__4448__auto__ = (G__13709.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4448__auto__) || (G__13709.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__13710 = coll;
if(G__13710){
var bit__4455__auto__ = (G__13710.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4455__auto__) || (G__13710.cljs$core$ISeq$)){
return true;
} else {
if((!G__13710.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13710);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13710);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__13711 = coll;
if(G__13711){
var bit__4448__auto__ = (G__13711.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4448__auto__) || (G__13711.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__13712 = coll;
if(G__13712){
var bit__4455__auto__ = (G__13712.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4455__auto__) || (G__13712.cljs$core$ISeq$)){
return true;
} else {
if((!G__13712.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13712);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13712);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__13713 = (n__$1 - (1));
var G__13714 = cljs.core.rest(xs);
n__$1 = G__13713;
xs = G__13714;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__13717 = o;
if(G__13717){
var bit__4448__auto__ = (G__13717.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4448__auto__) || (G__13717.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__13718 = o;
if(G__13718){
var bit__4448__auto__ = (G__13718.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4448__auto__) || (G__13718.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__13722__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__13723 = ret;
var G__13724 = cljs.core.first(kvs);
var G__13725 = cljs.core.second(kvs);
var G__13726 = cljs.core.nnext(kvs);
coll = G__13723;
k = G__13724;
v = G__13725;
kvs = G__13726;
continue;
} else {
return ret;
}
break;
}
};
var G__13722 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__13727__i = 0, G__13727__a = new Array(arguments.length -  3);
while (G__13727__i < G__13727__a.length) {G__13727__a[G__13727__i] = arguments[G__13727__i + 3]; ++G__13727__i;}
  kvs = new cljs.core.IndexedSeq(G__13727__a,0);
} 
return G__13722__delegate.call(this,coll,k,v,kvs);};
G__13722.cljs$lang$maxFixedArity = 3;
G__13722.cljs$lang$applyTo = (function (arglist__13728){
var coll = cljs.core.first(arglist__13728);
arglist__13728 = cljs.core.next(arglist__13728);
var k = cljs.core.first(arglist__13728);
arglist__13728 = cljs.core.next(arglist__13728);
var v = cljs.core.first(arglist__13728);
var kvs = cljs.core.rest(arglist__13728);
return G__13722__delegate(coll,k,v,kvs);
});
G__13722.cljs$core$IFn$_invoke$arity$variadic = G__13722__delegate;
return G__13722;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__13729 = null;
if (arguments.length > 3) {
var G__13730__i = 0, G__13730__a = new Array(arguments.length -  3);
while (G__13730__i < G__13730__a.length) {G__13730__a[G__13730__i] = arguments[G__13730__i + 3]; ++G__13730__i;}
G__13729 = new cljs.core.IndexedSeq(G__13730__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__13729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__13733__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__13734 = ret;
var G__13735 = cljs.core.first(ks);
var G__13736 = cljs.core.next(ks);
coll = G__13734;
k = G__13735;
ks = G__13736;
continue;
} else {
return ret;
}
}
break;
}
};
var G__13733 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13737__i = 0, G__13737__a = new Array(arguments.length -  2);
while (G__13737__i < G__13737__a.length) {G__13737__a[G__13737__i] = arguments[G__13737__i + 2]; ++G__13737__i;}
  ks = new cljs.core.IndexedSeq(G__13737__a,0);
} 
return G__13733__delegate.call(this,coll,k,ks);};
G__13733.cljs$lang$maxFixedArity = 2;
G__13733.cljs$lang$applyTo = (function (arglist__13738){
var coll = cljs.core.first(arglist__13738);
arglist__13738 = cljs.core.next(arglist__13738);
var k = cljs.core.first(arglist__13738);
var ks = cljs.core.rest(arglist__13738);
return G__13733__delegate(coll,k,ks);
});
G__13733.cljs$core$IFn$_invoke$arity$variadic = G__13733__delegate;
return G__13733;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__13739 = null;
if (arguments.length > 2) {
var G__13740__i = 0, G__13740__a = new Array(arguments.length -  2);
while (G__13740__i < G__13740__a.length) {G__13740__a[G__13740__i] = arguments[G__13740__i + 2]; ++G__13740__i;}
G__13739 = new cljs.core.IndexedSeq(G__13740__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__13739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3774__auto__ = (function (){var G__13745 = f;
return goog.isFunction(G__13745);
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var G__13746 = f;
if(G__13746){
var bit__4455__auto__ = null;
if(cljs.core.truth_((function (){var or__3774__auto____$1 = bit__4455__auto__;
if(cljs.core.truth_(or__3774__auto____$1)){
return or__3774__auto____$1;
} else {
return G__13746.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__13746.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__13746);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__13746);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__14212 = null;
var G__14212__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__14212__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13748 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__13748) : self__.afn.call(null,G__13748));
});
var G__14212__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13749 = a;
var G__13750 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__13749,G__13750) : self__.afn.call(null,G__13749,G__13750));
});
var G__14212__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13751 = a;
var G__13752 = b;
var G__13753 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__13751,G__13752,G__13753) : self__.afn.call(null,G__13751,G__13752,G__13753));
});
var G__14212__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13754 = a;
var G__13755 = b;
var G__13756 = c;
var G__13757 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__13754,G__13755,G__13756,G__13757) : self__.afn.call(null,G__13754,G__13755,G__13756,G__13757));
});
var G__14212__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13758 = a;
var G__13759 = b;
var G__13760 = c;
var G__13761 = d;
var G__13762 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__13758,G__13759,G__13760,G__13761,G__13762) : self__.afn.call(null,G__13758,G__13759,G__13760,G__13761,G__13762));
});
var G__14212__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13763 = a;
var G__13764 = b;
var G__13765 = c;
var G__13766 = d;
var G__13767 = e;
var G__13768 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__13763,G__13764,G__13765,G__13766,G__13767,G__13768) : self__.afn.call(null,G__13763,G__13764,G__13765,G__13766,G__13767,G__13768));
});
var G__14212__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13769 = a;
var G__13770 = b;
var G__13771 = c;
var G__13772 = d;
var G__13773 = e;
var G__13774 = f;
var G__13775 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__13769,G__13770,G__13771,G__13772,G__13773,G__13774,G__13775) : self__.afn.call(null,G__13769,G__13770,G__13771,G__13772,G__13773,G__13774,G__13775));
});
var G__14212__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13776 = a;
var G__13777 = b;
var G__13778 = c;
var G__13779 = d;
var G__13780 = e;
var G__13781 = f;
var G__13782 = g;
var G__13783 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__13776,G__13777,G__13778,G__13779,G__13780,G__13781,G__13782,G__13783) : self__.afn.call(null,G__13776,G__13777,G__13778,G__13779,G__13780,G__13781,G__13782,G__13783));
});
var G__14212__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13784 = a;
var G__13785 = b;
var G__13786 = c;
var G__13787 = d;
var G__13788 = e;
var G__13789 = f;
var G__13790 = g;
var G__13791 = h;
var G__13792 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__13784,G__13785,G__13786,G__13787,G__13788,G__13789,G__13790,G__13791,G__13792) : self__.afn.call(null,G__13784,G__13785,G__13786,G__13787,G__13788,G__13789,G__13790,G__13791,G__13792));
});
var G__14212__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13793 = a;
var G__13794 = b;
var G__13795 = c;
var G__13796 = d;
var G__13797 = e;
var G__13798 = f;
var G__13799 = g;
var G__13800 = h;
var G__13801 = i;
var G__13802 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__13793,G__13794,G__13795,G__13796,G__13797,G__13798,G__13799,G__13800,G__13801,G__13802) : self__.afn.call(null,G__13793,G__13794,G__13795,G__13796,G__13797,G__13798,G__13799,G__13800,G__13801,G__13802));
});
var G__14212__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13803 = a;
var G__13804 = b;
var G__13805 = c;
var G__13806 = d;
var G__13807 = e;
var G__13808 = f;
var G__13809 = g;
var G__13810 = h;
var G__13811 = i;
var G__13812 = j;
var G__13813 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__13803,G__13804,G__13805,G__13806,G__13807,G__13808,G__13809,G__13810,G__13811,G__13812,G__13813) : self__.afn.call(null,G__13803,G__13804,G__13805,G__13806,G__13807,G__13808,G__13809,G__13810,G__13811,G__13812,G__13813));
});
var G__14212__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13814 = a;
var G__13815 = b;
var G__13816 = c;
var G__13817 = d;
var G__13818 = e;
var G__13819 = f;
var G__13820 = g;
var G__13821 = h;
var G__13822 = i;
var G__13823 = j;
var G__13824 = k;
var G__13825 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__13814,G__13815,G__13816,G__13817,G__13818,G__13819,G__13820,G__13821,G__13822,G__13823,G__13824,G__13825) : self__.afn.call(null,G__13814,G__13815,G__13816,G__13817,G__13818,G__13819,G__13820,G__13821,G__13822,G__13823,G__13824,G__13825));
});
var G__14212__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13826 = a;
var G__13827 = b;
var G__13828 = c;
var G__13829 = d;
var G__13830 = e;
var G__13831 = f;
var G__13832 = g;
var G__13833 = h;
var G__13834 = i;
var G__13835 = j;
var G__13836 = k;
var G__13837 = l;
var G__13838 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__13826,G__13827,G__13828,G__13829,G__13830,G__13831,G__13832,G__13833,G__13834,G__13835,G__13836,G__13837,G__13838) : self__.afn.call(null,G__13826,G__13827,G__13828,G__13829,G__13830,G__13831,G__13832,G__13833,G__13834,G__13835,G__13836,G__13837,G__13838));
});
var G__14212__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13839 = a;
var G__13840 = b;
var G__13841 = c;
var G__13842 = d;
var G__13843 = e;
var G__13844 = f;
var G__13845 = g;
var G__13846 = h;
var G__13847 = i;
var G__13848 = j;
var G__13849 = k;
var G__13850 = l;
var G__13851 = m;
var G__13852 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__13839,G__13840,G__13841,G__13842,G__13843,G__13844,G__13845,G__13846,G__13847,G__13848,G__13849,G__13850,G__13851,G__13852) : self__.afn.call(null,G__13839,G__13840,G__13841,G__13842,G__13843,G__13844,G__13845,G__13846,G__13847,G__13848,G__13849,G__13850,G__13851,G__13852));
});
var G__14212__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13853 = a;
var G__13854 = b;
var G__13855 = c;
var G__13856 = d;
var G__13857 = e;
var G__13858 = f;
var G__13859 = g;
var G__13860 = h;
var G__13861 = i;
var G__13862 = j;
var G__13863 = k;
var G__13864 = l;
var G__13865 = m;
var G__13866 = n;
var G__13867 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__13853,G__13854,G__13855,G__13856,G__13857,G__13858,G__13859,G__13860,G__13861,G__13862,G__13863,G__13864,G__13865,G__13866,G__13867) : self__.afn.call(null,G__13853,G__13854,G__13855,G__13856,G__13857,G__13858,G__13859,G__13860,G__13861,G__13862,G__13863,G__13864,G__13865,G__13866,G__13867));
});
var G__14212__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13868 = a;
var G__13869 = b;
var G__13870 = c;
var G__13871 = d;
var G__13872 = e;
var G__13873 = f;
var G__13874 = g;
var G__13875 = h;
var G__13876 = i;
var G__13877 = j;
var G__13878 = k;
var G__13879 = l;
var G__13880 = m;
var G__13881 = n;
var G__13882 = o;
var G__13883 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__13868,G__13869,G__13870,G__13871,G__13872,G__13873,G__13874,G__13875,G__13876,G__13877,G__13878,G__13879,G__13880,G__13881,G__13882,G__13883) : self__.afn.call(null,G__13868,G__13869,G__13870,G__13871,G__13872,G__13873,G__13874,G__13875,G__13876,G__13877,G__13878,G__13879,G__13880,G__13881,G__13882,G__13883));
});
var G__14212__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13884 = a;
var G__13885 = b;
var G__13886 = c;
var G__13887 = d;
var G__13888 = e;
var G__13889 = f;
var G__13890 = g;
var G__13891 = h;
var G__13892 = i;
var G__13893 = j;
var G__13894 = k;
var G__13895 = l;
var G__13896 = m;
var G__13897 = n;
var G__13898 = o;
var G__13899 = p;
var G__13900 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__13884,G__13885,G__13886,G__13887,G__13888,G__13889,G__13890,G__13891,G__13892,G__13893,G__13894,G__13895,G__13896,G__13897,G__13898,G__13899,G__13900) : self__.afn.call(null,G__13884,G__13885,G__13886,G__13887,G__13888,G__13889,G__13890,G__13891,G__13892,G__13893,G__13894,G__13895,G__13896,G__13897,G__13898,G__13899,G__13900));
});
var G__14212__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13901 = a;
var G__13902 = b;
var G__13903 = c;
var G__13904 = d;
var G__13905 = e;
var G__13906 = f;
var G__13907 = g;
var G__13908 = h;
var G__13909 = i;
var G__13910 = j;
var G__13911 = k;
var G__13912 = l;
var G__13913 = m;
var G__13914 = n;
var G__13915 = o;
var G__13916 = p;
var G__13917 = q;
var G__13918 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__13901,G__13902,G__13903,G__13904,G__13905,G__13906,G__13907,G__13908,G__13909,G__13910,G__13911,G__13912,G__13913,G__13914,G__13915,G__13916,G__13917,G__13918) : self__.afn.call(null,G__13901,G__13902,G__13903,G__13904,G__13905,G__13906,G__13907,G__13908,G__13909,G__13910,G__13911,G__13912,G__13913,G__13914,G__13915,G__13916,G__13917,G__13918));
});
var G__14212__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13919 = a;
var G__13920 = b;
var G__13921 = c;
var G__13922 = d;
var G__13923 = e;
var G__13924 = f;
var G__13925 = g;
var G__13926 = h;
var G__13927 = i;
var G__13928 = j;
var G__13929 = k;
var G__13930 = l;
var G__13931 = m;
var G__13932 = n;
var G__13933 = o;
var G__13934 = p;
var G__13935 = q;
var G__13936 = r;
var G__13937 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__13919,G__13920,G__13921,G__13922,G__13923,G__13924,G__13925,G__13926,G__13927,G__13928,G__13929,G__13930,G__13931,G__13932,G__13933,G__13934,G__13935,G__13936,G__13937) : self__.afn.call(null,G__13919,G__13920,G__13921,G__13922,G__13923,G__13924,G__13925,G__13926,G__13927,G__13928,G__13929,G__13930,G__13931,G__13932,G__13933,G__13934,G__13935,G__13936,G__13937));
});
var G__14212__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13938 = a;
var G__13939 = b;
var G__13940 = c;
var G__13941 = d;
var G__13942 = e;
var G__13943 = f;
var G__13944 = g;
var G__13945 = h;
var G__13946 = i;
var G__13947 = j;
var G__13948 = k;
var G__13949 = l;
var G__13950 = m;
var G__13951 = n;
var G__13952 = o;
var G__13953 = p;
var G__13954 = q;
var G__13955 = r;
var G__13956 = s;
var G__13957 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__13938,G__13939,G__13940,G__13941,G__13942,G__13943,G__13944,G__13945,G__13946,G__13947,G__13948,G__13949,G__13950,G__13951,G__13952,G__13953,G__13954,G__13955,G__13956,G__13957) : self__.afn.call(null,G__13938,G__13939,G__13940,G__13941,G__13942,G__13943,G__13944,G__13945,G__13946,G__13947,G__13948,G__13949,G__13950,G__13951,G__13952,G__13953,G__13954,G__13955,G__13956,G__13957));
});
var G__14212__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13958 = self__.afn;
var G__13959 = a;
var G__13960 = b;
var G__13961 = c;
var G__13962 = d;
var G__13963 = e;
var G__13964 = f;
var G__13965 = g;
var G__13966 = h;
var G__13967 = i;
var G__13968 = j;
var G__13969 = k;
var G__13970 = l;
var G__13971 = m;
var G__13972 = n;
var G__13973 = o;
var G__13974 = p;
var G__13975 = q;
var G__13976 = r;
var G__13977 = s;
var G__13978 = t;
var G__13979 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13958,G__13959,G__13960,G__13961,G__13962,G__13963,G__13964,G__13965,G__13966,G__13967,G__13968,G__13969,G__13970,G__13971,G__13972,G__13973,G__13974,G__13975,G__13976,G__13977,G__13978,G__13979) : cljs.core.apply.call(null,G__13958,G__13959,G__13960,G__13961,G__13962,G__13963,G__13964,G__13965,G__13966,G__13967,G__13968,G__13969,G__13970,G__13971,G__13972,G__13973,G__13974,G__13975,G__13976,G__13977,G__13978,G__13979));
});
G__14212 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__14212__1.call(this,self__);
case 2:
return G__14212__2.call(this,self__,a);
case 3:
return G__14212__3.call(this,self__,a,b);
case 4:
return G__14212__4.call(this,self__,a,b,c);
case 5:
return G__14212__5.call(this,self__,a,b,c,d);
case 6:
return G__14212__6.call(this,self__,a,b,c,d,e);
case 7:
return G__14212__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__14212__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__14212__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__14212__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__14212__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__14212__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__14212__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__14212__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__14212__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__14212__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__14212__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__14212__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__14212__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__14212__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__14212__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__14212__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14212.cljs$core$IFn$_invoke$arity$1 = G__14212__1;
G__14212.cljs$core$IFn$_invoke$arity$2 = G__14212__2;
G__14212.cljs$core$IFn$_invoke$arity$3 = G__14212__3;
G__14212.cljs$core$IFn$_invoke$arity$4 = G__14212__4;
G__14212.cljs$core$IFn$_invoke$arity$5 = G__14212__5;
G__14212.cljs$core$IFn$_invoke$arity$6 = G__14212__6;
G__14212.cljs$core$IFn$_invoke$arity$7 = G__14212__7;
G__14212.cljs$core$IFn$_invoke$arity$8 = G__14212__8;
G__14212.cljs$core$IFn$_invoke$arity$9 = G__14212__9;
G__14212.cljs$core$IFn$_invoke$arity$10 = G__14212__10;
G__14212.cljs$core$IFn$_invoke$arity$11 = G__14212__11;
G__14212.cljs$core$IFn$_invoke$arity$12 = G__14212__12;
G__14212.cljs$core$IFn$_invoke$arity$13 = G__14212__13;
G__14212.cljs$core$IFn$_invoke$arity$14 = G__14212__14;
G__14212.cljs$core$IFn$_invoke$arity$15 = G__14212__15;
G__14212.cljs$core$IFn$_invoke$arity$16 = G__14212__16;
G__14212.cljs$core$IFn$_invoke$arity$17 = G__14212__17;
G__14212.cljs$core$IFn$_invoke$arity$18 = G__14212__18;
G__14212.cljs$core$IFn$_invoke$arity$19 = G__14212__19;
G__14212.cljs$core$IFn$_invoke$arity$20 = G__14212__20;
G__14212.cljs$core$IFn$_invoke$arity$21 = G__14212__21;
G__14212.cljs$core$IFn$_invoke$arity$22 = G__14212__22;
return G__14212;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args13747){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13747)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__13980 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__13980) : self__.afn.call(null,G__13980));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__13981 = a;
var G__13982 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__13981,G__13982) : self__.afn.call(null,G__13981,G__13982));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__13983 = a;
var G__13984 = b;
var G__13985 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__13983,G__13984,G__13985) : self__.afn.call(null,G__13983,G__13984,G__13985));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__13986 = a;
var G__13987 = b;
var G__13988 = c;
var G__13989 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__13986,G__13987,G__13988,G__13989) : self__.afn.call(null,G__13986,G__13987,G__13988,G__13989));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__13990 = a;
var G__13991 = b;
var G__13992 = c;
var G__13993 = d;
var G__13994 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__13990,G__13991,G__13992,G__13993,G__13994) : self__.afn.call(null,G__13990,G__13991,G__13992,G__13993,G__13994));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__13995 = a;
var G__13996 = b;
var G__13997 = c;
var G__13998 = d;
var G__13999 = e;
var G__14000 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__13995,G__13996,G__13997,G__13998,G__13999,G__14000) : self__.afn.call(null,G__13995,G__13996,G__13997,G__13998,G__13999,G__14000));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__14001 = a;
var G__14002 = b;
var G__14003 = c;
var G__14004 = d;
var G__14005 = e;
var G__14006 = f;
var G__14007 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__14001,G__14002,G__14003,G__14004,G__14005,G__14006,G__14007) : self__.afn.call(null,G__14001,G__14002,G__14003,G__14004,G__14005,G__14006,G__14007));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__14008 = a;
var G__14009 = b;
var G__14010 = c;
var G__14011 = d;
var G__14012 = e;
var G__14013 = f;
var G__14014 = g;
var G__14015 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__14008,G__14009,G__14010,G__14011,G__14012,G__14013,G__14014,G__14015) : self__.afn.call(null,G__14008,G__14009,G__14010,G__14011,G__14012,G__14013,G__14014,G__14015));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__14016 = a;
var G__14017 = b;
var G__14018 = c;
var G__14019 = d;
var G__14020 = e;
var G__14021 = f;
var G__14022 = g;
var G__14023 = h;
var G__14024 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__14016,G__14017,G__14018,G__14019,G__14020,G__14021,G__14022,G__14023,G__14024) : self__.afn.call(null,G__14016,G__14017,G__14018,G__14019,G__14020,G__14021,G__14022,G__14023,G__14024));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__14025 = a;
var G__14026 = b;
var G__14027 = c;
var G__14028 = d;
var G__14029 = e;
var G__14030 = f;
var G__14031 = g;
var G__14032 = h;
var G__14033 = i;
var G__14034 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__14025,G__14026,G__14027,G__14028,G__14029,G__14030,G__14031,G__14032,G__14033,G__14034) : self__.afn.call(null,G__14025,G__14026,G__14027,G__14028,G__14029,G__14030,G__14031,G__14032,G__14033,G__14034));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__14035 = a;
var G__14036 = b;
var G__14037 = c;
var G__14038 = d;
var G__14039 = e;
var G__14040 = f;
var G__14041 = g;
var G__14042 = h;
var G__14043 = i;
var G__14044 = j;
var G__14045 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__14035,G__14036,G__14037,G__14038,G__14039,G__14040,G__14041,G__14042,G__14043,G__14044,G__14045) : self__.afn.call(null,G__14035,G__14036,G__14037,G__14038,G__14039,G__14040,G__14041,G__14042,G__14043,G__14044,G__14045));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__14046 = a;
var G__14047 = b;
var G__14048 = c;
var G__14049 = d;
var G__14050 = e;
var G__14051 = f;
var G__14052 = g;
var G__14053 = h;
var G__14054 = i;
var G__14055 = j;
var G__14056 = k;
var G__14057 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__14046,G__14047,G__14048,G__14049,G__14050,G__14051,G__14052,G__14053,G__14054,G__14055,G__14056,G__14057) : self__.afn.call(null,G__14046,G__14047,G__14048,G__14049,G__14050,G__14051,G__14052,G__14053,G__14054,G__14055,G__14056,G__14057));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__14058 = a;
var G__14059 = b;
var G__14060 = c;
var G__14061 = d;
var G__14062 = e;
var G__14063 = f;
var G__14064 = g;
var G__14065 = h;
var G__14066 = i;
var G__14067 = j;
var G__14068 = k;
var G__14069 = l;
var G__14070 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__14058,G__14059,G__14060,G__14061,G__14062,G__14063,G__14064,G__14065,G__14066,G__14067,G__14068,G__14069,G__14070) : self__.afn.call(null,G__14058,G__14059,G__14060,G__14061,G__14062,G__14063,G__14064,G__14065,G__14066,G__14067,G__14068,G__14069,G__14070));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__14071 = a;
var G__14072 = b;
var G__14073 = c;
var G__14074 = d;
var G__14075 = e;
var G__14076 = f;
var G__14077 = g;
var G__14078 = h;
var G__14079 = i;
var G__14080 = j;
var G__14081 = k;
var G__14082 = l;
var G__14083 = m;
var G__14084 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__14071,G__14072,G__14073,G__14074,G__14075,G__14076,G__14077,G__14078,G__14079,G__14080,G__14081,G__14082,G__14083,G__14084) : self__.afn.call(null,G__14071,G__14072,G__14073,G__14074,G__14075,G__14076,G__14077,G__14078,G__14079,G__14080,G__14081,G__14082,G__14083,G__14084));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__14085 = a;
var G__14086 = b;
var G__14087 = c;
var G__14088 = d;
var G__14089 = e;
var G__14090 = f;
var G__14091 = g;
var G__14092 = h;
var G__14093 = i;
var G__14094 = j;
var G__14095 = k;
var G__14096 = l;
var G__14097 = m;
var G__14098 = n;
var G__14099 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__14085,G__14086,G__14087,G__14088,G__14089,G__14090,G__14091,G__14092,G__14093,G__14094,G__14095,G__14096,G__14097,G__14098,G__14099) : self__.afn.call(null,G__14085,G__14086,G__14087,G__14088,G__14089,G__14090,G__14091,G__14092,G__14093,G__14094,G__14095,G__14096,G__14097,G__14098,G__14099));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__14100 = a;
var G__14101 = b;
var G__14102 = c;
var G__14103 = d;
var G__14104 = e;
var G__14105 = f;
var G__14106 = g;
var G__14107 = h;
var G__14108 = i;
var G__14109 = j;
var G__14110 = k;
var G__14111 = l;
var G__14112 = m;
var G__14113 = n;
var G__14114 = o;
var G__14115 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__14100,G__14101,G__14102,G__14103,G__14104,G__14105,G__14106,G__14107,G__14108,G__14109,G__14110,G__14111,G__14112,G__14113,G__14114,G__14115) : self__.afn.call(null,G__14100,G__14101,G__14102,G__14103,G__14104,G__14105,G__14106,G__14107,G__14108,G__14109,G__14110,G__14111,G__14112,G__14113,G__14114,G__14115));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__14116 = a;
var G__14117 = b;
var G__14118 = c;
var G__14119 = d;
var G__14120 = e;
var G__14121 = f;
var G__14122 = g;
var G__14123 = h;
var G__14124 = i;
var G__14125 = j;
var G__14126 = k;
var G__14127 = l;
var G__14128 = m;
var G__14129 = n;
var G__14130 = o;
var G__14131 = p;
var G__14132 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__14116,G__14117,G__14118,G__14119,G__14120,G__14121,G__14122,G__14123,G__14124,G__14125,G__14126,G__14127,G__14128,G__14129,G__14130,G__14131,G__14132) : self__.afn.call(null,G__14116,G__14117,G__14118,G__14119,G__14120,G__14121,G__14122,G__14123,G__14124,G__14125,G__14126,G__14127,G__14128,G__14129,G__14130,G__14131,G__14132));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__14133 = a;
var G__14134 = b;
var G__14135 = c;
var G__14136 = d;
var G__14137 = e;
var G__14138 = f;
var G__14139 = g;
var G__14140 = h;
var G__14141 = i;
var G__14142 = j;
var G__14143 = k;
var G__14144 = l;
var G__14145 = m;
var G__14146 = n;
var G__14147 = o;
var G__14148 = p;
var G__14149 = q;
var G__14150 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__14133,G__14134,G__14135,G__14136,G__14137,G__14138,G__14139,G__14140,G__14141,G__14142,G__14143,G__14144,G__14145,G__14146,G__14147,G__14148,G__14149,G__14150) : self__.afn.call(null,G__14133,G__14134,G__14135,G__14136,G__14137,G__14138,G__14139,G__14140,G__14141,G__14142,G__14143,G__14144,G__14145,G__14146,G__14147,G__14148,G__14149,G__14150));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__14151 = a;
var G__14152 = b;
var G__14153 = c;
var G__14154 = d;
var G__14155 = e;
var G__14156 = f;
var G__14157 = g;
var G__14158 = h;
var G__14159 = i;
var G__14160 = j;
var G__14161 = k;
var G__14162 = l;
var G__14163 = m;
var G__14164 = n;
var G__14165 = o;
var G__14166 = p;
var G__14167 = q;
var G__14168 = r;
var G__14169 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__14151,G__14152,G__14153,G__14154,G__14155,G__14156,G__14157,G__14158,G__14159,G__14160,G__14161,G__14162,G__14163,G__14164,G__14165,G__14166,G__14167,G__14168,G__14169) : self__.afn.call(null,G__14151,G__14152,G__14153,G__14154,G__14155,G__14156,G__14157,G__14158,G__14159,G__14160,G__14161,G__14162,G__14163,G__14164,G__14165,G__14166,G__14167,G__14168,G__14169));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__14170 = a;
var G__14171 = b;
var G__14172 = c;
var G__14173 = d;
var G__14174 = e;
var G__14175 = f;
var G__14176 = g;
var G__14177 = h;
var G__14178 = i;
var G__14179 = j;
var G__14180 = k;
var G__14181 = l;
var G__14182 = m;
var G__14183 = n;
var G__14184 = o;
var G__14185 = p;
var G__14186 = q;
var G__14187 = r;
var G__14188 = s;
var G__14189 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__14170,G__14171,G__14172,G__14173,G__14174,G__14175,G__14176,G__14177,G__14178,G__14179,G__14180,G__14181,G__14182,G__14183,G__14184,G__14185,G__14186,G__14187,G__14188,G__14189) : self__.afn.call(null,G__14170,G__14171,G__14172,G__14173,G__14174,G__14175,G__14176,G__14177,G__14178,G__14179,G__14180,G__14181,G__14182,G__14183,G__14184,G__14185,G__14186,G__14187,G__14188,G__14189));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__14190 = self__.afn;
var G__14191 = a;
var G__14192 = b;
var G__14193 = c;
var G__14194 = d;
var G__14195 = e;
var G__14196 = f;
var G__14197 = g;
var G__14198 = h;
var G__14199 = i;
var G__14200 = j;
var G__14201 = k;
var G__14202 = l;
var G__14203 = m;
var G__14204 = n;
var G__14205 = o;
var G__14206 = p;
var G__14207 = q;
var G__14208 = r;
var G__14209 = s;
var G__14210 = t;
var G__14211 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__14190,G__14191,G__14192,G__14193,G__14194,G__14195,G__14196,G__14197,G__14198,G__14199,G__14200,G__14201,G__14202,G__14203,G__14204,G__14205,G__14206,G__14207,G__14208,G__14209,G__14210,G__14211) : cljs.core.apply.call(null,G__14190,G__14191,G__14192,G__14193,G__14194,G__14195,G__14196,G__14197,G__14198,G__14199,G__14200,G__14201,G__14202,G__14203,G__14204,G__14205,G__14206,G__14207,G__14208,G__14209,G__14210,G__14211));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__14216 = o;
if(G__14216){
var bit__4455__auto__ = (G__14216.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4455__auto__) || (G__14216.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__14216.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__14216);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__14216);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3762__auto__ = !((o == null));
if(and__3762__auto__){
var G__14220 = o;
if(G__14220){
var bit__4455__auto__ = (G__14220.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4455__auto__) || (G__14220.cljs$core$IMeta$)){
return true;
} else {
if((!G__14220.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14220);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14220);
}
} else {
return and__3762__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__14223__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__14224 = ret;
var G__14225 = cljs.core.first(ks);
var G__14226 = cljs.core.next(ks);
coll = G__14224;
k = G__14225;
ks = G__14226;
continue;
} else {
return ret;
}
}
break;
}
};
var G__14223 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__14227__i = 0, G__14227__a = new Array(arguments.length -  2);
while (G__14227__i < G__14227__a.length) {G__14227__a[G__14227__i] = arguments[G__14227__i + 2]; ++G__14227__i;}
  ks = new cljs.core.IndexedSeq(G__14227__a,0);
} 
return G__14223__delegate.call(this,coll,k,ks);};
G__14223.cljs$lang$maxFixedArity = 2;
G__14223.cljs$lang$applyTo = (function (arglist__14228){
var coll = cljs.core.first(arglist__14228);
arglist__14228 = cljs.core.next(arglist__14228);
var k = cljs.core.first(arglist__14228);
var ks = cljs.core.rest(arglist__14228);
return G__14223__delegate(coll,k,ks);
});
G__14223.cljs$core$IFn$_invoke$arity$variadic = G__14223__delegate;
return G__14223;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__14229 = null;
if (arguments.length > 2) {
var G__14230__i = 0, G__14230__a = new Array(arguments.length -  2);
while (G__14230__i < G__14230__a.length) {G__14230__a[G__14230__i] = arguments[G__14230__i + 2]; ++G__14230__i;}
G__14229 = new cljs.core.IndexedSeq(G__14230__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__14229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__14232 = x;
if(G__14232){
var bit__4455__auto__ = (G__14232.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4455__auto__) || (G__14232.cljs$core$ICollection$)){
return true;
} else {
if((!G__14232.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__14232);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__14232);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__14234 = x;
if(G__14234){
var bit__4455__auto__ = (G__14234.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4455__auto__) || (G__14234.cljs$core$ISet$)){
return true;
} else {
if((!G__14234.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__14234);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__14234);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__14236 = x;
if(G__14236){
var bit__4455__auto__ = (G__14236.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4455__auto__) || (G__14236.cljs$core$IAssociative$)){
return true;
} else {
if((!G__14236.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__14236);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__14236);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__14238 = x;
if(G__14238){
var bit__4455__auto__ = (G__14238.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4455__auto__) || (G__14238.cljs$core$ISequential$)){
return true;
} else {
if((!G__14238.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__14238);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__14238);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__14240 = x;
if(G__14240){
var bit__4455__auto__ = (G__14240.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4455__auto__) || (G__14240.cljs$core$ISorted$)){
return true;
} else {
if((!G__14240.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__14240);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__14240);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__14242 = x;
if(G__14242){
var bit__4455__auto__ = (G__14242.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4455__auto__) || (G__14242.cljs$core$IReduce$)){
return true;
} else {
if((!G__14242.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__14242);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__14242);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__14244 = x;
if(G__14244){
var bit__4455__auto__ = (G__14244.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4455__auto__) || (G__14244.cljs$core$IMap$)){
return true;
} else {
if((!G__14244.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__14244);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__14244);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__14246 = x;
if(G__14246){
var bit__4455__auto__ = (G__14246.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4455__auto__) || (G__14246.cljs$core$IVector$)){
return true;
} else {
if((!G__14246.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__14246);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__14246);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__14248 = x;
if(G__14248){
var bit__4448__auto__ = (G__14248.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4448__auto__) || (G__14248.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj14254 = {};
return obj14254;
});
var js_obj__1 = (function() { 
var G__14257__delegate = function (keyvals){
var G__14255 = goog.object.create;
var G__14256 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__14255,G__14256) : cljs.core.apply.call(null,G__14255,G__14256));
};
var G__14257 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14258__i = 0, G__14258__a = new Array(arguments.length -  0);
while (G__14258__i < G__14258__a.length) {G__14258__a[G__14258__i] = arguments[G__14258__i + 0]; ++G__14258__i;}
  keyvals = new cljs.core.IndexedSeq(G__14258__a,0);
} 
return G__14257__delegate.call(this,keyvals);};
G__14257.cljs$lang$maxFixedArity = 0;
G__14257.cljs$lang$applyTo = (function (arglist__14259){
var keyvals = cljs.core.seq(arglist__14259);
return G__14257__delegate(keyvals);
});
G__14257.cljs$core$IFn$_invoke$arity$variadic = G__14257__delegate;
return G__14257;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__14260 = null;
if (arguments.length > 0) {
var G__14261__i = 0, G__14261__a = new Array(arguments.length -  0);
while (G__14261__i < G__14261__a.length) {G__14261__a[G__14261__i] = arguments[G__14261__i + 0]; ++G__14261__i;}
G__14260 = new cljs.core.IndexedSeq(G__14261__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__14260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__14264_14266 = obj;
var G__14265_14267 = ((function (G__14264_14266,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__14264_14266,keys))
;
goog.object.forEach(G__14264_14266,G__14265_14267);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__14268 = (i__$1 + (1));
var G__14269 = (j__$1 + (1));
var G__14270 = (len__$1 - (1));
i__$1 = G__14268;
j__$1 = G__14269;
len__$1 = G__14270;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__14271 = (i__$1 - (1));
var G__14272 = (j__$1 - (1));
var G__14273 = (len__$1 - (1));
i__$1 = G__14271;
j__$1 = G__14272;
len__$1 = G__14273;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj14275 = {};
return obj14275;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__14277 = s;
if(G__14277){
var bit__4455__auto__ = (G__14277.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4455__auto__) || (G__14277.cljs$core$ISeq$)){
return true;
} else {
if((!G__14277.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__14277);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__14277);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__14279 = s;
if(G__14279){
var bit__4455__auto__ = (G__14279.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4455__auto__) || (G__14279.cljs$core$ISeqable$)){
return true;
} else {
if((!G__14279.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__14279);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__14279);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3774__auto__ = cljs.core.fn_QMARK_(f);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var G__14283 = f;
if(G__14283){
var bit__4455__auto__ = (G__14283.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4455__auto__) || (G__14283.cljs$core$IFn$)){
return true;
} else {
if((!G__14283.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__14283);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__14283);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__14296 = n;
return isNaN(G__14296);
})())) && (!((n === Infinity))) && (((function (){var G__14297 = n;
return parseFloat(G__14297);
})() === (function (){var G__14298 = n;
var G__14299 = (10);
return parseInt(G__14298,G__14299);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__14300__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__14301 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__14302 = etc;
s = G__14301;
xs = G__14302;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__14300 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14303__i = 0, G__14303__a = new Array(arguments.length -  2);
while (G__14303__i < G__14303__a.length) {G__14303__a[G__14303__i] = arguments[G__14303__i + 2]; ++G__14303__i;}
  more = new cljs.core.IndexedSeq(G__14303__a,0);
} 
return G__14300__delegate.call(this,x,y,more);};
G__14300.cljs$lang$maxFixedArity = 2;
G__14300.cljs$lang$applyTo = (function (arglist__14304){
var x = cljs.core.first(arglist__14304);
arglist__14304 = cljs.core.next(arglist__14304);
var y = cljs.core.first(arglist__14304);
var more = cljs.core.rest(arglist__14304);
return G__14300__delegate(x,y,more);
});
G__14300.cljs$core$IFn$_invoke$arity$variadic = G__14300__delegate;
return G__14300;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__14305 = null;
if (arguments.length > 2) {
var G__14306__i = 0, G__14306__a = new Array(arguments.length -  2);
while (G__14306__i < G__14306__a.length) {G__14306__a[G__14306__i] = arguments[G__14306__i + 2]; ++G__14306__i;}
G__14305 = new cljs.core.IndexedSeq(G__14306__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14305);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__14310 = x;
if(G__14310){
var bit__4448__auto__ = (G__14310.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4448__auto__) || (G__14310.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__14311 = x;
var G__14312 = y;
return goog.array.defaultCompare(G__14311,G__14312);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__14317 = xs;
var G__14318 = ys;
var G__14319 = len;
var G__14320 = (n + (1));
xs = G__14317;
ys = G__14318;
len = G__14319;
n = G__14320;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__14325 = x;
var G__14326 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14325,G__14326) : f.call(null,G__14325,G__14326));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__14327 = y;
var G__14328 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14327,G__14328) : f.call(null,G__14327,G__14328));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__14334 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__14334) : cljs.core.to_array.call(null,G__14334));
})();
var G__14335_14337 = a;
var G__14336_14338 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__14335_14337,G__14336_14338);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__14344 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14344) : keyfn.call(null,G__14344));
})(),(function (){var G__14345 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14345) : keyfn.call(null,G__14345));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__14351 = f;
var G__14352 = cljs.core.first(s);
var G__14353 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__14351,G__14352,G__14353) : cljs.core.reduce.call(null,G__14351,G__14352,G__14353));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__14354 = val__$1;
var G__14355 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14354,G__14355) : f.call(null,G__14354,G__14355));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__14356 = nval;
var G__14357 = cljs.core.next(coll__$1);
val__$1 = G__14356;
coll__$1 = G__14357;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__14361 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__14361) : cljs.core.to_array.call(null,G__14361));
})();
var G__14362_14364 = a;
goog.array.shuffle(G__14362_14364);

var G__14363 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__14363) : cljs.core.vec.call(null,G__14363));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__14367 = coll;
if(G__14367){
var bit__4448__auto__ = (G__14367.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4448__auto__) || (G__14367.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__14368 = coll;
if(G__14368){
var bit__4448__auto__ = (G__14368.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4448__auto__) || (G__14368.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__14377 = null;
var G__14377__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__14377__1 = (function (x){
var G__14374 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__14374) : cf.call(null,G__14374));
});
var G__14377__2 = (function (x,y){
var G__14375 = x;
var G__14376 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14375,G__14376) : f.call(null,G__14375,G__14376));
});
G__14377 = function(x,y){
switch(arguments.length){
case 0:
return G__14377__0.call(this);
case 1:
return G__14377__1.call(this,x);
case 2:
return G__14377__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14377.cljs$core$IFn$_invoke$arity$0 = G__14377__0;
G__14377.cljs$core$IFn$_invoke$arity$1 = G__14377__1;
G__14377.cljs$core$IFn$_invoke$arity$2 = G__14377__2;
return G__14377;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__14384 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14384) : xform.call(null,G__14384));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__14385 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__14385) : f__$1.call(null,G__14385));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__14386__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__14386 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14387__i = 0, G__14387__a = new Array(arguments.length -  2);
while (G__14387__i < G__14387__a.length) {G__14387__a[G__14387__i] = arguments[G__14387__i + 2]; ++G__14387__i;}
  more = new cljs.core.IndexedSeq(G__14387__a,0);
} 
return G__14386__delegate.call(this,x,y,more);};
G__14386.cljs$lang$maxFixedArity = 2;
G__14386.cljs$lang$applyTo = (function (arglist__14388){
var x = cljs.core.first(arglist__14388);
arglist__14388 = cljs.core.next(arglist__14388);
var y = cljs.core.first(arglist__14388);
var more = cljs.core.rest(arglist__14388);
return G__14386__delegate(x,y,more);
});
G__14386.cljs$core$IFn$_invoke$arity$variadic = G__14386__delegate;
return G__14386;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__14389 = null;
if (arguments.length > 2) {
var G__14390__i = 0, G__14390__a = new Array(arguments.length -  2);
while (G__14390__i < G__14390__a.length) {G__14390__a[G__14390__i] = arguments[G__14390__i + 2]; ++G__14390__i;}
G__14389 = new cljs.core.IndexedSeq(G__14390__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14389);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__14391__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__14391 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14392__i = 0, G__14392__a = new Array(arguments.length -  2);
while (G__14392__i < G__14392__a.length) {G__14392__a[G__14392__i] = arguments[G__14392__i + 2]; ++G__14392__i;}
  more = new cljs.core.IndexedSeq(G__14392__a,0);
} 
return G__14391__delegate.call(this,x,y,more);};
G__14391.cljs$lang$maxFixedArity = 2;
G__14391.cljs$lang$applyTo = (function (arglist__14393){
var x = cljs.core.first(arglist__14393);
arglist__14393 = cljs.core.next(arglist__14393);
var y = cljs.core.first(arglist__14393);
var more = cljs.core.rest(arglist__14393);
return G__14391__delegate(x,y,more);
});
G__14391.cljs$core$IFn$_invoke$arity$variadic = G__14391__delegate;
return G__14391;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__14394 = null;
if (arguments.length > 2) {
var G__14395__i = 0, G__14395__a = new Array(arguments.length -  2);
while (G__14395__i < G__14395__a.length) {G__14395__a[G__14395__i] = arguments[G__14395__i + 2]; ++G__14395__i;}
G__14394 = new cljs.core.IndexedSeq(G__14395__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14394);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__14396__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__14396 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14397__i = 0, G__14397__a = new Array(arguments.length -  2);
while (G__14397__i < G__14397__a.length) {G__14397__a[G__14397__i] = arguments[G__14397__i + 2]; ++G__14397__i;}
  more = new cljs.core.IndexedSeq(G__14397__a,0);
} 
return G__14396__delegate.call(this,x,y,more);};
G__14396.cljs$lang$maxFixedArity = 2;
G__14396.cljs$lang$applyTo = (function (arglist__14398){
var x = cljs.core.first(arglist__14398);
arglist__14398 = cljs.core.next(arglist__14398);
var y = cljs.core.first(arglist__14398);
var more = cljs.core.rest(arglist__14398);
return G__14396__delegate(x,y,more);
});
G__14396.cljs$core$IFn$_invoke$arity$variadic = G__14396__delegate;
return G__14396;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__14399 = null;
if (arguments.length > 2) {
var G__14400__i = 0, G__14400__a = new Array(arguments.length -  2);
while (G__14400__i < G__14400__a.length) {G__14400__a[G__14400__i] = arguments[G__14400__i + 2]; ++G__14400__i;}
G__14399 = new cljs.core.IndexedSeq(G__14400__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14399);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__14405__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__14405 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14406__i = 0, G__14406__a = new Array(arguments.length -  2);
while (G__14406__i < G__14406__a.length) {G__14406__a[G__14406__i] = arguments[G__14406__i + 2]; ++G__14406__i;}
  more = new cljs.core.IndexedSeq(G__14406__a,0);
} 
return G__14405__delegate.call(this,x,y,more);};
G__14405.cljs$lang$maxFixedArity = 2;
G__14405.cljs$lang$applyTo = (function (arglist__14407){
var x = cljs.core.first(arglist__14407);
arglist__14407 = cljs.core.next(arglist__14407);
var y = cljs.core.first(arglist__14407);
var more = cljs.core.rest(arglist__14407);
return G__14405__delegate(x,y,more);
});
G__14405.cljs$core$IFn$_invoke$arity$variadic = G__14405__delegate;
return G__14405;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__14408 = null;
if (arguments.length > 2) {
var G__14409__i = 0, G__14409__a = new Array(arguments.length -  2);
while (G__14409__i < G__14409__a.length) {G__14409__a[G__14409__i] = arguments[G__14409__i + 2]; ++G__14409__i;}
G__14408 = new cljs.core.IndexedSeq(G__14409__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__14410__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__14411 = y;
var G__14412 = cljs.core.first(more);
var G__14413 = cljs.core.next(more);
x = G__14411;
y = G__14412;
more = G__14413;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14410 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14414__i = 0, G__14414__a = new Array(arguments.length -  2);
while (G__14414__i < G__14414__a.length) {G__14414__a[G__14414__i] = arguments[G__14414__i + 2]; ++G__14414__i;}
  more = new cljs.core.IndexedSeq(G__14414__a,0);
} 
return G__14410__delegate.call(this,x,y,more);};
G__14410.cljs$lang$maxFixedArity = 2;
G__14410.cljs$lang$applyTo = (function (arglist__14415){
var x = cljs.core.first(arglist__14415);
arglist__14415 = cljs.core.next(arglist__14415);
var y = cljs.core.first(arglist__14415);
var more = cljs.core.rest(arglist__14415);
return G__14410__delegate(x,y,more);
});
G__14410.cljs$core$IFn$_invoke$arity$variadic = G__14410__delegate;
return G__14410;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__14416 = null;
if (arguments.length > 2) {
var G__14417__i = 0, G__14417__a = new Array(arguments.length -  2);
while (G__14417__i < G__14417__a.length) {G__14417__a[G__14417__i] = arguments[G__14417__i + 2]; ++G__14417__i;}
G__14416 = new cljs.core.IndexedSeq(G__14417__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__14418__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__14419 = y;
var G__14420 = cljs.core.first(more);
var G__14421 = cljs.core.next(more);
x = G__14419;
y = G__14420;
more = G__14421;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14418 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14422__i = 0, G__14422__a = new Array(arguments.length -  2);
while (G__14422__i < G__14422__a.length) {G__14422__a[G__14422__i] = arguments[G__14422__i + 2]; ++G__14422__i;}
  more = new cljs.core.IndexedSeq(G__14422__a,0);
} 
return G__14418__delegate.call(this,x,y,more);};
G__14418.cljs$lang$maxFixedArity = 2;
G__14418.cljs$lang$applyTo = (function (arglist__14423){
var x = cljs.core.first(arglist__14423);
arglist__14423 = cljs.core.next(arglist__14423);
var y = cljs.core.first(arglist__14423);
var more = cljs.core.rest(arglist__14423);
return G__14418__delegate(x,y,more);
});
G__14418.cljs$core$IFn$_invoke$arity$variadic = G__14418__delegate;
return G__14418;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__14424 = null;
if (arguments.length > 2) {
var G__14425__i = 0, G__14425__a = new Array(arguments.length -  2);
while (G__14425__i < G__14425__a.length) {G__14425__a[G__14425__i] = arguments[G__14425__i + 2]; ++G__14425__i;}
G__14424 = new cljs.core.IndexedSeq(G__14425__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14424);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__14426__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__14427 = y;
var G__14428 = cljs.core.first(more);
var G__14429 = cljs.core.next(more);
x = G__14427;
y = G__14428;
more = G__14429;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14426 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14430__i = 0, G__14430__a = new Array(arguments.length -  2);
while (G__14430__i < G__14430__a.length) {G__14430__a[G__14430__i] = arguments[G__14430__i + 2]; ++G__14430__i;}
  more = new cljs.core.IndexedSeq(G__14430__a,0);
} 
return G__14426__delegate.call(this,x,y,more);};
G__14426.cljs$lang$maxFixedArity = 2;
G__14426.cljs$lang$applyTo = (function (arglist__14431){
var x = cljs.core.first(arglist__14431);
arglist__14431 = cljs.core.next(arglist__14431);
var y = cljs.core.first(arglist__14431);
var more = cljs.core.rest(arglist__14431);
return G__14426__delegate(x,y,more);
});
G__14426.cljs$core$IFn$_invoke$arity$variadic = G__14426__delegate;
return G__14426;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__14432 = null;
if (arguments.length > 2) {
var G__14433__i = 0, G__14433__a = new Array(arguments.length -  2);
while (G__14433__i < G__14433__a.length) {G__14433__a[G__14433__i] = arguments[G__14433__i + 2]; ++G__14433__i;}
G__14432 = new cljs.core.IndexedSeq(G__14433__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14432);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__14434__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__14435 = y;
var G__14436 = cljs.core.first(more);
var G__14437 = cljs.core.next(more);
x = G__14435;
y = G__14436;
more = G__14437;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14434 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14438__i = 0, G__14438__a = new Array(arguments.length -  2);
while (G__14438__i < G__14438__a.length) {G__14438__a[G__14438__i] = arguments[G__14438__i + 2]; ++G__14438__i;}
  more = new cljs.core.IndexedSeq(G__14438__a,0);
} 
return G__14434__delegate.call(this,x,y,more);};
G__14434.cljs$lang$maxFixedArity = 2;
G__14434.cljs$lang$applyTo = (function (arglist__14439){
var x = cljs.core.first(arglist__14439);
arglist__14439 = cljs.core.next(arglist__14439);
var y = cljs.core.first(arglist__14439);
var more = cljs.core.rest(arglist__14439);
return G__14434__delegate(x,y,more);
});
G__14434.cljs$core$IFn$_invoke$arity$variadic = G__14434__delegate;
return G__14434;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__14440 = null;
if (arguments.length > 2) {
var G__14441__i = 0, G__14441__a = new Array(arguments.length -  2);
while (G__14441__i < G__14441__a.length) {G__14441__a[G__14441__i] = arguments[G__14441__i + 2]; ++G__14441__i;}
G__14440 = new cljs.core.IndexedSeq(G__14441__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14440);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4091__auto__ = x;
var y__4092__auto__ = y;
return ((x__4091__auto__ > y__4092__auto__) ? x__4091__auto__ : y__4092__auto__);
});
var max__3 = (function() { 
var G__14442__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4091__auto__ = x;
var y__4092__auto__ = y;
return ((x__4091__auto__ > y__4092__auto__) ? x__4091__auto__ : y__4092__auto__);
})(),more);
};
var G__14442 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14443__i = 0, G__14443__a = new Array(arguments.length -  2);
while (G__14443__i < G__14443__a.length) {G__14443__a[G__14443__i] = arguments[G__14443__i + 2]; ++G__14443__i;}
  more = new cljs.core.IndexedSeq(G__14443__a,0);
} 
return G__14442__delegate.call(this,x,y,more);};
G__14442.cljs$lang$maxFixedArity = 2;
G__14442.cljs$lang$applyTo = (function (arglist__14444){
var x = cljs.core.first(arglist__14444);
arglist__14444 = cljs.core.next(arglist__14444);
var y = cljs.core.first(arglist__14444);
var more = cljs.core.rest(arglist__14444);
return G__14442__delegate(x,y,more);
});
G__14442.cljs$core$IFn$_invoke$arity$variadic = G__14442__delegate;
return G__14442;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__14445 = null;
if (arguments.length > 2) {
var G__14446__i = 0, G__14446__a = new Array(arguments.length -  2);
while (G__14446__i < G__14446__a.length) {G__14446__a[G__14446__i] = arguments[G__14446__i + 2]; ++G__14446__i;}
G__14445 = new cljs.core.IndexedSeq(G__14446__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14445);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4098__auto__ = x;
var y__4099__auto__ = y;
return ((x__4098__auto__ < y__4099__auto__) ? x__4098__auto__ : y__4099__auto__);
});
var min__3 = (function() { 
var G__14447__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4098__auto__ = x;
var y__4099__auto__ = y;
return ((x__4098__auto__ < y__4099__auto__) ? x__4098__auto__ : y__4099__auto__);
})(),more);
};
var G__14447 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14448__i = 0, G__14448__a = new Array(arguments.length -  2);
while (G__14448__i < G__14448__a.length) {G__14448__a[G__14448__i] = arguments[G__14448__i + 2]; ++G__14448__i;}
  more = new cljs.core.IndexedSeq(G__14448__a,0);
} 
return G__14447__delegate.call(this,x,y,more);};
G__14447.cljs$lang$maxFixedArity = 2;
G__14447.cljs$lang$applyTo = (function (arglist__14449){
var x = cljs.core.first(arglist__14449);
arglist__14449 = cljs.core.next(arglist__14449);
var y = cljs.core.first(arglist__14449);
var more = cljs.core.rest(arglist__14449);
return G__14447__delegate(x,y,more);
});
G__14447.cljs$core$IFn$_invoke$arity$variadic = G__14447__delegate;
return G__14447;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__14450 = null;
if (arguments.length > 2) {
var G__14451__i = 0, G__14451__a = new Array(arguments.length -  2);
while (G__14451__i < G__14451__a.length) {G__14451__a[G__14451__i] = arguments[G__14451__i + 2]; ++G__14451__i;}
G__14450 = new cljs.core.IndexedSeq(G__14451__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__14452__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__14452 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14453__i = 0, G__14453__a = new Array(arguments.length -  2);
while (G__14453__i < G__14453__a.length) {G__14453__a[G__14453__i] = arguments[G__14453__i + 2]; ++G__14453__i;}
  more = new cljs.core.IndexedSeq(G__14453__a,0);
} 
return G__14452__delegate.call(this,x,y,more);};
G__14452.cljs$lang$maxFixedArity = 2;
G__14452.cljs$lang$applyTo = (function (arglist__14454){
var x = cljs.core.first(arglist__14454);
arglist__14454 = cljs.core.next(arglist__14454);
var y = cljs.core.first(arglist__14454);
var more = cljs.core.rest(arglist__14454);
return G__14452__delegate(x,y,more);
});
G__14452.cljs$core$IFn$_invoke$arity$variadic = G__14452__delegate;
return G__14452;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__14455 = null;
if (arguments.length > 2) {
var G__14456__i = 0, G__14456__a = new Array(arguments.length -  2);
while (G__14456__i < G__14456__a.length) {G__14456__a[G__14456__i] = arguments[G__14456__i + 2]; ++G__14456__i;}
G__14455 = new cljs.core.IndexedSeq(G__14456__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__14457__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__14457 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14458__i = 0, G__14458__a = new Array(arguments.length -  2);
while (G__14458__i < G__14458__a.length) {G__14458__a[G__14458__i] = arguments[G__14458__i + 2]; ++G__14458__i;}
  more = new cljs.core.IndexedSeq(G__14458__a,0);
} 
return G__14457__delegate.call(this,x,y,more);};
G__14457.cljs$lang$maxFixedArity = 2;
G__14457.cljs$lang$applyTo = (function (arglist__14459){
var x = cljs.core.first(arglist__14459);
arglist__14459 = cljs.core.next(arglist__14459);
var y = cljs.core.first(arglist__14459);
var more = cljs.core.rest(arglist__14459);
return G__14457__delegate(x,y,more);
});
G__14457.cljs$core$IFn$_invoke$arity$variadic = G__14457__delegate;
return G__14457;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__14460 = null;
if (arguments.length > 2) {
var G__14461__i = 0, G__14461__a = new Array(arguments.length -  2);
while (G__14461__i < G__14461__a.length) {G__14461__a[G__14461__i] = arguments[G__14461__i + 2]; ++G__14461__i;}
G__14460 = new cljs.core.IndexedSeq(G__14461__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14460);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__14466__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__14466 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14467__i = 0, G__14467__a = new Array(arguments.length -  2);
while (G__14467__i < G__14467__a.length) {G__14467__a[G__14467__i] = arguments[G__14467__i + 2]; ++G__14467__i;}
  more = new cljs.core.IndexedSeq(G__14467__a,0);
} 
return G__14466__delegate.call(this,x,y,more);};
G__14466.cljs$lang$maxFixedArity = 2;
G__14466.cljs$lang$applyTo = (function (arglist__14468){
var x = cljs.core.first(arglist__14468);
arglist__14468 = cljs.core.next(arglist__14468);
var y = cljs.core.first(arglist__14468);
var more = cljs.core.rest(arglist__14468);
return G__14466__delegate(x,y,more);
});
G__14466.cljs$core$IFn$_invoke$arity$variadic = G__14466__delegate;
return G__14466;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__14469 = null;
if (arguments.length > 2) {
var G__14470__i = 0, G__14470__a = new Array(arguments.length -  2);
while (G__14470__i < G__14470__a.length) {G__14470__a[G__14470__i] = arguments[G__14470__i + 2]; ++G__14470__i;}
G__14469 = new cljs.core.IndexedSeq(G__14470__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14469);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__14471__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__14471 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14472__i = 0, G__14472__a = new Array(arguments.length -  2);
while (G__14472__i < G__14472__a.length) {G__14472__a[G__14472__i] = arguments[G__14472__i + 2]; ++G__14472__i;}
  more = new cljs.core.IndexedSeq(G__14472__a,0);
} 
return G__14471__delegate.call(this,x,y,more);};
G__14471.cljs$lang$maxFixedArity = 2;
G__14471.cljs$lang$applyTo = (function (arglist__14473){
var x = cljs.core.first(arglist__14473);
arglist__14473 = cljs.core.next(arglist__14473);
var y = cljs.core.first(arglist__14473);
var more = cljs.core.rest(arglist__14473);
return G__14471__delegate(x,y,more);
});
G__14471.cljs$core$IFn$_invoke$arity$variadic = G__14471__delegate;
return G__14471;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__14474 = null;
if (arguments.length > 2) {
var G__14475__i = 0, G__14475__a = new Array(arguments.length -  2);
while (G__14475__i < G__14475__a.length) {G__14475__a[G__14475__i] = arguments[G__14475__i + 2]; ++G__14475__i;}
G__14474 = new cljs.core.IndexedSeq(G__14475__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__14476__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__14476 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14477__i = 0, G__14477__a = new Array(arguments.length -  2);
while (G__14477__i < G__14477__a.length) {G__14477__a[G__14477__i] = arguments[G__14477__i + 2]; ++G__14477__i;}
  more = new cljs.core.IndexedSeq(G__14477__a,0);
} 
return G__14476__delegate.call(this,x,y,more);};
G__14476.cljs$lang$maxFixedArity = 2;
G__14476.cljs$lang$applyTo = (function (arglist__14478){
var x = cljs.core.first(arglist__14478);
arglist__14478 = cljs.core.next(arglist__14478);
var y = cljs.core.first(arglist__14478);
var more = cljs.core.rest(arglist__14478);
return G__14476__delegate(x,y,more);
});
G__14476.cljs$core$IFn$_invoke$arity$variadic = G__14476__delegate;
return G__14476;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__14479 = null;
if (arguments.length > 2) {
var G__14480__i = 0, G__14480__a = new Array(arguments.length -  2);
while (G__14480__i < G__14480__a.length) {G__14480__a[G__14480__i] = arguments[G__14480__i + 2]; ++G__14480__i;}
G__14479 = new cljs.core.IndexedSeq(G__14480__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14479);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__14483 = x;
var G__14484 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__14483,G__14484) : cljs.core.mod.call(null,G__14483,G__14484));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__14485__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__14485 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14486__i = 0, G__14486__a = new Array(arguments.length -  2);
while (G__14486__i < G__14486__a.length) {G__14486__a[G__14486__i] = arguments[G__14486__i + 2]; ++G__14486__i;}
  more = new cljs.core.IndexedSeq(G__14486__a,0);
} 
return G__14485__delegate.call(this,x,y,more);};
G__14485.cljs$lang$maxFixedArity = 2;
G__14485.cljs$lang$applyTo = (function (arglist__14487){
var x = cljs.core.first(arglist__14487);
arglist__14487 = cljs.core.next(arglist__14487);
var y = cljs.core.first(arglist__14487);
var more = cljs.core.rest(arglist__14487);
return G__14485__delegate(x,y,more);
});
G__14485.cljs$core$IFn$_invoke$arity$variadic = G__14485__delegate;
return G__14485;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__14488 = null;
if (arguments.length > 2) {
var G__14489__i = 0, G__14489__a = new Array(arguments.length -  2);
while (G__14489__i < G__14489__a.length) {G__14489__a[G__14489__i] = arguments[G__14489__i + 2]; ++G__14489__i;}
G__14488 = new cljs.core.IndexedSeq(G__14489__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14488);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__14490__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__14490 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14491__i = 0, G__14491__a = new Array(arguments.length -  2);
while (G__14491__i < G__14491__a.length) {G__14491__a[G__14491__i] = arguments[G__14491__i + 2]; ++G__14491__i;}
  more = new cljs.core.IndexedSeq(G__14491__a,0);
} 
return G__14490__delegate.call(this,x,y,more);};
G__14490.cljs$lang$maxFixedArity = 2;
G__14490.cljs$lang$applyTo = (function (arglist__14492){
var x = cljs.core.first(arglist__14492);
arglist__14492 = cljs.core.next(arglist__14492);
var y = cljs.core.first(arglist__14492);
var more = cljs.core.rest(arglist__14492);
return G__14490__delegate(x,y,more);
});
G__14490.cljs$core$IFn$_invoke$arity$variadic = G__14490__delegate;
return G__14490;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__14493 = null;
if (arguments.length > 2) {
var G__14494__i = 0, G__14494__a = new Array(arguments.length -  2);
while (G__14494__i < G__14494__a.length) {G__14494__a[G__14494__i] = arguments[G__14494__i + 2]; ++G__14494__i;}
G__14493 = new cljs.core.IndexedSeq(G__14494__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14493);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__14497 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__14497) : Math.floor.call(null,G__14497));
} else {
var G__14498 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__14498) : Math.ceil.call(null,G__14498));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__14499__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__14499 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14500__i = 0, G__14500__a = new Array(arguments.length -  2);
while (G__14500__i < G__14500__a.length) {G__14500__a[G__14500__i] = arguments[G__14500__i + 2]; ++G__14500__i;}
  more = new cljs.core.IndexedSeq(G__14500__a,0);
} 
return G__14499__delegate.call(this,x,y,more);};
G__14499.cljs$lang$maxFixedArity = 2;
G__14499.cljs$lang$applyTo = (function (arglist__14501){
var x = cljs.core.first(arglist__14501);
arglist__14501 = cljs.core.next(arglist__14501);
var y = cljs.core.first(arglist__14501);
var more = cljs.core.rest(arglist__14501);
return G__14499__delegate(x,y,more);
});
G__14499.cljs$core$IFn$_invoke$arity$variadic = G__14499__delegate;
return G__14499;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__14502 = null;
if (arguments.length > 2) {
var G__14503__i = 0, G__14503__a = new Array(arguments.length -  2);
while (G__14503__i < G__14503__a.length) {G__14503__a[G__14503__i] = arguments[G__14503__i + 2]; ++G__14503__i;}
G__14502 = new cljs.core.IndexedSeq(G__14503__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__14504__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__14504 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14505__i = 0, G__14505__a = new Array(arguments.length -  2);
while (G__14505__i < G__14505__a.length) {G__14505__a[G__14505__i] = arguments[G__14505__i + 2]; ++G__14505__i;}
  more = new cljs.core.IndexedSeq(G__14505__a,0);
} 
return G__14504__delegate.call(this,x,y,more);};
G__14504.cljs$lang$maxFixedArity = 2;
G__14504.cljs$lang$applyTo = (function (arglist__14506){
var x = cljs.core.first(arglist__14506);
arglist__14506 = cljs.core.next(arglist__14506);
var y = cljs.core.first(arglist__14506);
var more = cljs.core.rest(arglist__14506);
return G__14504__delegate(x,y,more);
});
G__14504.cljs$core$IFn$_invoke$arity$variadic = G__14504__delegate;
return G__14504;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__14507 = null;
if (arguments.length > 2) {
var G__14508__i = 0, G__14508__a = new Array(arguments.length -  2);
while (G__14508__i < G__14508__a.length) {G__14508__a[G__14508__i] = arguments[G__14508__i + 2]; ++G__14508__i;}
G__14507 = new cljs.core.IndexedSeq(G__14508__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14507);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__14509__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__14509 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14510__i = 0, G__14510__a = new Array(arguments.length -  2);
while (G__14510__i < G__14510__a.length) {G__14510__a[G__14510__i] = arguments[G__14510__i + 2]; ++G__14510__i;}
  more = new cljs.core.IndexedSeq(G__14510__a,0);
} 
return G__14509__delegate.call(this,x,y,more);};
G__14509.cljs$lang$maxFixedArity = 2;
G__14509.cljs$lang$applyTo = (function (arglist__14511){
var x = cljs.core.first(arglist__14511);
arglist__14511 = cljs.core.next(arglist__14511);
var y = cljs.core.first(arglist__14511);
var more = cljs.core.rest(arglist__14511);
return G__14509__delegate(x,y,more);
});
G__14509.cljs$core$IFn$_invoke$arity$variadic = G__14509__delegate;
return G__14509;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__14512 = null;
if (arguments.length > 2) {
var G__14513__i = 0, G__14513__a = new Array(arguments.length -  2);
while (G__14513__i < G__14513__a.length) {G__14513__a[G__14513__i] = arguments[G__14513__i + 2]; ++G__14513__i;}
G__14512 = new cljs.core.IndexedSeq(G__14513__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14512);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__14514__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__14514 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14515__i = 0, G__14515__a = new Array(arguments.length -  2);
while (G__14515__i < G__14515__a.length) {G__14515__a[G__14515__i] = arguments[G__14515__i + 2]; ++G__14515__i;}
  more = new cljs.core.IndexedSeq(G__14515__a,0);
} 
return G__14514__delegate.call(this,x,y,more);};
G__14514.cljs$lang$maxFixedArity = 2;
G__14514.cljs$lang$applyTo = (function (arglist__14516){
var x = cljs.core.first(arglist__14516);
arglist__14516 = cljs.core.next(arglist__14516);
var y = cljs.core.first(arglist__14516);
var more = cljs.core.rest(arglist__14516);
return G__14514__delegate(x,y,more);
});
G__14514.cljs$core$IFn$_invoke$arity$variadic = G__14514__delegate;
return G__14514;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__14517 = null;
if (arguments.length > 2) {
var G__14518__i = 0, G__14518__a = new Array(arguments.length -  2);
while (G__14518__i < G__14518__a.length) {G__14518__a[G__14518__i] = arguments[G__14518__i + 2]; ++G__14518__i;}
G__14517 = new cljs.core.IndexedSeq(G__14518__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14517);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__14523__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__14524 = y;
var G__14525 = cljs.core.first(more);
var G__14526 = cljs.core.next(more);
x = G__14524;
y = G__14525;
more = G__14526;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14523 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14527__i = 0, G__14527__a = new Array(arguments.length -  2);
while (G__14527__i < G__14527__a.length) {G__14527__a[G__14527__i] = arguments[G__14527__i + 2]; ++G__14527__i;}
  more = new cljs.core.IndexedSeq(G__14527__a,0);
} 
return G__14523__delegate.call(this,x,y,more);};
G__14523.cljs$lang$maxFixedArity = 2;
G__14523.cljs$lang$applyTo = (function (arglist__14528){
var x = cljs.core.first(arglist__14528);
arglist__14528 = cljs.core.next(arglist__14528);
var y = cljs.core.first(arglist__14528);
var more = cljs.core.rest(arglist__14528);
return G__14523__delegate(x,y,more);
});
G__14523.cljs$core$IFn$_invoke$arity$variadic = G__14523__delegate;
return G__14523;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__14529 = null;
if (arguments.length > 2) {
var G__14530__i = 0, G__14530__a = new Array(arguments.length -  2);
while (G__14530__i < G__14530__a.length) {G__14530__a[G__14530__i] = arguments[G__14530__i + 2]; ++G__14530__i;}
G__14529 = new cljs.core.IndexedSeq(G__14530__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14529);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__14531 = (n__$1 - (1));
var G__14532 = cljs.core.next(xs);
n__$1 = G__14531;
xs = G__14532;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__14536 = x;
return goog.string.buildString(G__14536);
}
});
var str__2 = (function() { 
var G__14537__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__14538 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__14539 = cljs.core.next(more);
sb = G__14538;
more = G__14539;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__14537 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__14540__i = 0, G__14540__a = new Array(arguments.length -  1);
while (G__14540__i < G__14540__a.length) {G__14540__a[G__14540__i] = arguments[G__14540__i + 1]; ++G__14540__i;}
  ys = new cljs.core.IndexedSeq(G__14540__a,0);
} 
return G__14537__delegate.call(this,x,ys);};
G__14537.cljs$lang$maxFixedArity = 1;
G__14537.cljs$lang$applyTo = (function (arglist__14541){
var x = cljs.core.first(arglist__14541);
var ys = cljs.core.rest(arglist__14541);
return G__14537__delegate(x,ys);
});
G__14537.cljs$core$IFn$_invoke$arity$variadic = G__14537__delegate;
return G__14537;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__14542 = null;
if (arguments.length > 1) {
var G__14543__i = 0, G__14543__a = new Array(arguments.length -  1);
while (G__14543__i < G__14543__a.length) {G__14543__a[G__14543__i] = arguments[G__14543__i + 1]; ++G__14543__i;}
G__14542 = new cljs.core.IndexedSeq(G__14543__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__14544 = cljs.core.next(xs);
var G__14545 = cljs.core.next(ys);
xs = G__14544;
ys = G__14545;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__14546 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__14547 = cljs.core.next(s);
res = G__14546;
s = G__14547;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__14552 = ((h + (cljs.core.hash((function (){var G__14550 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14550) : cljs.core.key.call(null,G__14550));
})()) ^ cljs.core.hash((function (){var G__14551 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14551) : cljs.core.val.call(null,G__14551));
})()))) % (4503599627370496));
var G__14553 = cljs.core.next(s);
h = G__14552;
s = G__14553;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__14554 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__14555 = cljs.core.next(s__$1);
h = G__14554;
s__$1 = G__14555;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__14566_14576 = cljs.core.seq(fn_map);
var chunk__14567_14577 = null;
var count__14568_14578 = (0);
var i__14569_14579 = (0);
while(true){
if((i__14569_14579 < count__14568_14578)){
var vec__14570_14580 = chunk__14567_14577.cljs$core$IIndexed$_nth$arity$2(null,i__14569_14579);
var key_name_14581 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14570_14580,(0),null);
var f_14582 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14570_14580,(1),null);
var str_name_14583 = (function (){var G__14571 = key_name_14581;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14571) : cljs.core.name.call(null,G__14571));
})();
(obj[str_name_14583] = f_14582);

var G__14584 = seq__14566_14576;
var G__14585 = chunk__14567_14577;
var G__14586 = count__14568_14578;
var G__14587 = (i__14569_14579 + (1));
seq__14566_14576 = G__14584;
chunk__14567_14577 = G__14585;
count__14568_14578 = G__14586;
i__14569_14579 = G__14587;
continue;
} else {
var temp__4126__auto___14588 = cljs.core.seq(seq__14566_14576);
if(temp__4126__auto___14588){
var seq__14566_14589__$1 = temp__4126__auto___14588;
if(cljs.core.chunked_seq_QMARK_(seq__14566_14589__$1)){
var c__4561__auto___14590 = (function (){var G__14572 = seq__14566_14589__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__14572) : cljs.core.chunk_first.call(null,G__14572));
})();
var G__14591 = (function (){var G__14573 = seq__14566_14589__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__14573) : cljs.core.chunk_rest.call(null,G__14573));
})();
var G__14592 = c__4561__auto___14590;
var G__14593 = cljs.core.count(c__4561__auto___14590);
var G__14594 = (0);
seq__14566_14576 = G__14591;
chunk__14567_14577 = G__14592;
count__14568_14578 = G__14593;
i__14569_14579 = G__14594;
continue;
} else {
var vec__14574_14595 = cljs.core.first(seq__14566_14589__$1);
var key_name_14596 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14574_14595,(0),null);
var f_14597 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14574_14595,(1),null);
var str_name_14598 = (function (){var G__14575 = key_name_14596;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14575) : cljs.core.name.call(null,G__14575));
})();
(obj[str_name_14598] = f_14597);

var G__14599 = cljs.core.next(seq__14566_14589__$1);
var G__14600 = null;
var G__14601 = (0);
var G__14602 = (0);
seq__14566_14576 = G__14599;
chunk__14567_14577 = G__14600;
count__14568_14578 = G__14601;
i__14569_14579 = G__14602;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__14604 = coll;
if(G__14604){
var bit__4455__auto__ = (G__14604.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4455__auto__) || (G__14604.cljs$core$IReversible$)){
return true;
} else {
if((!G__14604.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__14604);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__14604);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__14605 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__14605;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__14606 = (i - (1));
var G__14607 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__14606;
r = G__14607;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__14608__i = 0, G__14608__a = new Array(arguments.length -  0);
while (G__14608__i < G__14608__a.length) {G__14608__a[G__14608__i] = arguments[G__14608__i + 0]; ++G__14608__i;}
  xs = new cljs.core.IndexedSeq(G__14608__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__14609){
var xs = cljs.core.seq(arglist__14609);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3774__auto__ = (coll == null);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var G__14613 = coll;
if(G__14613){
var bit__4448__auto__ = (G__14613.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4448__auto__) || (G__14613.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__14615 = x;
if(G__14615){
var bit__4455__auto__ = (G__14615.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4455__auto__) || (G__14615.cljs$core$IList$)){
return true;
} else {
if((!G__14615.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__14615);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__14615);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3762__auto__ = cljs.core.not(a.ns);
if(and__3762__auto__){
return b.ns;
} else {
return and__3762__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__14622 = a.ns;
var G__14623 = b.ns;
return goog.array.defaultCompare(G__14622,G__14623);
})();
if(((0) === nsc)){
var G__14624 = a.name;
var G__14625 = b.name;
return goog.array.defaultCompare(G__14624,G__14625);
} else {
return nsc;
}
}
} else {
var G__14626 = a.name;
var G__14627 = b.name;
return goog.array.defaultCompare(G__14626,G__14627);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4195__auto__ = self__._hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__14629 = null;
var G__14629__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__14629__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__14629 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__14629__2.call(this,self__,coll);
case 3:
return G__14629__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14629.cljs$core$IFn$_invoke$arity$2 = G__14629__2;
G__14629.cljs$core$IFn$_invoke$arity$3 = G__14629__3;
return G__14629;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args14628){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14628)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__14631 = x;
if(G__14631){
var bit__4448__auto__ = (G__14631.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4448__auto__) || (G__14631.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__14633 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14633) : cljs.core.name.call(null,G__14633));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__14634 = ls.sval();
ls = G__14634;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__14636 = s;
if(G__14636){
var bit__4448__auto__ = (G__14636.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4448__auto__) || (G__14636.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__14637 = cljs.core.next(s__$1);
s__$1 = G__14637;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_14638 = (0);
var xs_14639 = cljs.core.seq(coll);
while(true){
if(xs_14639){
(ret[i_14638] = cljs.core.to_array(cljs.core.first(xs_14639)));

var G__14640 = (i_14638 + (1));
var G__14641 = cljs.core.next(xs_14639);
i_14638 = G__14640;
xs_14639 = G__14641;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14644 = (i + (1));
var G__14645 = cljs.core.next(s__$1);
i = G__14644;
s__$1 = G__14645;
continue;
} else {
return a;
}
break;
}
} else {
var n__4661__auto___14646 = size;
var i_14647 = (0);
while(true){
if((i_14647 < n__4661__auto___14646)){
(a[i_14647] = init_val_or_seq);

var G__14648 = (i_14647 + (1));
i_14647 = G__14648;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14651 = (i + (1));
var G__14652 = cljs.core.next(s__$1);
i = G__14651;
s__$1 = G__14652;
continue;
} else {
return a;
}
break;
}
} else {
var n__4661__auto___14653 = size;
var i_14654 = (0);
while(true){
if((i_14654 < n__4661__auto___14653)){
(a[i_14654] = init_val_or_seq);

var G__14655 = (i_14654 + (1));
i_14654 = G__14655;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14658 = (i + (1));
var G__14659 = cljs.core.next(s__$1);
i = G__14658;
s__$1 = G__14659;
continue;
} else {
return a;
}
break;
}
} else {
var n__4661__auto___14660 = size;
var i_14661 = (0);
while(true){
if((i_14661 < n__4661__auto___14660)){
(a[i_14661] = init_val_or_seq);

var G__14662 = (i_14661 + (1));
i_14661 = G__14662;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14665 = (i + (1));
var G__14666 = cljs.core.next(s__$1);
i = G__14665;
s__$1 = G__14666;
continue;
} else {
return a;
}
break;
}
} else {
var n__4661__auto___14667 = size;
var i_14668 = (0);
while(true){
if((i_14668 < n__4661__auto___14667)){
(a[i_14668] = init_val_or_seq);

var G__14669 = (i_14668 + (1));
i_14668 = G__14669;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__14670 = cljs.core.next(s__$1);
var G__14671 = (i - (1));
var G__14672 = (sum + (1));
s__$1 = G__14670;
i = G__14671;
sum = G__14672;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__14692__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__14692 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__14693__i = 0, G__14693__a = new Array(arguments.length -  2);
while (G__14693__i < G__14693__a.length) {G__14693__a[G__14693__i] = arguments[G__14693__i + 2]; ++G__14693__i;}
  zs = new cljs.core.IndexedSeq(G__14693__a,0);
} 
return G__14692__delegate.call(this,x,y,zs);};
G__14692.cljs$lang$maxFixedArity = 2;
G__14692.cljs$lang$applyTo = (function (arglist__14694){
var x = cljs.core.first(arglist__14694);
arglist__14694 = cljs.core.next(arglist__14694);
var y = cljs.core.first(arglist__14694);
var zs = cljs.core.rest(arglist__14694);
return G__14692__delegate(x,y,zs);
});
G__14692.cljs$core$IFn$_invoke$arity$variadic = G__14692__delegate;
return G__14692;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__14695 = null;
if (arguments.length > 2) {
var G__14696__i = 0, G__14696__a = new Array(arguments.length -  2);
while (G__14696__i < G__14696__a.length) {G__14696__a[G__14696__i] = arguments[G__14696__i + 2]; ++G__14696__i;}
G__14695 = new cljs.core.IndexedSeq(G__14696__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__14697__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__14697 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__14698__i = 0, G__14698__a = new Array(arguments.length -  4);
while (G__14698__i < G__14698__a.length) {G__14698__a[G__14698__i] = arguments[G__14698__i + 4]; ++G__14698__i;}
  more = new cljs.core.IndexedSeq(G__14698__a,0);
} 
return G__14697__delegate.call(this,a,b,c,d,more);};
G__14697.cljs$lang$maxFixedArity = 4;
G__14697.cljs$lang$applyTo = (function (arglist__14699){
var a = cljs.core.first(arglist__14699);
arglist__14699 = cljs.core.next(arglist__14699);
var b = cljs.core.first(arglist__14699);
arglist__14699 = cljs.core.next(arglist__14699);
var c = cljs.core.first(arglist__14699);
arglist__14699 = cljs.core.next(arglist__14699);
var d = cljs.core.first(arglist__14699);
var more = cljs.core.rest(arglist__14699);
return G__14697__delegate(a,b,c,d,more);
});
G__14697.cljs$core$IFn$_invoke$arity$variadic = G__14697__delegate;
return G__14697;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__14700 = null;
if (arguments.length > 4) {
var G__14701__i = 0, G__14701__a = new Array(arguments.length -  4);
while (G__14701__i < G__14701__a.length) {G__14701__a[G__14701__i] = arguments[G__14701__i + 4]; ++G__14701__i;}
G__14700 = new cljs.core.IndexedSeq(G__14701__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__14700);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__14702__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__14703 = ntcoll;
var G__14704 = cljs.core.first(vals);
var G__14705 = cljs.core.next(vals);
tcoll = G__14703;
val = G__14704;
vals = G__14705;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14702 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__14706__i = 0, G__14706__a = new Array(arguments.length -  2);
while (G__14706__i < G__14706__a.length) {G__14706__a[G__14706__i] = arguments[G__14706__i + 2]; ++G__14706__i;}
  vals = new cljs.core.IndexedSeq(G__14706__a,0);
} 
return G__14702__delegate.call(this,tcoll,val,vals);};
G__14702.cljs$lang$maxFixedArity = 2;
G__14702.cljs$lang$applyTo = (function (arglist__14707){
var tcoll = cljs.core.first(arglist__14707);
arglist__14707 = cljs.core.next(arglist__14707);
var val = cljs.core.first(arglist__14707);
var vals = cljs.core.rest(arglist__14707);
return G__14702__delegate(tcoll,val,vals);
});
G__14702.cljs$core$IFn$_invoke$arity$variadic = G__14702__delegate;
return G__14702;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__14708 = null;
if (arguments.length > 2) {
var G__14709__i = 0, G__14709__a = new Array(arguments.length -  2);
while (G__14709__i < G__14709__a.length) {G__14709__a[G__14709__i] = arguments[G__14709__i + 2]; ++G__14709__i;}
G__14708 = new cljs.core.IndexedSeq(G__14709__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__14708);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__14710__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__14711 = ntcoll;
var G__14712 = cljs.core.first(kvs);
var G__14713 = cljs.core.second(kvs);
var G__14714 = cljs.core.nnext(kvs);
tcoll = G__14711;
key = G__14712;
val = G__14713;
kvs = G__14714;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14710 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__14715__i = 0, G__14715__a = new Array(arguments.length -  3);
while (G__14715__i < G__14715__a.length) {G__14715__a[G__14715__i] = arguments[G__14715__i + 3]; ++G__14715__i;}
  kvs = new cljs.core.IndexedSeq(G__14715__a,0);
} 
return G__14710__delegate.call(this,tcoll,key,val,kvs);};
G__14710.cljs$lang$maxFixedArity = 3;
G__14710.cljs$lang$applyTo = (function (arglist__14716){
var tcoll = cljs.core.first(arglist__14716);
arglist__14716 = cljs.core.next(arglist__14716);
var key = cljs.core.first(arglist__14716);
arglist__14716 = cljs.core.next(arglist__14716);
var val = cljs.core.first(arglist__14716);
var kvs = cljs.core.rest(arglist__14716);
return G__14710__delegate(tcoll,key,val,kvs);
});
G__14710.cljs$core$IFn$_invoke$arity$variadic = G__14710__delegate;
return G__14710;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__14717 = null;
if (arguments.length > 3) {
var G__14718__i = 0, G__14718__a = new Array(arguments.length -  3);
while (G__14718__i < G__14718__a.length) {G__14718__a[G__14718__i] = arguments[G__14718__i + 3]; ++G__14718__i;}
G__14717 = new cljs.core.IndexedSeq(G__14718__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__14717);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__14719__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__14720 = ntcoll;
var G__14721 = cljs.core.first(ks);
var G__14722 = cljs.core.next(ks);
tcoll = G__14720;
key = G__14721;
ks = G__14722;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14719 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__14723__i = 0, G__14723__a = new Array(arguments.length -  2);
while (G__14723__i < G__14723__a.length) {G__14723__a[G__14723__i] = arguments[G__14723__i + 2]; ++G__14723__i;}
  ks = new cljs.core.IndexedSeq(G__14723__a,0);
} 
return G__14719__delegate.call(this,tcoll,key,ks);};
G__14719.cljs$lang$maxFixedArity = 2;
G__14719.cljs$lang$applyTo = (function (arglist__14724){
var tcoll = cljs.core.first(arglist__14724);
arglist__14724 = cljs.core.next(arglist__14724);
var key = cljs.core.first(arglist__14724);
var ks = cljs.core.rest(arglist__14724);
return G__14719__delegate(tcoll,key,ks);
});
G__14719.cljs$core$IFn$_invoke$arity$variadic = G__14719__delegate;
return G__14719;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__14725 = null;
if (arguments.length > 2) {
var G__14726__i = 0, G__14726__a = new Array(arguments.length -  2);
while (G__14726__i < G__14726__a.length) {G__14726__a[G__14726__i] = arguments[G__14726__i + 2]; ++G__14726__i;}
G__14725 = new cljs.core.IndexedSeq(G__14726__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__14725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__14727__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__14728 = ntcoll;
var G__14729 = cljs.core.first(vals);
var G__14730 = cljs.core.next(vals);
tcoll = G__14728;
val = G__14729;
vals = G__14730;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14727 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__14731__i = 0, G__14731__a = new Array(arguments.length -  2);
while (G__14731__i < G__14731__a.length) {G__14731__a[G__14731__i] = arguments[G__14731__i + 2]; ++G__14731__i;}
  vals = new cljs.core.IndexedSeq(G__14731__a,0);
} 
return G__14727__delegate.call(this,tcoll,val,vals);};
G__14727.cljs$lang$maxFixedArity = 2;
G__14727.cljs$lang$applyTo = (function (arglist__14732){
var tcoll = cljs.core.first(arglist__14732);
arglist__14732 = cljs.core.next(arglist__14732);
var val = cljs.core.first(arglist__14732);
var vals = cljs.core.rest(arglist__14732);
return G__14727__delegate(tcoll,val,vals);
});
G__14727.cljs$core$IFn$_invoke$arity$variadic = G__14727__delegate;
return G__14727;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__14733 = null;
if (arguments.length > 2) {
var G__14734__i = 0, G__14734__a = new Array(arguments.length -  2);
while (G__14734__i < G__14734__a.length) {G__14734__a[G__14734__i] = arguments[G__14734__i + 2]; ++G__14734__i;}
G__14733 = new cljs.core.IndexedSeq(G__14734__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__14733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4705 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4705);
} else {
var G__14945 = a4705;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14945) : f.call(null,G__14945));
}
} else {
var b4706 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4705,b4706);
} else {
var G__14946 = a4705;
var G__14947 = b4706;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14946,G__14947) : f.call(null,G__14946,G__14947));
}
} else {
var c4707 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4705,b4706,c4707);
} else {
var G__14948 = a4705;
var G__14949 = b4706;
var G__14950 = c4707;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14948,G__14949,G__14950) : f.call(null,G__14948,G__14949,G__14950));
}
} else {
var d4708 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4705,b4706,c4707,d4708);
} else {
var G__14951 = a4705;
var G__14952 = b4706;
var G__14953 = c4707;
var G__14954 = d4708;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14951,G__14952,G__14953,G__14954) : f.call(null,G__14951,G__14952,G__14953,G__14954));
}
} else {
var e4709 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4705,b4706,c4707,d4708,e4709);
} else {
var G__14955 = a4705;
var G__14956 = b4706;
var G__14957 = c4707;
var G__14958 = d4708;
var G__14959 = e4709;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14955,G__14956,G__14957,G__14958,G__14959) : f.call(null,G__14955,G__14956,G__14957,G__14958,G__14959));
}
} else {
var f4710 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4705,b4706,c4707,d4708,e4709,f4710);
} else {
var G__14960 = a4705;
var G__14961 = b4706;
var G__14962 = c4707;
var G__14963 = d4708;
var G__14964 = e4709;
var G__14965 = f4710;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14960,G__14961,G__14962,G__14963,G__14964,G__14965) : f.call(null,G__14960,G__14961,G__14962,G__14963,G__14964,G__14965));
}
} else {
var g4711 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4705,b4706,c4707,d4708,e4709,f4710,g4711);
} else {
var G__14966 = a4705;
var G__14967 = b4706;
var G__14968 = c4707;
var G__14969 = d4708;
var G__14970 = e4709;
var G__14971 = f4710;
var G__14972 = g4711;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__14966,G__14967,G__14968,G__14969,G__14970,G__14971,G__14972) : f.call(null,G__14966,G__14967,G__14968,G__14969,G__14970,G__14971,G__14972));
}
} else {
var h4712 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712);
} else {
var G__14973 = a4705;
var G__14974 = b4706;
var G__14975 = c4707;
var G__14976 = d4708;
var G__14977 = e4709;
var G__14978 = f4710;
var G__14979 = g4711;
var G__14980 = h4712;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__14973,G__14974,G__14975,G__14976,G__14977,G__14978,G__14979,G__14980) : f.call(null,G__14973,G__14974,G__14975,G__14976,G__14977,G__14978,G__14979,G__14980));
}
} else {
var i4713 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713);
} else {
var G__14981 = a4705;
var G__14982 = b4706;
var G__14983 = c4707;
var G__14984 = d4708;
var G__14985 = e4709;
var G__14986 = f4710;
var G__14987 = g4711;
var G__14988 = h4712;
var G__14989 = i4713;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__14981,G__14982,G__14983,G__14984,G__14985,G__14986,G__14987,G__14988,G__14989) : f.call(null,G__14981,G__14982,G__14983,G__14984,G__14985,G__14986,G__14987,G__14988,G__14989));
}
} else {
var j4714 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713,j4714);
} else {
var G__14990 = a4705;
var G__14991 = b4706;
var G__14992 = c4707;
var G__14993 = d4708;
var G__14994 = e4709;
var G__14995 = f4710;
var G__14996 = g4711;
var G__14997 = h4712;
var G__14998 = i4713;
var G__14999 = j4714;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__14990,G__14991,G__14992,G__14993,G__14994,G__14995,G__14996,G__14997,G__14998,G__14999) : f.call(null,G__14990,G__14991,G__14992,G__14993,G__14994,G__14995,G__14996,G__14997,G__14998,G__14999));
}
} else {
var k4715 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713,j4714,k4715);
} else {
var G__15000 = a4705;
var G__15001 = b4706;
var G__15002 = c4707;
var G__15003 = d4708;
var G__15004 = e4709;
var G__15005 = f4710;
var G__15006 = g4711;
var G__15007 = h4712;
var G__15008 = i4713;
var G__15009 = j4714;
var G__15010 = k4715;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__15000,G__15001,G__15002,G__15003,G__15004,G__15005,G__15006,G__15007,G__15008,G__15009,G__15010) : f.call(null,G__15000,G__15001,G__15002,G__15003,G__15004,G__15005,G__15006,G__15007,G__15008,G__15009,G__15010));
}
} else {
var l4716 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713,j4714,k4715,l4716);
} else {
var G__15011 = a4705;
var G__15012 = b4706;
var G__15013 = c4707;
var G__15014 = d4708;
var G__15015 = e4709;
var G__15016 = f4710;
var G__15017 = g4711;
var G__15018 = h4712;
var G__15019 = i4713;
var G__15020 = j4714;
var G__15021 = k4715;
var G__15022 = l4716;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__15011,G__15012,G__15013,G__15014,G__15015,G__15016,G__15017,G__15018,G__15019,G__15020,G__15021,G__15022) : f.call(null,G__15011,G__15012,G__15013,G__15014,G__15015,G__15016,G__15017,G__15018,G__15019,G__15020,G__15021,G__15022));
}
} else {
var m4717 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713,j4714,k4715,l4716,m4717);
} else {
var G__15023 = a4705;
var G__15024 = b4706;
var G__15025 = c4707;
var G__15026 = d4708;
var G__15027 = e4709;
var G__15028 = f4710;
var G__15029 = g4711;
var G__15030 = h4712;
var G__15031 = i4713;
var G__15032 = j4714;
var G__15033 = k4715;
var G__15034 = l4716;
var G__15035 = m4717;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__15023,G__15024,G__15025,G__15026,G__15027,G__15028,G__15029,G__15030,G__15031,G__15032,G__15033,G__15034,G__15035) : f.call(null,G__15023,G__15024,G__15025,G__15026,G__15027,G__15028,G__15029,G__15030,G__15031,G__15032,G__15033,G__15034,G__15035));
}
} else {
var n4718 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713,j4714,k4715,l4716,m4717,n4718);
} else {
var G__15036 = a4705;
var G__15037 = b4706;
var G__15038 = c4707;
var G__15039 = d4708;
var G__15040 = e4709;
var G__15041 = f4710;
var G__15042 = g4711;
var G__15043 = h4712;
var G__15044 = i4713;
var G__15045 = j4714;
var G__15046 = k4715;
var G__15047 = l4716;
var G__15048 = m4717;
var G__15049 = n4718;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__15036,G__15037,G__15038,G__15039,G__15040,G__15041,G__15042,G__15043,G__15044,G__15045,G__15046,G__15047,G__15048,G__15049) : f.call(null,G__15036,G__15037,G__15038,G__15039,G__15040,G__15041,G__15042,G__15043,G__15044,G__15045,G__15046,G__15047,G__15048,G__15049));
}
} else {
var o4719 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713,j4714,k4715,l4716,m4717,n4718,o4719);
} else {
var G__15050 = a4705;
var G__15051 = b4706;
var G__15052 = c4707;
var G__15053 = d4708;
var G__15054 = e4709;
var G__15055 = f4710;
var G__15056 = g4711;
var G__15057 = h4712;
var G__15058 = i4713;
var G__15059 = j4714;
var G__15060 = k4715;
var G__15061 = l4716;
var G__15062 = m4717;
var G__15063 = n4718;
var G__15064 = o4719;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__15050,G__15051,G__15052,G__15053,G__15054,G__15055,G__15056,G__15057,G__15058,G__15059,G__15060,G__15061,G__15062,G__15063,G__15064) : f.call(null,G__15050,G__15051,G__15052,G__15053,G__15054,G__15055,G__15056,G__15057,G__15058,G__15059,G__15060,G__15061,G__15062,G__15063,G__15064));
}
} else {
var p4720 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713,j4714,k4715,l4716,m4717,n4718,o4719,p4720);
} else {
var G__15065 = a4705;
var G__15066 = b4706;
var G__15067 = c4707;
var G__15068 = d4708;
var G__15069 = e4709;
var G__15070 = f4710;
var G__15071 = g4711;
var G__15072 = h4712;
var G__15073 = i4713;
var G__15074 = j4714;
var G__15075 = k4715;
var G__15076 = l4716;
var G__15077 = m4717;
var G__15078 = n4718;
var G__15079 = o4719;
var G__15080 = p4720;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__15065,G__15066,G__15067,G__15068,G__15069,G__15070,G__15071,G__15072,G__15073,G__15074,G__15075,G__15076,G__15077,G__15078,G__15079,G__15080) : f.call(null,G__15065,G__15066,G__15067,G__15068,G__15069,G__15070,G__15071,G__15072,G__15073,G__15074,G__15075,G__15076,G__15077,G__15078,G__15079,G__15080));
}
} else {
var q4721 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713,j4714,k4715,l4716,m4717,n4718,o4719,p4720,q4721);
} else {
var G__15081 = a4705;
var G__15082 = b4706;
var G__15083 = c4707;
var G__15084 = d4708;
var G__15085 = e4709;
var G__15086 = f4710;
var G__15087 = g4711;
var G__15088 = h4712;
var G__15089 = i4713;
var G__15090 = j4714;
var G__15091 = k4715;
var G__15092 = l4716;
var G__15093 = m4717;
var G__15094 = n4718;
var G__15095 = o4719;
var G__15096 = p4720;
var G__15097 = q4721;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__15081,G__15082,G__15083,G__15084,G__15085,G__15086,G__15087,G__15088,G__15089,G__15090,G__15091,G__15092,G__15093,G__15094,G__15095,G__15096,G__15097) : f.call(null,G__15081,G__15082,G__15083,G__15084,G__15085,G__15086,G__15087,G__15088,G__15089,G__15090,G__15091,G__15092,G__15093,G__15094,G__15095,G__15096,G__15097));
}
} else {
var r4722 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713,j4714,k4715,l4716,m4717,n4718,o4719,p4720,q4721,r4722);
} else {
var G__15098 = a4705;
var G__15099 = b4706;
var G__15100 = c4707;
var G__15101 = d4708;
var G__15102 = e4709;
var G__15103 = f4710;
var G__15104 = g4711;
var G__15105 = h4712;
var G__15106 = i4713;
var G__15107 = j4714;
var G__15108 = k4715;
var G__15109 = l4716;
var G__15110 = m4717;
var G__15111 = n4718;
var G__15112 = o4719;
var G__15113 = p4720;
var G__15114 = q4721;
var G__15115 = r4722;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__15098,G__15099,G__15100,G__15101,G__15102,G__15103,G__15104,G__15105,G__15106,G__15107,G__15108,G__15109,G__15110,G__15111,G__15112,G__15113,G__15114,G__15115) : f.call(null,G__15098,G__15099,G__15100,G__15101,G__15102,G__15103,G__15104,G__15105,G__15106,G__15107,G__15108,G__15109,G__15110,G__15111,G__15112,G__15113,G__15114,G__15115));
}
} else {
var s4723 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713,j4714,k4715,l4716,m4717,n4718,o4719,p4720,q4721,r4722,s4723);
} else {
var G__15116 = a4705;
var G__15117 = b4706;
var G__15118 = c4707;
var G__15119 = d4708;
var G__15120 = e4709;
var G__15121 = f4710;
var G__15122 = g4711;
var G__15123 = h4712;
var G__15124 = i4713;
var G__15125 = j4714;
var G__15126 = k4715;
var G__15127 = l4716;
var G__15128 = m4717;
var G__15129 = n4718;
var G__15130 = o4719;
var G__15131 = p4720;
var G__15132 = q4721;
var G__15133 = r4722;
var G__15134 = s4723;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__15116,G__15117,G__15118,G__15119,G__15120,G__15121,G__15122,G__15123,G__15124,G__15125,G__15126,G__15127,G__15128,G__15129,G__15130,G__15131,G__15132,G__15133,G__15134) : f.call(null,G__15116,G__15117,G__15118,G__15119,G__15120,G__15121,G__15122,G__15123,G__15124,G__15125,G__15126,G__15127,G__15128,G__15129,G__15130,G__15131,G__15132,G__15133,G__15134));
}
} else {
var t4724 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4705,b4706,c4707,d4708,e4709,f4710,g4711,h4712,i4713,j4714,k4715,l4716,m4717,n4718,o4719,p4720,q4721,r4722,s4723,t4724);
} else {
var G__15135 = a4705;
var G__15136 = b4706;
var G__15137 = c4707;
var G__15138 = d4708;
var G__15139 = e4709;
var G__15140 = f4710;
var G__15141 = g4711;
var G__15142 = h4712;
var G__15143 = i4713;
var G__15144 = j4714;
var G__15145 = k4715;
var G__15146 = l4716;
var G__15147 = m4717;
var G__15148 = n4718;
var G__15149 = o4719;
var G__15150 = p4720;
var G__15151 = q4721;
var G__15152 = r4722;
var G__15153 = s4723;
var G__15154 = t4724;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__15135,G__15136,G__15137,G__15138,G__15139,G__15140,G__15141,G__15142,G__15143,G__15144,G__15145,G__15146,G__15147,G__15148,G__15149,G__15150,G__15151,G__15152,G__15153,G__15154) : f.call(null,G__15135,G__15136,G__15137,G__15138,G__15139,G__15140,G__15141,G__15142,G__15143,G__15144,G__15145,G__15146,G__15147,G__15148,G__15149,G__15150,G__15151,G__15152,G__15153,G__15154));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__15155__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__15155 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__15156__i = 0, G__15156__a = new Array(arguments.length -  5);
while (G__15156__i < G__15156__a.length) {G__15156__a[G__15156__i] = arguments[G__15156__i + 5]; ++G__15156__i;}
  args = new cljs.core.IndexedSeq(G__15156__a,0);
} 
return G__15155__delegate.call(this,f,a,b,c,d,args);};
G__15155.cljs$lang$maxFixedArity = 5;
G__15155.cljs$lang$applyTo = (function (arglist__15157){
var f = cljs.core.first(arglist__15157);
arglist__15157 = cljs.core.next(arglist__15157);
var a = cljs.core.first(arglist__15157);
arglist__15157 = cljs.core.next(arglist__15157);
var b = cljs.core.first(arglist__15157);
arglist__15157 = cljs.core.next(arglist__15157);
var c = cljs.core.first(arglist__15157);
arglist__15157 = cljs.core.next(arglist__15157);
var d = cljs.core.first(arglist__15157);
var args = cljs.core.rest(arglist__15157);
return G__15155__delegate(f,a,b,c,d,args);
});
G__15155.cljs$core$IFn$_invoke$arity$variadic = G__15155__delegate;
return G__15155;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__15158 = null;
if (arguments.length > 5) {
var G__15159__i = 0, G__15159__a = new Array(arguments.length -  5);
while (G__15159__i < G__15159__a.length) {G__15159__a[G__15159__i] = arguments[G__15159__i + 5]; ++G__15159__i;}
G__15158 = new cljs.core.IndexedSeq(G__15159__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__15158);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__15175 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15175) : f.call(null,G__15175));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__15176 = cljs.core.meta(obj);
var G__15177 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15176,G__15177) : f.call(null,G__15176,G__15177));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__15178 = cljs.core.meta(obj);
var G__15179 = a;
var G__15180 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15178,G__15179,G__15180) : f.call(null,G__15178,G__15179,G__15180));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__15181 = cljs.core.meta(obj);
var G__15182 = a;
var G__15183 = b;
var G__15184 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15181,G__15182,G__15183,G__15184) : f.call(null,G__15181,G__15182,G__15183,G__15184));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__15185 = cljs.core.meta(obj);
var G__15186 = a;
var G__15187 = b;
var G__15188 = c;
var G__15189 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15185,G__15186,G__15187,G__15188,G__15189) : f.call(null,G__15185,G__15186,G__15187,G__15188,G__15189));
})());
});
var vary_meta__7 = (function() { 
var G__15190__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__15190 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__15191__i = 0, G__15191__a = new Array(arguments.length -  6);
while (G__15191__i < G__15191__a.length) {G__15191__a[G__15191__i] = arguments[G__15191__i + 6]; ++G__15191__i;}
  args = new cljs.core.IndexedSeq(G__15191__a,0);
} 
return G__15190__delegate.call(this,obj,f,a,b,c,d,args);};
G__15190.cljs$lang$maxFixedArity = 6;
G__15190.cljs$lang$applyTo = (function (arglist__15192){
var obj = cljs.core.first(arglist__15192);
arglist__15192 = cljs.core.next(arglist__15192);
var f = cljs.core.first(arglist__15192);
arglist__15192 = cljs.core.next(arglist__15192);
var a = cljs.core.first(arglist__15192);
arglist__15192 = cljs.core.next(arglist__15192);
var b = cljs.core.first(arglist__15192);
arglist__15192 = cljs.core.next(arglist__15192);
var c = cljs.core.first(arglist__15192);
arglist__15192 = cljs.core.next(arglist__15192);
var d = cljs.core.first(arglist__15192);
var args = cljs.core.rest(arglist__15192);
return G__15190__delegate(obj,f,a,b,c,d,args);
});
G__15190.cljs$core$IFn$_invoke$arity$variadic = G__15190__delegate;
return G__15190;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__15193 = null;
if (arguments.length > 6) {
var G__15194__i = 0, G__15194__a = new Array(arguments.length -  6);
while (G__15194__i < G__15194__a.length) {G__15194__a[G__15194__i] = arguments[G__15194__i + 6]; ++G__15194__i;}
G__15193 = new cljs.core.IndexedSeq(G__15194__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__15193);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__15195__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__15195 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__15196__i = 0, G__15196__a = new Array(arguments.length -  2);
while (G__15196__i < G__15196__a.length) {G__15196__a[G__15196__i] = arguments[G__15196__i + 2]; ++G__15196__i;}
  more = new cljs.core.IndexedSeq(G__15196__a,0);
} 
return G__15195__delegate.call(this,x,y,more);};
G__15195.cljs$lang$maxFixedArity = 2;
G__15195.cljs$lang$applyTo = (function (arglist__15197){
var x = cljs.core.first(arglist__15197);
arglist__15197 = cljs.core.next(arglist__15197);
var y = cljs.core.first(arglist__15197);
var more = cljs.core.rest(arglist__15197);
return G__15195__delegate(x,y,more);
});
G__15195.cljs$core$IFn$_invoke$arity$variadic = G__15195__delegate;
return G__15195;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__15198 = null;
if (arguments.length > 2) {
var G__15199__i = 0, G__15199__a = new Array(arguments.length -  2);
while (G__15199__i < G__15199__a.length) {G__15199__a[G__15199__i] = arguments[G__15199__i + 2]; ++G__15199__i;}
G__15198 = new cljs.core.IndexedSeq(G__15199__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__15198);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t15203 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t15203 = (function (nil_iter,meta15204){
this.nil_iter = nil_iter;
this.meta15204 = meta15204;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t15203.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t15203.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t15203.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t15203.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_15205){
var self__ = this;
var _15205__$1 = this;
return self__.meta15204;
});

cljs.core.t15203.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_15205,meta15204__$1){
var self__ = this;
var _15205__$1 = this;
return (new cljs.core.t15203(self__.nil_iter,meta15204__$1));
});

cljs.core.t15203.cljs$lang$type = true;

cljs.core.t15203.cljs$lang$ctorStr = "cljs.core/t15203";

cljs.core.t15203.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/t15203");
});

cljs.core.__GT_t15203 = (function __GT_t15203(nil_iter__$1,meta15204){
return (new cljs.core.t15203(nil_iter__$1,meta15204));
});

}

return (new cljs.core.t15203(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3762__auto__ = !((lt.stepper == null));
if(and__3762__auto__){
return self__.iter.hasNext();
} else {
return and__3762__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__15206 = lt;
var G__15207 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__15206,G__15207) : self__.xform.call(null,G__15206,G__15207));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__15208 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__15208) : self__.xform.call(null,G__15208));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__15210 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__15210) : xform.call(null,G__15210));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__15212 = cljs.core.next(iters__$1);
iters__$1 = G__15212;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4661__auto___15213 = self__.iters.length;
var i_15214 = (0);
while(true){
if((i_15214 < n__4661__auto___15213)){
(self__.nexts[i_15214] = (self__.iters[i_15214]).next());

var G__15215 = (i_15214 + (1));
i_15214 = G__15215;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3762__auto__ = !((lt.stepper == null));
if(and__3762__auto__){
return this$.hasNext();
} else {
return and__3762__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__15211 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__15211) : self__.xform.call(null,G__15211));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__15220 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__15220) : xform.call(null,G__15220));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__15221_15225 = cljs.core.seq(colls);
var chunk__15222_15226 = null;
var count__15223_15227 = (0);
var i__15224_15228 = (0);
while(true){
if((i__15224_15228 < count__15223_15227)){
var coll_15229 = chunk__15222_15226.cljs$core$IIndexed$_nth$arity$2(null,i__15224_15228);
iters.push(cljs.core.iter(coll_15229));

var G__15230 = seq__15221_15225;
var G__15231 = chunk__15222_15226;
var G__15232 = count__15223_15227;
var G__15233 = (i__15224_15228 + (1));
seq__15221_15225 = G__15230;
chunk__15222_15226 = G__15231;
count__15223_15227 = G__15232;
i__15224_15228 = G__15233;
continue;
} else {
var temp__4126__auto___15234 = cljs.core.seq(seq__15221_15225);
if(temp__4126__auto___15234){
var seq__15221_15235__$1 = temp__4126__auto___15234;
if(cljs.core.chunked_seq_QMARK_(seq__15221_15235__$1)){
var c__4561__auto___15236 = cljs.core.chunk_first(seq__15221_15235__$1);
var G__15237 = cljs.core.chunk_rest(seq__15221_15235__$1);
var G__15238 = c__4561__auto___15236;
var G__15239 = cljs.core.count(c__4561__auto___15236);
var G__15240 = (0);
seq__15221_15225 = G__15237;
chunk__15222_15226 = G__15238;
count__15223_15227 = G__15239;
i__15224_15228 = G__15240;
continue;
} else {
var coll_15241 = cljs.core.first(seq__15221_15235__$1);
iters.push(cljs.core.iter(coll_15241));

var G__15242 = cljs.core.next(seq__15221_15235__$1);
var G__15243 = null;
var G__15244 = (0);
var G__15245 = (0);
seq__15221_15225 = G__15242;
chunk__15222_15226 = G__15243;
count__15223_15227 = G__15244;
i__15224_15228 = G__15245;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3774__auto__ = cljs.core.seq(coll);
if(or__3774__auto__){
return or__3774__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__15246__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__15246 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__15247__i = 0, G__15247__a = new Array(arguments.length -  2);
while (G__15247__i < G__15247__a.length) {G__15247__a[G__15247__i] = arguments[G__15247__i + 2]; ++G__15247__i;}
  colls = new cljs.core.IndexedSeq(G__15247__a,0);
} 
return G__15246__delegate.call(this,xform,coll,colls);};
G__15246.cljs$lang$maxFixedArity = 2;
G__15246.cljs$lang$applyTo = (function (arglist__15248){
var xform = cljs.core.first(arglist__15248);
arglist__15248 = cljs.core.next(arglist__15248);
var coll = cljs.core.first(arglist__15248);
var colls = cljs.core.rest(arglist__15248);
return G__15246__delegate(xform,coll,colls);
});
G__15246.cljs$core$IFn$_invoke$arity$variadic = G__15246__delegate;
return G__15246;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__15249 = null;
if (arguments.length > 2) {
var G__15250__i = 0, G__15250__a = new Array(arguments.length -  2);
while (G__15250__i < G__15250__a.length) {G__15250__a[G__15250__i] = arguments[G__15250__i + 2]; ++G__15250__i;}
G__15249 = new cljs.core.IndexedSeq(G__15250__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__15249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__15252 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15252) : pred.call(null,G__15252));
})())){
var G__15253 = pred;
var G__15254 = cljs.core.next(coll);
pred = G__15253;
coll = G__15254;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3774__auto__ = (function (){var G__15258 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15258) : pred.call(null,G__15258));
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var G__15259 = pred;
var G__15260 = cljs.core.next(coll);
pred = G__15259;
coll = G__15260;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__15267 = null;
var G__15267__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__15267__1 = (function (x){
return cljs.core.not((function (){var G__15264 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15264) : f.call(null,G__15264));
})());
});
var G__15267__2 = (function (x,y){
return cljs.core.not((function (){var G__15265 = x;
var G__15266 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15265,G__15266) : f.call(null,G__15265,G__15266));
})());
});
var G__15267__3 = (function() { 
var G__15268__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__15268 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__15269__i = 0, G__15269__a = new Array(arguments.length -  2);
while (G__15269__i < G__15269__a.length) {G__15269__a[G__15269__i] = arguments[G__15269__i + 2]; ++G__15269__i;}
  zs = new cljs.core.IndexedSeq(G__15269__a,0);
} 
return G__15268__delegate.call(this,x,y,zs);};
G__15268.cljs$lang$maxFixedArity = 2;
G__15268.cljs$lang$applyTo = (function (arglist__15270){
var x = cljs.core.first(arglist__15270);
arglist__15270 = cljs.core.next(arglist__15270);
var y = cljs.core.first(arglist__15270);
var zs = cljs.core.rest(arglist__15270);
return G__15268__delegate(x,y,zs);
});
G__15268.cljs$core$IFn$_invoke$arity$variadic = G__15268__delegate;
return G__15268;
})()
;
G__15267 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__15267__0.call(this);
case 1:
return G__15267__1.call(this,x);
case 2:
return G__15267__2.call(this,x,y);
default:
var G__15271 = null;
if (arguments.length > 2) {
var G__15272__i = 0, G__15272__a = new Array(arguments.length -  2);
while (G__15272__i < G__15272__a.length) {G__15272__a[G__15272__i] = arguments[G__15272__i + 2]; ++G__15272__i;}
G__15271 = new cljs.core.IndexedSeq(G__15272__a,0);
}
return G__15267__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__15271);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15267.cljs$lang$maxFixedArity = 2;
G__15267.cljs$lang$applyTo = G__15267__3.cljs$lang$applyTo;
G__15267.cljs$core$IFn$_invoke$arity$0 = G__15267__0;
G__15267.cljs$core$IFn$_invoke$arity$1 = G__15267__1;
G__15267.cljs$core$IFn$_invoke$arity$2 = G__15267__2;
G__15267.cljs$core$IFn$_invoke$arity$variadic = G__15267__3.cljs$core$IFn$_invoke$arity$variadic;
return G__15267;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__15273__delegate = function (args){
return x;
};
var G__15273 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15274__i = 0, G__15274__a = new Array(arguments.length -  0);
while (G__15274__i < G__15274__a.length) {G__15274__a[G__15274__i] = arguments[G__15274__i + 0]; ++G__15274__i;}
  args = new cljs.core.IndexedSeq(G__15274__a,0);
} 
return G__15273__delegate.call(this,args);};
G__15273.cljs$lang$maxFixedArity = 0;
G__15273.cljs$lang$applyTo = (function (arglist__15275){
var args = cljs.core.seq(arglist__15275);
return G__15273__delegate(args);
});
G__15273.cljs$core$IFn$_invoke$arity$variadic = G__15273__delegate;
return G__15273;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__15330 = null;
var G__15330__0 = (function (){
var G__15303 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15303) : f.call(null,G__15303));
});
var G__15330__1 = (function (x){
var G__15304 = (function (){var G__15305 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15305) : g.call(null,G__15305));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15304) : f.call(null,G__15304));
});
var G__15330__2 = (function (x,y){
var G__15306 = (function (){var G__15307 = x;
var G__15308 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15307,G__15308) : g.call(null,G__15307,G__15308));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15306) : f.call(null,G__15306));
});
var G__15330__3 = (function (x,y,z){
var G__15309 = (function (){var G__15310 = x;
var G__15311 = y;
var G__15312 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15310,G__15311,G__15312) : g.call(null,G__15310,G__15311,G__15312));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15309) : f.call(null,G__15309));
});
var G__15330__4 = (function() { 
var G__15331__delegate = function (x,y,z,args){
var G__15313 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15313) : f.call(null,G__15313));
};
var G__15331 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15332__i = 0, G__15332__a = new Array(arguments.length -  3);
while (G__15332__i < G__15332__a.length) {G__15332__a[G__15332__i] = arguments[G__15332__i + 3]; ++G__15332__i;}
  args = new cljs.core.IndexedSeq(G__15332__a,0);
} 
return G__15331__delegate.call(this,x,y,z,args);};
G__15331.cljs$lang$maxFixedArity = 3;
G__15331.cljs$lang$applyTo = (function (arglist__15333){
var x = cljs.core.first(arglist__15333);
arglist__15333 = cljs.core.next(arglist__15333);
var y = cljs.core.first(arglist__15333);
arglist__15333 = cljs.core.next(arglist__15333);
var z = cljs.core.first(arglist__15333);
var args = cljs.core.rest(arglist__15333);
return G__15331__delegate(x,y,z,args);
});
G__15331.cljs$core$IFn$_invoke$arity$variadic = G__15331__delegate;
return G__15331;
})()
;
G__15330 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15330__0.call(this);
case 1:
return G__15330__1.call(this,x);
case 2:
return G__15330__2.call(this,x,y);
case 3:
return G__15330__3.call(this,x,y,z);
default:
var G__15334 = null;
if (arguments.length > 3) {
var G__15335__i = 0, G__15335__a = new Array(arguments.length -  3);
while (G__15335__i < G__15335__a.length) {G__15335__a[G__15335__i] = arguments[G__15335__i + 3]; ++G__15335__i;}
G__15334 = new cljs.core.IndexedSeq(G__15335__a,0);
}
return G__15330__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15334);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15330.cljs$lang$maxFixedArity = 3;
G__15330.cljs$lang$applyTo = G__15330__4.cljs$lang$applyTo;
G__15330.cljs$core$IFn$_invoke$arity$0 = G__15330__0;
G__15330.cljs$core$IFn$_invoke$arity$1 = G__15330__1;
G__15330.cljs$core$IFn$_invoke$arity$2 = G__15330__2;
G__15330.cljs$core$IFn$_invoke$arity$3 = G__15330__3;
G__15330.cljs$core$IFn$_invoke$arity$variadic = G__15330__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15330;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__15336 = null;
var G__15336__0 = (function (){
var G__15314 = (function (){var G__15315 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15315) : g.call(null,G__15315));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15314) : f.call(null,G__15314));
});
var G__15336__1 = (function (x){
var G__15316 = (function (){var G__15317 = (function (){var G__15318 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15318) : h.call(null,G__15318));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15317) : g.call(null,G__15317));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15316) : f.call(null,G__15316));
});
var G__15336__2 = (function (x,y){
var G__15319 = (function (){var G__15320 = (function (){var G__15321 = x;
var G__15322 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15321,G__15322) : h.call(null,G__15321,G__15322));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15320) : g.call(null,G__15320));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15319) : f.call(null,G__15319));
});
var G__15336__3 = (function (x,y,z){
var G__15323 = (function (){var G__15324 = (function (){var G__15325 = x;
var G__15326 = y;
var G__15327 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15325,G__15326,G__15327) : h.call(null,G__15325,G__15326,G__15327));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15324) : g.call(null,G__15324));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15323) : f.call(null,G__15323));
});
var G__15336__4 = (function() { 
var G__15337__delegate = function (x,y,z,args){
var G__15328 = (function (){var G__15329 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15329) : g.call(null,G__15329));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15328) : f.call(null,G__15328));
};
var G__15337 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15338__i = 0, G__15338__a = new Array(arguments.length -  3);
while (G__15338__i < G__15338__a.length) {G__15338__a[G__15338__i] = arguments[G__15338__i + 3]; ++G__15338__i;}
  args = new cljs.core.IndexedSeq(G__15338__a,0);
} 
return G__15337__delegate.call(this,x,y,z,args);};
G__15337.cljs$lang$maxFixedArity = 3;
G__15337.cljs$lang$applyTo = (function (arglist__15339){
var x = cljs.core.first(arglist__15339);
arglist__15339 = cljs.core.next(arglist__15339);
var y = cljs.core.first(arglist__15339);
arglist__15339 = cljs.core.next(arglist__15339);
var z = cljs.core.first(arglist__15339);
var args = cljs.core.rest(arglist__15339);
return G__15337__delegate(x,y,z,args);
});
G__15337.cljs$core$IFn$_invoke$arity$variadic = G__15337__delegate;
return G__15337;
})()
;
G__15336 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15336__0.call(this);
case 1:
return G__15336__1.call(this,x);
case 2:
return G__15336__2.call(this,x,y);
case 3:
return G__15336__3.call(this,x,y,z);
default:
var G__15340 = null;
if (arguments.length > 3) {
var G__15341__i = 0, G__15341__a = new Array(arguments.length -  3);
while (G__15341__i < G__15341__a.length) {G__15341__a[G__15341__i] = arguments[G__15341__i + 3]; ++G__15341__i;}
G__15340 = new cljs.core.IndexedSeq(G__15341__a,0);
}
return G__15336__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15336.cljs$lang$maxFixedArity = 3;
G__15336.cljs$lang$applyTo = G__15336__4.cljs$lang$applyTo;
G__15336.cljs$core$IFn$_invoke$arity$0 = G__15336__0;
G__15336.cljs$core$IFn$_invoke$arity$1 = G__15336__1;
G__15336.cljs$core$IFn$_invoke$arity$2 = G__15336__2;
G__15336.cljs$core$IFn$_invoke$arity$3 = G__15336__3;
G__15336.cljs$core$IFn$_invoke$arity$variadic = G__15336__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15336;
})()
});
var comp__4 = (function() { 
var G__15342__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__15343__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__15344 = cljs.core.first(fs__$2).call(null,ret);
var G__15345 = cljs.core.next(fs__$2);
ret = G__15344;
fs__$2 = G__15345;
continue;
} else {
return ret;
}
break;
}
};
var G__15343 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15346__i = 0, G__15346__a = new Array(arguments.length -  0);
while (G__15346__i < G__15346__a.length) {G__15346__a[G__15346__i] = arguments[G__15346__i + 0]; ++G__15346__i;}
  args = new cljs.core.IndexedSeq(G__15346__a,0);
} 
return G__15343__delegate.call(this,args);};
G__15343.cljs$lang$maxFixedArity = 0;
G__15343.cljs$lang$applyTo = (function (arglist__15347){
var args = cljs.core.seq(arglist__15347);
return G__15343__delegate(args);
});
G__15343.cljs$core$IFn$_invoke$arity$variadic = G__15343__delegate;
return G__15343;
})()
;
;})(fs__$1))
};
var G__15342 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__15348__i = 0, G__15348__a = new Array(arguments.length -  3);
while (G__15348__i < G__15348__a.length) {G__15348__a[G__15348__i] = arguments[G__15348__i + 3]; ++G__15348__i;}
  fs = new cljs.core.IndexedSeq(G__15348__a,0);
} 
return G__15342__delegate.call(this,f1,f2,f3,fs);};
G__15342.cljs$lang$maxFixedArity = 3;
G__15342.cljs$lang$applyTo = (function (arglist__15349){
var f1 = cljs.core.first(arglist__15349);
arglist__15349 = cljs.core.next(arglist__15349);
var f2 = cljs.core.first(arglist__15349);
arglist__15349 = cljs.core.next(arglist__15349);
var f3 = cljs.core.first(arglist__15349);
var fs = cljs.core.rest(arglist__15349);
return G__15342__delegate(f1,f2,f3,fs);
});
G__15342.cljs$core$IFn$_invoke$arity$variadic = G__15342__delegate;
return G__15342;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__15350 = null;
if (arguments.length > 3) {
var G__15351__i = 0, G__15351__a = new Array(arguments.length -  3);
while (G__15351__i < G__15351__a.length) {G__15351__a[G__15351__i] = arguments[G__15351__i + 3]; ++G__15351__i;}
G__15350 = new cljs.core.IndexedSeq(G__15351__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__15350);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__15436 = null;
var G__15436__0 = (function (){
var G__15394 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15394) : f.call(null,G__15394));
});
var G__15436__1 = (function (x){
var G__15395 = arg1;
var G__15396 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15395,G__15396) : f.call(null,G__15395,G__15396));
});
var G__15436__2 = (function (x,y){
var G__15397 = arg1;
var G__15398 = x;
var G__15399 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15397,G__15398,G__15399) : f.call(null,G__15397,G__15398,G__15399));
});
var G__15436__3 = (function (x,y,z){
var G__15400 = arg1;
var G__15401 = x;
var G__15402 = y;
var G__15403 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15400,G__15401,G__15402,G__15403) : f.call(null,G__15400,G__15401,G__15402,G__15403));
});
var G__15436__4 = (function() { 
var G__15437__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__15437 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15438__i = 0, G__15438__a = new Array(arguments.length -  3);
while (G__15438__i < G__15438__a.length) {G__15438__a[G__15438__i] = arguments[G__15438__i + 3]; ++G__15438__i;}
  args = new cljs.core.IndexedSeq(G__15438__a,0);
} 
return G__15437__delegate.call(this,x,y,z,args);};
G__15437.cljs$lang$maxFixedArity = 3;
G__15437.cljs$lang$applyTo = (function (arglist__15439){
var x = cljs.core.first(arglist__15439);
arglist__15439 = cljs.core.next(arglist__15439);
var y = cljs.core.first(arglist__15439);
arglist__15439 = cljs.core.next(arglist__15439);
var z = cljs.core.first(arglist__15439);
var args = cljs.core.rest(arglist__15439);
return G__15437__delegate(x,y,z,args);
});
G__15437.cljs$core$IFn$_invoke$arity$variadic = G__15437__delegate;
return G__15437;
})()
;
G__15436 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15436__0.call(this);
case 1:
return G__15436__1.call(this,x);
case 2:
return G__15436__2.call(this,x,y);
case 3:
return G__15436__3.call(this,x,y,z);
default:
var G__15440 = null;
if (arguments.length > 3) {
var G__15441__i = 0, G__15441__a = new Array(arguments.length -  3);
while (G__15441__i < G__15441__a.length) {G__15441__a[G__15441__i] = arguments[G__15441__i + 3]; ++G__15441__i;}
G__15440 = new cljs.core.IndexedSeq(G__15441__a,0);
}
return G__15436__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15440);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15436.cljs$lang$maxFixedArity = 3;
G__15436.cljs$lang$applyTo = G__15436__4.cljs$lang$applyTo;
G__15436.cljs$core$IFn$_invoke$arity$0 = G__15436__0;
G__15436.cljs$core$IFn$_invoke$arity$1 = G__15436__1;
G__15436.cljs$core$IFn$_invoke$arity$2 = G__15436__2;
G__15436.cljs$core$IFn$_invoke$arity$3 = G__15436__3;
G__15436.cljs$core$IFn$_invoke$arity$variadic = G__15436__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15436;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__15442 = null;
var G__15442__0 = (function (){
var G__15404 = arg1;
var G__15405 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15404,G__15405) : f.call(null,G__15404,G__15405));
});
var G__15442__1 = (function (x){
var G__15406 = arg1;
var G__15407 = arg2;
var G__15408 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15406,G__15407,G__15408) : f.call(null,G__15406,G__15407,G__15408));
});
var G__15442__2 = (function (x,y){
var G__15409 = arg1;
var G__15410 = arg2;
var G__15411 = x;
var G__15412 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15409,G__15410,G__15411,G__15412) : f.call(null,G__15409,G__15410,G__15411,G__15412));
});
var G__15442__3 = (function (x,y,z){
var G__15413 = arg1;
var G__15414 = arg2;
var G__15415 = x;
var G__15416 = y;
var G__15417 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15413,G__15414,G__15415,G__15416,G__15417) : f.call(null,G__15413,G__15414,G__15415,G__15416,G__15417));
});
var G__15442__4 = (function() { 
var G__15443__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__15443 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15444__i = 0, G__15444__a = new Array(arguments.length -  3);
while (G__15444__i < G__15444__a.length) {G__15444__a[G__15444__i] = arguments[G__15444__i + 3]; ++G__15444__i;}
  args = new cljs.core.IndexedSeq(G__15444__a,0);
} 
return G__15443__delegate.call(this,x,y,z,args);};
G__15443.cljs$lang$maxFixedArity = 3;
G__15443.cljs$lang$applyTo = (function (arglist__15445){
var x = cljs.core.first(arglist__15445);
arglist__15445 = cljs.core.next(arglist__15445);
var y = cljs.core.first(arglist__15445);
arglist__15445 = cljs.core.next(arglist__15445);
var z = cljs.core.first(arglist__15445);
var args = cljs.core.rest(arglist__15445);
return G__15443__delegate(x,y,z,args);
});
G__15443.cljs$core$IFn$_invoke$arity$variadic = G__15443__delegate;
return G__15443;
})()
;
G__15442 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15442__0.call(this);
case 1:
return G__15442__1.call(this,x);
case 2:
return G__15442__2.call(this,x,y);
case 3:
return G__15442__3.call(this,x,y,z);
default:
var G__15446 = null;
if (arguments.length > 3) {
var G__15447__i = 0, G__15447__a = new Array(arguments.length -  3);
while (G__15447__i < G__15447__a.length) {G__15447__a[G__15447__i] = arguments[G__15447__i + 3]; ++G__15447__i;}
G__15446 = new cljs.core.IndexedSeq(G__15447__a,0);
}
return G__15442__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15446);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15442.cljs$lang$maxFixedArity = 3;
G__15442.cljs$lang$applyTo = G__15442__4.cljs$lang$applyTo;
G__15442.cljs$core$IFn$_invoke$arity$0 = G__15442__0;
G__15442.cljs$core$IFn$_invoke$arity$1 = G__15442__1;
G__15442.cljs$core$IFn$_invoke$arity$2 = G__15442__2;
G__15442.cljs$core$IFn$_invoke$arity$3 = G__15442__3;
G__15442.cljs$core$IFn$_invoke$arity$variadic = G__15442__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15442;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__15448 = null;
var G__15448__0 = (function (){
var G__15418 = arg1;
var G__15419 = arg2;
var G__15420 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15418,G__15419,G__15420) : f.call(null,G__15418,G__15419,G__15420));
});
var G__15448__1 = (function (x){
var G__15421 = arg1;
var G__15422 = arg2;
var G__15423 = arg3;
var G__15424 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15421,G__15422,G__15423,G__15424) : f.call(null,G__15421,G__15422,G__15423,G__15424));
});
var G__15448__2 = (function (x,y){
var G__15425 = arg1;
var G__15426 = arg2;
var G__15427 = arg3;
var G__15428 = x;
var G__15429 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15425,G__15426,G__15427,G__15428,G__15429) : f.call(null,G__15425,G__15426,G__15427,G__15428,G__15429));
});
var G__15448__3 = (function (x,y,z){
var G__15430 = arg1;
var G__15431 = arg2;
var G__15432 = arg3;
var G__15433 = x;
var G__15434 = y;
var G__15435 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__15430,G__15431,G__15432,G__15433,G__15434,G__15435) : f.call(null,G__15430,G__15431,G__15432,G__15433,G__15434,G__15435));
});
var G__15448__4 = (function() { 
var G__15449__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__15449 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15450__i = 0, G__15450__a = new Array(arguments.length -  3);
while (G__15450__i < G__15450__a.length) {G__15450__a[G__15450__i] = arguments[G__15450__i + 3]; ++G__15450__i;}
  args = new cljs.core.IndexedSeq(G__15450__a,0);
} 
return G__15449__delegate.call(this,x,y,z,args);};
G__15449.cljs$lang$maxFixedArity = 3;
G__15449.cljs$lang$applyTo = (function (arglist__15451){
var x = cljs.core.first(arglist__15451);
arglist__15451 = cljs.core.next(arglist__15451);
var y = cljs.core.first(arglist__15451);
arglist__15451 = cljs.core.next(arglist__15451);
var z = cljs.core.first(arglist__15451);
var args = cljs.core.rest(arglist__15451);
return G__15449__delegate(x,y,z,args);
});
G__15449.cljs$core$IFn$_invoke$arity$variadic = G__15449__delegate;
return G__15449;
})()
;
G__15448 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15448__0.call(this);
case 1:
return G__15448__1.call(this,x);
case 2:
return G__15448__2.call(this,x,y);
case 3:
return G__15448__3.call(this,x,y,z);
default:
var G__15452 = null;
if (arguments.length > 3) {
var G__15453__i = 0, G__15453__a = new Array(arguments.length -  3);
while (G__15453__i < G__15453__a.length) {G__15453__a[G__15453__i] = arguments[G__15453__i + 3]; ++G__15453__i;}
G__15452 = new cljs.core.IndexedSeq(G__15453__a,0);
}
return G__15448__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15452);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15448.cljs$lang$maxFixedArity = 3;
G__15448.cljs$lang$applyTo = G__15448__4.cljs$lang$applyTo;
G__15448.cljs$core$IFn$_invoke$arity$0 = G__15448__0;
G__15448.cljs$core$IFn$_invoke$arity$1 = G__15448__1;
G__15448.cljs$core$IFn$_invoke$arity$2 = G__15448__2;
G__15448.cljs$core$IFn$_invoke$arity$3 = G__15448__3;
G__15448.cljs$core$IFn$_invoke$arity$variadic = G__15448__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15448;
})()
});
var partial__5 = (function() { 
var G__15454__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__15455__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__15455 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15456__i = 0, G__15456__a = new Array(arguments.length -  0);
while (G__15456__i < G__15456__a.length) {G__15456__a[G__15456__i] = arguments[G__15456__i + 0]; ++G__15456__i;}
  args = new cljs.core.IndexedSeq(G__15456__a,0);
} 
return G__15455__delegate.call(this,args);};
G__15455.cljs$lang$maxFixedArity = 0;
G__15455.cljs$lang$applyTo = (function (arglist__15457){
var args = cljs.core.seq(arglist__15457);
return G__15455__delegate(args);
});
G__15455.cljs$core$IFn$_invoke$arity$variadic = G__15455__delegate;
return G__15455;
})()
;
};
var G__15454 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__15458__i = 0, G__15458__a = new Array(arguments.length -  4);
while (G__15458__i < G__15458__a.length) {G__15458__a[G__15458__i] = arguments[G__15458__i + 4]; ++G__15458__i;}
  more = new cljs.core.IndexedSeq(G__15458__a,0);
} 
return G__15454__delegate.call(this,f,arg1,arg2,arg3,more);};
G__15454.cljs$lang$maxFixedArity = 4;
G__15454.cljs$lang$applyTo = (function (arglist__15459){
var f = cljs.core.first(arglist__15459);
arglist__15459 = cljs.core.next(arglist__15459);
var arg1 = cljs.core.first(arglist__15459);
arglist__15459 = cljs.core.next(arglist__15459);
var arg2 = cljs.core.first(arglist__15459);
arglist__15459 = cljs.core.next(arglist__15459);
var arg3 = cljs.core.first(arglist__15459);
var more = cljs.core.rest(arglist__15459);
return G__15454__delegate(f,arg1,arg2,arg3,more);
});
G__15454.cljs$core$IFn$_invoke$arity$variadic = G__15454__delegate;
return G__15454;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__15460 = null;
if (arguments.length > 4) {
var G__15461__i = 0, G__15461__a = new Array(arguments.length -  4);
while (G__15461__i < G__15461__a.length) {G__15461__a[G__15461__i] = arguments[G__15461__i + 4]; ++G__15461__i;}
G__15460 = new cljs.core.IndexedSeq(G__15461__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__15460);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__15494 = null;
var G__15494__1 = (function (a){
var G__15478 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15478) : f.call(null,G__15478));
});
var G__15494__2 = (function (a,b){
var G__15479 = (((a == null))?x:a);
var G__15480 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15479,G__15480) : f.call(null,G__15479,G__15480));
});
var G__15494__3 = (function (a,b,c){
var G__15481 = (((a == null))?x:a);
var G__15482 = b;
var G__15483 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15481,G__15482,G__15483) : f.call(null,G__15481,G__15482,G__15483));
});
var G__15494__4 = (function() { 
var G__15495__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__15495 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15496__i = 0, G__15496__a = new Array(arguments.length -  3);
while (G__15496__i < G__15496__a.length) {G__15496__a[G__15496__i] = arguments[G__15496__i + 3]; ++G__15496__i;}
  ds = new cljs.core.IndexedSeq(G__15496__a,0);
} 
return G__15495__delegate.call(this,a,b,c,ds);};
G__15495.cljs$lang$maxFixedArity = 3;
G__15495.cljs$lang$applyTo = (function (arglist__15497){
var a = cljs.core.first(arglist__15497);
arglist__15497 = cljs.core.next(arglist__15497);
var b = cljs.core.first(arglist__15497);
arglist__15497 = cljs.core.next(arglist__15497);
var c = cljs.core.first(arglist__15497);
var ds = cljs.core.rest(arglist__15497);
return G__15495__delegate(a,b,c,ds);
});
G__15495.cljs$core$IFn$_invoke$arity$variadic = G__15495__delegate;
return G__15495;
})()
;
G__15494 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__15494__1.call(this,a);
case 2:
return G__15494__2.call(this,a,b);
case 3:
return G__15494__3.call(this,a,b,c);
default:
var G__15498 = null;
if (arguments.length > 3) {
var G__15499__i = 0, G__15499__a = new Array(arguments.length -  3);
while (G__15499__i < G__15499__a.length) {G__15499__a[G__15499__i] = arguments[G__15499__i + 3]; ++G__15499__i;}
G__15498 = new cljs.core.IndexedSeq(G__15499__a,0);
}
return G__15494__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15498);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15494.cljs$lang$maxFixedArity = 3;
G__15494.cljs$lang$applyTo = G__15494__4.cljs$lang$applyTo;
G__15494.cljs$core$IFn$_invoke$arity$1 = G__15494__1;
G__15494.cljs$core$IFn$_invoke$arity$2 = G__15494__2;
G__15494.cljs$core$IFn$_invoke$arity$3 = G__15494__3;
G__15494.cljs$core$IFn$_invoke$arity$variadic = G__15494__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15494;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__15500 = null;
var G__15500__2 = (function (a,b){
var G__15484 = (((a == null))?x:a);
var G__15485 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15484,G__15485) : f.call(null,G__15484,G__15485));
});
var G__15500__3 = (function (a,b,c){
var G__15486 = (((a == null))?x:a);
var G__15487 = (((b == null))?y:b);
var G__15488 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15486,G__15487,G__15488) : f.call(null,G__15486,G__15487,G__15488));
});
var G__15500__4 = (function() { 
var G__15501__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__15501 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15502__i = 0, G__15502__a = new Array(arguments.length -  3);
while (G__15502__i < G__15502__a.length) {G__15502__a[G__15502__i] = arguments[G__15502__i + 3]; ++G__15502__i;}
  ds = new cljs.core.IndexedSeq(G__15502__a,0);
} 
return G__15501__delegate.call(this,a,b,c,ds);};
G__15501.cljs$lang$maxFixedArity = 3;
G__15501.cljs$lang$applyTo = (function (arglist__15503){
var a = cljs.core.first(arglist__15503);
arglist__15503 = cljs.core.next(arglist__15503);
var b = cljs.core.first(arglist__15503);
arglist__15503 = cljs.core.next(arglist__15503);
var c = cljs.core.first(arglist__15503);
var ds = cljs.core.rest(arglist__15503);
return G__15501__delegate(a,b,c,ds);
});
G__15501.cljs$core$IFn$_invoke$arity$variadic = G__15501__delegate;
return G__15501;
})()
;
G__15500 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__15500__2.call(this,a,b);
case 3:
return G__15500__3.call(this,a,b,c);
default:
var G__15504 = null;
if (arguments.length > 3) {
var G__15505__i = 0, G__15505__a = new Array(arguments.length -  3);
while (G__15505__i < G__15505__a.length) {G__15505__a[G__15505__i] = arguments[G__15505__i + 3]; ++G__15505__i;}
G__15504 = new cljs.core.IndexedSeq(G__15505__a,0);
}
return G__15500__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15500.cljs$lang$maxFixedArity = 3;
G__15500.cljs$lang$applyTo = G__15500__4.cljs$lang$applyTo;
G__15500.cljs$core$IFn$_invoke$arity$2 = G__15500__2;
G__15500.cljs$core$IFn$_invoke$arity$3 = G__15500__3;
G__15500.cljs$core$IFn$_invoke$arity$variadic = G__15500__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15500;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__15506 = null;
var G__15506__2 = (function (a,b){
var G__15489 = (((a == null))?x:a);
var G__15490 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15489,G__15490) : f.call(null,G__15489,G__15490));
});
var G__15506__3 = (function (a,b,c){
var G__15491 = (((a == null))?x:a);
var G__15492 = (((b == null))?y:b);
var G__15493 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15491,G__15492,G__15493) : f.call(null,G__15491,G__15492,G__15493));
});
var G__15506__4 = (function() { 
var G__15507__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__15507 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15508__i = 0, G__15508__a = new Array(arguments.length -  3);
while (G__15508__i < G__15508__a.length) {G__15508__a[G__15508__i] = arguments[G__15508__i + 3]; ++G__15508__i;}
  ds = new cljs.core.IndexedSeq(G__15508__a,0);
} 
return G__15507__delegate.call(this,a,b,c,ds);};
G__15507.cljs$lang$maxFixedArity = 3;
G__15507.cljs$lang$applyTo = (function (arglist__15509){
var a = cljs.core.first(arglist__15509);
arglist__15509 = cljs.core.next(arglist__15509);
var b = cljs.core.first(arglist__15509);
arglist__15509 = cljs.core.next(arglist__15509);
var c = cljs.core.first(arglist__15509);
var ds = cljs.core.rest(arglist__15509);
return G__15507__delegate(a,b,c,ds);
});
G__15507.cljs$core$IFn$_invoke$arity$variadic = G__15507__delegate;
return G__15507;
})()
;
G__15506 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__15506__2.call(this,a,b);
case 3:
return G__15506__3.call(this,a,b,c);
default:
var G__15510 = null;
if (arguments.length > 3) {
var G__15511__i = 0, G__15511__a = new Array(arguments.length -  3);
while (G__15511__i < G__15511__a.length) {G__15511__a[G__15511__i] = arguments[G__15511__i + 3]; ++G__15511__i;}
G__15510 = new cljs.core.IndexedSeq(G__15511__a,0);
}
return G__15506__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15510);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15506.cljs$lang$maxFixedArity = 3;
G__15506.cljs$lang$applyTo = G__15506__4.cljs$lang$applyTo;
G__15506.cljs$core$IFn$_invoke$arity$2 = G__15506__2;
G__15506.cljs$core$IFn$_invoke$arity$3 = G__15506__3;
G__15506.cljs$core$IFn$_invoke$arity$variadic = G__15506__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15506;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__15542 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__15542) : cljs.core.volatile_BANG_.call(null,G__15542));
})();
return ((function (i){
return (function() {
var G__15572 = null;
var G__15572__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15572__1 = (function (result){
var G__15543 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15543) : rf.call(null,G__15543));
});
var G__15572__2 = (function (result,input){
var G__15544 = result;
var G__15545 = (function (){var G__15546 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__15547 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15546,G__15547) : f.call(null,G__15546,G__15547));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15544,G__15545) : rf.call(null,G__15544,G__15545));
});
G__15572 = function(result,input){
switch(arguments.length){
case 0:
return G__15572__0.call(this);
case 1:
return G__15572__1.call(this,result);
case 2:
return G__15572__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15572.cljs$core$IFn$_invoke$arity$0 = G__15572__0;
G__15572.cljs$core$IFn$_invoke$arity$1 = G__15572__1;
G__15572.cljs$core$IFn$_invoke$arity$2 = G__15572__2;
return G__15572;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4661__auto___15573 = size;
var i_15574 = (0);
while(true){
if((i_15574 < n__4661__auto___15573)){
cljs.core.chunk_append(b,(function (){var G__15568 = (idx + i_15574);
var G__15569 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15574);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15568,G__15569) : f.call(null,G__15568,G__15569));
})());

var G__15575 = (i_15574 + (1));
i_15574 = G__15575;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__15570 = idx;
var G__15571 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15570,G__15571) : f.call(null,G__15570,G__15571));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__15594 = null;
var G__15594__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15594__1 = (function (result){
var G__15588 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15588) : rf.call(null,G__15588));
});
var G__15594__2 = (function (result,input){
var v = (function (){var G__15589 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15589) : f.call(null,G__15589));
})();
if((v == null)){
return result;
} else {
var G__15590 = result;
var G__15591 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15590,G__15591) : rf.call(null,G__15590,G__15591));
}
});
G__15594 = function(result,input){
switch(arguments.length){
case 0:
return G__15594__0.call(this);
case 1:
return G__15594__1.call(this,result);
case 2:
return G__15594__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15594.cljs$core$IFn$_invoke$arity$0 = G__15594__0;
G__15594.cljs$core$IFn$_invoke$arity$1 = G__15594__1;
G__15594.cljs$core$IFn$_invoke$arity$2 = G__15594__2;
return G__15594;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4661__auto___15595 = size;
var i_15596 = (0);
while(true){
if((i_15596 < n__4661__auto___15595)){
var x_15597 = (function (){var G__15592 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15596);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15592) : f.call(null,G__15592));
})();
if((x_15597 == null)){
} else {
cljs.core.chunk_append(b,x_15597);
}

var G__15598 = (i_15596 + (1));
i_15596 = G__15598;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__15593 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15593) : f.call(null,G__15593));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__15599 = this$__$1;
return goog.getUid(G__15599);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__15600 = cljs.core.seq(self__.watches);
var chunk__15601 = null;
var count__15602 = (0);
var i__15603 = (0);
while(true){
if((i__15603 < count__15602)){
var vec__15604 = chunk__15601.cljs$core$IIndexed$_nth$arity$2(null,i__15603);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15604,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15604,(1),null);
var G__15605_15614 = key;
var G__15606_15615 = this$__$1;
var G__15607_15616 = oldval;
var G__15608_15617 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15605_15614,G__15606_15615,G__15607_15616,G__15608_15617) : f.call(null,G__15605_15614,G__15606_15615,G__15607_15616,G__15608_15617));

var G__15618 = seq__15600;
var G__15619 = chunk__15601;
var G__15620 = count__15602;
var G__15621 = (i__15603 + (1));
seq__15600 = G__15618;
chunk__15601 = G__15619;
count__15602 = G__15620;
i__15603 = G__15621;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15600);
if(temp__4126__auto__){
var seq__15600__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15600__$1)){
var c__4561__auto__ = cljs.core.chunk_first(seq__15600__$1);
var G__15622 = cljs.core.chunk_rest(seq__15600__$1);
var G__15623 = c__4561__auto__;
var G__15624 = cljs.core.count(c__4561__auto__);
var G__15625 = (0);
seq__15600 = G__15622;
chunk__15601 = G__15623;
count__15602 = G__15624;
i__15603 = G__15625;
continue;
} else {
var vec__15609 = cljs.core.first(seq__15600__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15609,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15609,(1),null);
var G__15610_15626 = key;
var G__15611_15627 = this$__$1;
var G__15612_15628 = oldval;
var G__15613_15629 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15610_15626,G__15611_15627,G__15612_15628,G__15613_15629) : f.call(null,G__15610_15626,G__15611_15627,G__15612_15628,G__15613_15629));

var G__15630 = cljs.core.next(seq__15600__$1);
var G__15631 = null;
var G__15632 = (0);
var G__15633 = (0);
seq__15600 = G__15630;
chunk__15601 = G__15631;
count__15602 = G__15632;
i__15603 = G__15633;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__15637__delegate = function (x,p__15634){
var map__15636 = p__15634;
var map__15636__$1 = ((cljs.core.seq_QMARK_(map__15636))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15636):map__15636);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15636__$1,cljs.core.constant$keyword$8);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15636__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__15637 = function (x,var_args){
var p__15634 = null;
if (arguments.length > 1) {
var G__15638__i = 0, G__15638__a = new Array(arguments.length -  1);
while (G__15638__i < G__15638__a.length) {G__15638__a[G__15638__i] = arguments[G__15638__i + 1]; ++G__15638__i;}
  p__15634 = new cljs.core.IndexedSeq(G__15638__a,0);
} 
return G__15637__delegate.call(this,x,p__15634);};
G__15637.cljs$lang$maxFixedArity = 1;
G__15637.cljs$lang$applyTo = (function (arglist__15639){
var x = cljs.core.first(arglist__15639);
var p__15634 = cljs.core.rest(arglist__15639);
return G__15637__delegate(x,p__15634);
});
G__15637.cljs$core$IFn$_invoke$arity$variadic = G__15637__delegate;
return G__15637;
})()
;
atom = function(x,var_args){
var p__15634 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__15640 = null;
if (arguments.length > 1) {
var G__15641__i = 0, G__15641__a = new Array(arguments.length -  1);
while (G__15641__i < G__15641__a.length) {G__15641__a[G__15641__i] = arguments[G__15641__i + 1]; ++G__15641__i;}
G__15640 = new cljs.core.IndexedSeq(G__15641__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__15640);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15648 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15648) : f.call(null,G__15648));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15649 = a.state;
var G__15650 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15649,G__15650) : f.call(null,G__15649,G__15650));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15651 = a.state;
var G__15652 = x;
var G__15653 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15651,G__15652,G__15653) : f.call(null,G__15651,G__15652,G__15653));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__15654__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__15654 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__15655__i = 0, G__15655__a = new Array(arguments.length -  4);
while (G__15655__i < G__15655__a.length) {G__15655__a[G__15655__i] = arguments[G__15655__i + 4]; ++G__15655__i;}
  more = new cljs.core.IndexedSeq(G__15655__a,0);
} 
return G__15654__delegate.call(this,a,f,x,y,more);};
G__15654.cljs$lang$maxFixedArity = 4;
G__15654.cljs$lang$applyTo = (function (arglist__15656){
var a = cljs.core.first(arglist__15656);
arglist__15656 = cljs.core.next(arglist__15656);
var f = cljs.core.first(arglist__15656);
arglist__15656 = cljs.core.next(arglist__15656);
var x = cljs.core.first(arglist__15656);
arglist__15656 = cljs.core.next(arglist__15656);
var y = cljs.core.first(arglist__15656);
var more = cljs.core.rest(arglist__15656);
return G__15654__delegate(a,f,x,y,more);
});
G__15654.cljs$core$IFn$_invoke$arity$variadic = G__15654__delegate;
return G__15654;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__15657 = null;
if (arguments.length > 4) {
var G__15658__i = 0, G__15658__a = new Array(arguments.length -  4);
while (G__15658__i < G__15658__a.length) {G__15658__a[G__15658__i] = arguments[G__15658__i + 4]; ++G__15658__i;}
G__15657 = new cljs.core.IndexedSeq(G__15658__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__15657);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15725 = null;
var G__15725__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15725__1 = (function (result){
var G__15692 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15692) : rf.call(null,G__15692));
});
var G__15725__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__15693 = i;
var G__15694 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15693,G__15694) : f.call(null,G__15693,G__15694));
})();
if((v == null)){
return result;
} else {
var G__15695 = result;
var G__15696 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15695,G__15696) : rf.call(null,G__15695,G__15696));
}
});
G__15725 = function(result,input){
switch(arguments.length){
case 0:
return G__15725__0.call(this);
case 1:
return G__15725__1.call(this,result);
case 2:
return G__15725__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15725.cljs$core$IFn$_invoke$arity$0 = G__15725__0;
G__15725.cljs$core$IFn$_invoke$arity$1 = G__15725__1;
G__15725.cljs$core$IFn$_invoke$arity$2 = G__15725__2;
return G__15725;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4661__auto___15726 = size;
var i_15727 = (0);
while(true){
if((i_15727 < n__4661__auto___15726)){
var x_15728 = (function (){var G__15721 = (idx + i_15727);
var G__15722 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15727);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15721,G__15722) : f.call(null,G__15721,G__15722));
})();
if((x_15728 == null)){
} else {
cljs.core.chunk_append(b,x_15728);
}

var G__15729 = (i_15727 + (1));
i_15727 = G__15729;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__15723 = idx;
var G__15724 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15723,G__15724) : f.call(null,G__15723,G__15724));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__15943 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15943) : p.call(null,G__15943));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3762__auto__ = (function (){var G__15945 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15945) : p.call(null,G__15945));
})();
if(cljs.core.truth_(and__3762__auto__)){
var G__15946 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15946) : p.call(null,G__15946));
} else {
return and__3762__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3762__auto__ = (function (){var G__15948 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15948) : p.call(null,G__15948));
})();
if(cljs.core.truth_(and__3762__auto__)){
var and__3762__auto____$1 = (function (){var G__15950 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15950) : p.call(null,G__15950));
})();
if(cljs.core.truth_(and__3762__auto____$1)){
var G__15951 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15951) : p.call(null,G__15951));
} else {
return and__3762__auto____$1;
}
} else {
return and__3762__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__16120__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__16120 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16121__i = 0, G__16121__a = new Array(arguments.length -  3);
while (G__16121__i < G__16121__a.length) {G__16121__a[G__16121__i] = arguments[G__16121__i + 3]; ++G__16121__i;}
  args = new cljs.core.IndexedSeq(G__16121__a,0);
} 
return G__16120__delegate.call(this,x,y,z,args);};
G__16120.cljs$lang$maxFixedArity = 3;
G__16120.cljs$lang$applyTo = (function (arglist__16122){
var x = cljs.core.first(arglist__16122);
arglist__16122 = cljs.core.next(arglist__16122);
var y = cljs.core.first(arglist__16122);
arglist__16122 = cljs.core.next(arglist__16122);
var z = cljs.core.first(arglist__16122);
var args = cljs.core.rest(arglist__16122);
return G__16120__delegate(x,y,z,args);
});
G__16120.cljs$core$IFn$_invoke$arity$variadic = G__16120__delegate;
return G__16120;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__16123 = null;
if (arguments.length > 3) {
var G__16124__i = 0, G__16124__a = new Array(arguments.length -  3);
while (G__16124__i < G__16124__a.length) {G__16124__a[G__16124__i] = arguments[G__16124__i + 3]; ++G__16124__i;}
G__16123 = new cljs.core.IndexedSeq(G__16124__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16123);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3762__auto__ = (function (){var G__15983 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15983) : p1.call(null,G__15983));
})();
if(cljs.core.truth_(and__3762__auto__)){
var G__15984 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15984) : p2.call(null,G__15984));
} else {
return and__3762__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3762__auto__ = (function (){var G__15986 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15986) : p1.call(null,G__15986));
})();
if(cljs.core.truth_(and__3762__auto__)){
var and__3762__auto____$1 = (function (){var G__15988 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15988) : p1.call(null,G__15988));
})();
if(cljs.core.truth_(and__3762__auto____$1)){
var and__3762__auto____$2 = (function (){var G__15990 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15990) : p2.call(null,G__15990));
})();
if(cljs.core.truth_(and__3762__auto____$2)){
var G__15991 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15991) : p2.call(null,G__15991));
} else {
return and__3762__auto____$2;
}
} else {
return and__3762__auto____$1;
}
} else {
return and__3762__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3762__auto__ = (function (){var G__15993 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15993) : p1.call(null,G__15993));
})();
if(cljs.core.truth_(and__3762__auto__)){
var and__3762__auto____$1 = (function (){var G__15995 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15995) : p1.call(null,G__15995));
})();
if(cljs.core.truth_(and__3762__auto____$1)){
var and__3762__auto____$2 = (function (){var G__15997 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15997) : p1.call(null,G__15997));
})();
if(cljs.core.truth_(and__3762__auto____$2)){
var and__3762__auto____$3 = (function (){var G__15999 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15999) : p2.call(null,G__15999));
})();
if(cljs.core.truth_(and__3762__auto____$3)){
var and__3762__auto____$4 = (function (){var G__16001 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16001) : p2.call(null,G__16001));
})();
if(cljs.core.truth_(and__3762__auto____$4)){
var G__16002 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16002) : p2.call(null,G__16002));
} else {
return and__3762__auto____$4;
}
} else {
return and__3762__auto____$3;
}
} else {
return and__3762__auto____$2;
}
} else {
return and__3762__auto____$1;
}
} else {
return and__3762__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__16125__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__15730_SHARP_){
var and__3762__auto__ = (function (){var G__16007 = p1__15730_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16007) : p1.call(null,G__16007));
})();
if(cljs.core.truth_(and__3762__auto__)){
var G__16008 = p1__15730_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16008) : p2.call(null,G__16008));
} else {
return and__3762__auto__;
}
}),args)));
};
var G__16125 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16126__i = 0, G__16126__a = new Array(arguments.length -  3);
while (G__16126__i < G__16126__a.length) {G__16126__a[G__16126__i] = arguments[G__16126__i + 3]; ++G__16126__i;}
  args = new cljs.core.IndexedSeq(G__16126__a,0);
} 
return G__16125__delegate.call(this,x,y,z,args);};
G__16125.cljs$lang$maxFixedArity = 3;
G__16125.cljs$lang$applyTo = (function (arglist__16127){
var x = cljs.core.first(arglist__16127);
arglist__16127 = cljs.core.next(arglist__16127);
var y = cljs.core.first(arglist__16127);
arglist__16127 = cljs.core.next(arglist__16127);
var z = cljs.core.first(arglist__16127);
var args = cljs.core.rest(arglist__16127);
return G__16125__delegate(x,y,z,args);
});
G__16125.cljs$core$IFn$_invoke$arity$variadic = G__16125__delegate;
return G__16125;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__16128 = null;
if (arguments.length > 3) {
var G__16129__i = 0, G__16129__a = new Array(arguments.length -  3);
while (G__16129__i < G__16129__a.length) {G__16129__a[G__16129__i] = arguments[G__16129__i + 3]; ++G__16129__i;}
G__16128 = new cljs.core.IndexedSeq(G__16129__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3762__auto__ = (function (){var G__16054 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16054) : p1.call(null,G__16054));
})();
if(cljs.core.truth_(and__3762__auto__)){
var and__3762__auto____$1 = (function (){var G__16056 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16056) : p2.call(null,G__16056));
})();
if(cljs.core.truth_(and__3762__auto____$1)){
var G__16057 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16057) : p3.call(null,G__16057));
} else {
return and__3762__auto____$1;
}
} else {
return and__3762__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3762__auto__ = (function (){var G__16059 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16059) : p1.call(null,G__16059));
})();
if(cljs.core.truth_(and__3762__auto__)){
var and__3762__auto____$1 = (function (){var G__16061 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16061) : p2.call(null,G__16061));
})();
if(cljs.core.truth_(and__3762__auto____$1)){
var and__3762__auto____$2 = (function (){var G__16063 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16063) : p3.call(null,G__16063));
})();
if(cljs.core.truth_(and__3762__auto____$2)){
var and__3762__auto____$3 = (function (){var G__16065 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16065) : p1.call(null,G__16065));
})();
if(cljs.core.truth_(and__3762__auto____$3)){
var and__3762__auto____$4 = (function (){var G__16067 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16067) : p2.call(null,G__16067));
})();
if(cljs.core.truth_(and__3762__auto____$4)){
var G__16068 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16068) : p3.call(null,G__16068));
} else {
return and__3762__auto____$4;
}
} else {
return and__3762__auto____$3;
}
} else {
return and__3762__auto____$2;
}
} else {
return and__3762__auto____$1;
}
} else {
return and__3762__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3762__auto__ = (function (){var G__16070 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16070) : p1.call(null,G__16070));
})();
if(cljs.core.truth_(and__3762__auto__)){
var and__3762__auto____$1 = (function (){var G__16072 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16072) : p2.call(null,G__16072));
})();
if(cljs.core.truth_(and__3762__auto____$1)){
var and__3762__auto____$2 = (function (){var G__16074 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16074) : p3.call(null,G__16074));
})();
if(cljs.core.truth_(and__3762__auto____$2)){
var and__3762__auto____$3 = (function (){var G__16076 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16076) : p1.call(null,G__16076));
})();
if(cljs.core.truth_(and__3762__auto____$3)){
var and__3762__auto____$4 = (function (){var G__16078 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16078) : p2.call(null,G__16078));
})();
if(cljs.core.truth_(and__3762__auto____$4)){
var and__3762__auto____$5 = (function (){var G__16080 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16080) : p3.call(null,G__16080));
})();
if(cljs.core.truth_(and__3762__auto____$5)){
var and__3762__auto____$6 = (function (){var G__16082 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16082) : p1.call(null,G__16082));
})();
if(cljs.core.truth_(and__3762__auto____$6)){
var and__3762__auto____$7 = (function (){var G__16084 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16084) : p2.call(null,G__16084));
})();
if(cljs.core.truth_(and__3762__auto____$7)){
var G__16085 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16085) : p3.call(null,G__16085));
} else {
return and__3762__auto____$7;
}
} else {
return and__3762__auto____$6;
}
} else {
return and__3762__auto____$5;
}
} else {
return and__3762__auto____$4;
}
} else {
return and__3762__auto____$3;
}
} else {
return and__3762__auto____$2;
}
} else {
return and__3762__auto____$1;
}
} else {
return and__3762__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__16130__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__15731_SHARP_){
var and__3762__auto__ = (function (){var G__16092 = p1__15731_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16092) : p1.call(null,G__16092));
})();
if(cljs.core.truth_(and__3762__auto__)){
var and__3762__auto____$1 = (function (){var G__16094 = p1__15731_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16094) : p2.call(null,G__16094));
})();
if(cljs.core.truth_(and__3762__auto____$1)){
var G__16095 = p1__15731_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16095) : p3.call(null,G__16095));
} else {
return and__3762__auto____$1;
}
} else {
return and__3762__auto__;
}
}),args)));
};
var G__16130 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16131__i = 0, G__16131__a = new Array(arguments.length -  3);
while (G__16131__i < G__16131__a.length) {G__16131__a[G__16131__i] = arguments[G__16131__i + 3]; ++G__16131__i;}
  args = new cljs.core.IndexedSeq(G__16131__a,0);
} 
return G__16130__delegate.call(this,x,y,z,args);};
G__16130.cljs$lang$maxFixedArity = 3;
G__16130.cljs$lang$applyTo = (function (arglist__16132){
var x = cljs.core.first(arglist__16132);
arglist__16132 = cljs.core.next(arglist__16132);
var y = cljs.core.first(arglist__16132);
arglist__16132 = cljs.core.next(arglist__16132);
var z = cljs.core.first(arglist__16132);
var args = cljs.core.rest(arglist__16132);
return G__16130__delegate(x,y,z,args);
});
G__16130.cljs$core$IFn$_invoke$arity$variadic = G__16130__delegate;
return G__16130;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__16133 = null;
if (arguments.length > 3) {
var G__16134__i = 0, G__16134__a = new Array(arguments.length -  3);
while (G__16134__i < G__16134__a.length) {G__16134__a[G__16134__i] = arguments[G__16134__i + 3]; ++G__16134__i;}
G__16133 = new cljs.core.IndexedSeq(G__16134__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__16135__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15732_SHARP_){
var G__16111 = x;
return (p1__15732_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15732_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16111) : p1__15732_SHARP_.call(null,G__16111));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15733_SHARP_){
var and__3762__auto__ = (function (){var G__16113 = x;
return (p1__15733_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15733_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16113) : p1__15733_SHARP_.call(null,G__16113));
})();
if(cljs.core.truth_(and__3762__auto__)){
var G__16114 = y;
return (p1__15733_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15733_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16114) : p1__15733_SHARP_.call(null,G__16114));
} else {
return and__3762__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15734_SHARP_){
var and__3762__auto__ = (function (){var G__16116 = x;
return (p1__15734_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15734_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16116) : p1__15734_SHARP_.call(null,G__16116));
})();
if(cljs.core.truth_(and__3762__auto__)){
var and__3762__auto____$1 = (function (){var G__16118 = y;
return (p1__15734_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15734_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16118) : p1__15734_SHARP_.call(null,G__16118));
})();
if(cljs.core.truth_(and__3762__auto____$1)){
var G__16119 = z;
return (p1__15734_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15734_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16119) : p1__15734_SHARP_.call(null,G__16119));
} else {
return and__3762__auto____$1;
}
} else {
return and__3762__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__16136__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15735_SHARP_){
return cljs.core.every_QMARK_(p1__15735_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__16136 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16137__i = 0, G__16137__a = new Array(arguments.length -  3);
while (G__16137__i < G__16137__a.length) {G__16137__a[G__16137__i] = arguments[G__16137__i + 3]; ++G__16137__i;}
  args = new cljs.core.IndexedSeq(G__16137__a,0);
} 
return G__16136__delegate.call(this,x,y,z,args);};
G__16136.cljs$lang$maxFixedArity = 3;
G__16136.cljs$lang$applyTo = (function (arglist__16138){
var x = cljs.core.first(arglist__16138);
arglist__16138 = cljs.core.next(arglist__16138);
var y = cljs.core.first(arglist__16138);
arglist__16138 = cljs.core.next(arglist__16138);
var z = cljs.core.first(arglist__16138);
var args = cljs.core.rest(arglist__16138);
return G__16136__delegate(x,y,z,args);
});
G__16136.cljs$core$IFn$_invoke$arity$variadic = G__16136__delegate;
return G__16136;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__16139 = null;
if (arguments.length > 3) {
var G__16140__i = 0, G__16140__a = new Array(arguments.length -  3);
while (G__16140__i < G__16140__a.length) {G__16140__a[G__16140__i] = arguments[G__16140__i + 3]; ++G__16140__i;}
G__16139 = new cljs.core.IndexedSeq(G__16140__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16139);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__16135 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__16141__i = 0, G__16141__a = new Array(arguments.length -  3);
while (G__16141__i < G__16141__a.length) {G__16141__a[G__16141__i] = arguments[G__16141__i + 3]; ++G__16141__i;}
  ps = new cljs.core.IndexedSeq(G__16141__a,0);
} 
return G__16135__delegate.call(this,p1,p2,p3,ps);};
G__16135.cljs$lang$maxFixedArity = 3;
G__16135.cljs$lang$applyTo = (function (arglist__16142){
var p1 = cljs.core.first(arglist__16142);
arglist__16142 = cljs.core.next(arglist__16142);
var p2 = cljs.core.first(arglist__16142);
arglist__16142 = cljs.core.next(arglist__16142);
var p3 = cljs.core.first(arglist__16142);
var ps = cljs.core.rest(arglist__16142);
return G__16135__delegate(p1,p2,p3,ps);
});
G__16135.cljs$core$IFn$_invoke$arity$variadic = G__16135__delegate;
return G__16135;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__16143 = null;
if (arguments.length > 3) {
var G__16144__i = 0, G__16144__a = new Array(arguments.length -  3);
while (G__16144__i < G__16144__a.length) {G__16144__a[G__16144__i] = arguments[G__16144__i + 3]; ++G__16144__i;}
G__16143 = new cljs.core.IndexedSeq(G__16144__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__16143);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__16350 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16350) : p.call(null,G__16350));
});
var sp1__2 = (function (x,y){
var or__3774__auto__ = (function (){var G__16352 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16352) : p.call(null,G__16352));
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var G__16353 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16353) : p.call(null,G__16353));
}
});
var sp1__3 = (function (x,y,z){
var or__3774__auto__ = (function (){var G__16355 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16355) : p.call(null,G__16355));
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (function (){var G__16357 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16357) : p.call(null,G__16357));
})();
if(cljs.core.truth_(or__3774__auto____$1)){
return or__3774__auto____$1;
} else {
var G__16358 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16358) : p.call(null,G__16358));
}
}
});
var sp1__4 = (function() { 
var G__16519__delegate = function (x,y,z,args){
var or__3774__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__16519 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16520__i = 0, G__16520__a = new Array(arguments.length -  3);
while (G__16520__i < G__16520__a.length) {G__16520__a[G__16520__i] = arguments[G__16520__i + 3]; ++G__16520__i;}
  args = new cljs.core.IndexedSeq(G__16520__a,0);
} 
return G__16519__delegate.call(this,x,y,z,args);};
G__16519.cljs$lang$maxFixedArity = 3;
G__16519.cljs$lang$applyTo = (function (arglist__16521){
var x = cljs.core.first(arglist__16521);
arglist__16521 = cljs.core.next(arglist__16521);
var y = cljs.core.first(arglist__16521);
arglist__16521 = cljs.core.next(arglist__16521);
var z = cljs.core.first(arglist__16521);
var args = cljs.core.rest(arglist__16521);
return G__16519__delegate(x,y,z,args);
});
G__16519.cljs$core$IFn$_invoke$arity$variadic = G__16519__delegate;
return G__16519;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__16522 = null;
if (arguments.length > 3) {
var G__16523__i = 0, G__16523__a = new Array(arguments.length -  3);
while (G__16523__i < G__16523__a.length) {G__16523__a[G__16523__i] = arguments[G__16523__i + 3]; ++G__16523__i;}
G__16522 = new cljs.core.IndexedSeq(G__16523__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16522);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3774__auto__ = (function (){var G__16390 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16390) : p1.call(null,G__16390));
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var G__16391 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16391) : p2.call(null,G__16391));
}
});
var sp2__2 = (function (x,y){
var or__3774__auto__ = (function (){var G__16393 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16393) : p1.call(null,G__16393));
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (function (){var G__16395 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16395) : p1.call(null,G__16395));
})();
if(cljs.core.truth_(or__3774__auto____$1)){
return or__3774__auto____$1;
} else {
var or__3774__auto____$2 = (function (){var G__16397 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16397) : p2.call(null,G__16397));
})();
if(cljs.core.truth_(or__3774__auto____$2)){
return or__3774__auto____$2;
} else {
var G__16398 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16398) : p2.call(null,G__16398));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3774__auto__ = (function (){var G__16400 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16400) : p1.call(null,G__16400));
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (function (){var G__16402 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16402) : p1.call(null,G__16402));
})();
if(cljs.core.truth_(or__3774__auto____$1)){
return or__3774__auto____$1;
} else {
var or__3774__auto____$2 = (function (){var G__16404 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16404) : p1.call(null,G__16404));
})();
if(cljs.core.truth_(or__3774__auto____$2)){
return or__3774__auto____$2;
} else {
var or__3774__auto____$3 = (function (){var G__16406 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16406) : p2.call(null,G__16406));
})();
if(cljs.core.truth_(or__3774__auto____$3)){
return or__3774__auto____$3;
} else {
var or__3774__auto____$4 = (function (){var G__16408 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16408) : p2.call(null,G__16408));
})();
if(cljs.core.truth_(or__3774__auto____$4)){
return or__3774__auto____$4;
} else {
var G__16409 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16409) : p2.call(null,G__16409));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__16524__delegate = function (x,y,z,args){
var or__3774__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return cljs.core.some(((function (or__3774__auto__){
return (function (p1__16145_SHARP_){
var or__3774__auto____$1 = (function (){var G__16411 = p1__16145_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16411) : p1.call(null,G__16411));
})();
if(cljs.core.truth_(or__3774__auto____$1)){
return or__3774__auto____$1;
} else {
var G__16412 = p1__16145_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16412) : p2.call(null,G__16412));
}
});})(or__3774__auto__))
,args);
}
};
var G__16524 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16525__i = 0, G__16525__a = new Array(arguments.length -  3);
while (G__16525__i < G__16525__a.length) {G__16525__a[G__16525__i] = arguments[G__16525__i + 3]; ++G__16525__i;}
  args = new cljs.core.IndexedSeq(G__16525__a,0);
} 
return G__16524__delegate.call(this,x,y,z,args);};
G__16524.cljs$lang$maxFixedArity = 3;
G__16524.cljs$lang$applyTo = (function (arglist__16526){
var x = cljs.core.first(arglist__16526);
arglist__16526 = cljs.core.next(arglist__16526);
var y = cljs.core.first(arglist__16526);
arglist__16526 = cljs.core.next(arglist__16526);
var z = cljs.core.first(arglist__16526);
var args = cljs.core.rest(arglist__16526);
return G__16524__delegate(x,y,z,args);
});
G__16524.cljs$core$IFn$_invoke$arity$variadic = G__16524__delegate;
return G__16524;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__16527 = null;
if (arguments.length > 3) {
var G__16528__i = 0, G__16528__a = new Array(arguments.length -  3);
while (G__16528__i < G__16528__a.length) {G__16528__a[G__16528__i] = arguments[G__16528__i + 3]; ++G__16528__i;}
G__16527 = new cljs.core.IndexedSeq(G__16528__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3774__auto__ = (function (){var G__16458 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16458) : p1.call(null,G__16458));
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (function (){var G__16460 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16460) : p2.call(null,G__16460));
})();
if(cljs.core.truth_(or__3774__auto____$1)){
return or__3774__auto____$1;
} else {
var G__16461 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16461) : p3.call(null,G__16461));
}
}
});
var sp3__2 = (function (x,y){
var or__3774__auto__ = (function (){var G__16463 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16463) : p1.call(null,G__16463));
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (function (){var G__16465 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16465) : p2.call(null,G__16465));
})();
if(cljs.core.truth_(or__3774__auto____$1)){
return or__3774__auto____$1;
} else {
var or__3774__auto____$2 = (function (){var G__16467 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16467) : p3.call(null,G__16467));
})();
if(cljs.core.truth_(or__3774__auto____$2)){
return or__3774__auto____$2;
} else {
var or__3774__auto____$3 = (function (){var G__16469 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16469) : p1.call(null,G__16469));
})();
if(cljs.core.truth_(or__3774__auto____$3)){
return or__3774__auto____$3;
} else {
var or__3774__auto____$4 = (function (){var G__16471 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16471) : p2.call(null,G__16471));
})();
if(cljs.core.truth_(or__3774__auto____$4)){
return or__3774__auto____$4;
} else {
var G__16472 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16472) : p3.call(null,G__16472));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3774__auto__ = (function (){var G__16474 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16474) : p1.call(null,G__16474));
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (function (){var G__16476 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16476) : p2.call(null,G__16476));
})();
if(cljs.core.truth_(or__3774__auto____$1)){
return or__3774__auto____$1;
} else {
var or__3774__auto____$2 = (function (){var G__16478 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16478) : p3.call(null,G__16478));
})();
if(cljs.core.truth_(or__3774__auto____$2)){
return or__3774__auto____$2;
} else {
var or__3774__auto____$3 = (function (){var G__16480 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16480) : p1.call(null,G__16480));
})();
if(cljs.core.truth_(or__3774__auto____$3)){
return or__3774__auto____$3;
} else {
var or__3774__auto____$4 = (function (){var G__16482 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16482) : p2.call(null,G__16482));
})();
if(cljs.core.truth_(or__3774__auto____$4)){
return or__3774__auto____$4;
} else {
var or__3774__auto____$5 = (function (){var G__16484 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16484) : p3.call(null,G__16484));
})();
if(cljs.core.truth_(or__3774__auto____$5)){
return or__3774__auto____$5;
} else {
var or__3774__auto____$6 = (function (){var G__16486 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16486) : p1.call(null,G__16486));
})();
if(cljs.core.truth_(or__3774__auto____$6)){
return or__3774__auto____$6;
} else {
var or__3774__auto____$7 = (function (){var G__16488 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16488) : p2.call(null,G__16488));
})();
if(cljs.core.truth_(or__3774__auto____$7)){
return or__3774__auto____$7;
} else {
var G__16489 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16489) : p3.call(null,G__16489));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__16529__delegate = function (x,y,z,args){
var or__3774__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return cljs.core.some(((function (or__3774__auto__){
return (function (p1__16146_SHARP_){
var or__3774__auto____$1 = (function (){var G__16491 = p1__16146_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16491) : p1.call(null,G__16491));
})();
if(cljs.core.truth_(or__3774__auto____$1)){
return or__3774__auto____$1;
} else {
var or__3774__auto____$2 = (function (){var G__16493 = p1__16146_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16493) : p2.call(null,G__16493));
})();
if(cljs.core.truth_(or__3774__auto____$2)){
return or__3774__auto____$2;
} else {
var G__16494 = p1__16146_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16494) : p3.call(null,G__16494));
}
}
});})(or__3774__auto__))
,args);
}
};
var G__16529 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16530__i = 0, G__16530__a = new Array(arguments.length -  3);
while (G__16530__i < G__16530__a.length) {G__16530__a[G__16530__i] = arguments[G__16530__i + 3]; ++G__16530__i;}
  args = new cljs.core.IndexedSeq(G__16530__a,0);
} 
return G__16529__delegate.call(this,x,y,z,args);};
G__16529.cljs$lang$maxFixedArity = 3;
G__16529.cljs$lang$applyTo = (function (arglist__16531){
var x = cljs.core.first(arglist__16531);
arglist__16531 = cljs.core.next(arglist__16531);
var y = cljs.core.first(arglist__16531);
arglist__16531 = cljs.core.next(arglist__16531);
var z = cljs.core.first(arglist__16531);
var args = cljs.core.rest(arglist__16531);
return G__16529__delegate(x,y,z,args);
});
G__16529.cljs$core$IFn$_invoke$arity$variadic = G__16529__delegate;
return G__16529;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__16532 = null;
if (arguments.length > 3) {
var G__16533__i = 0, G__16533__a = new Array(arguments.length -  3);
while (G__16533__i < G__16533__a.length) {G__16533__a[G__16533__i] = arguments[G__16533__i + 3]; ++G__16533__i;}
G__16532 = new cljs.core.IndexedSeq(G__16533__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__16534__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__16147_SHARP_){
var G__16510 = x;
return (p1__16147_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16147_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16510) : p1__16147_SHARP_.call(null,G__16510));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__16148_SHARP_){
var or__3774__auto__ = (function (){var G__16512 = x;
return (p1__16148_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16148_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16512) : p1__16148_SHARP_.call(null,G__16512));
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var G__16513 = y;
return (p1__16148_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16148_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16513) : p1__16148_SHARP_.call(null,G__16513));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__16149_SHARP_){
var or__3774__auto__ = (function (){var G__16515 = x;
return (p1__16149_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16149_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16515) : p1__16149_SHARP_.call(null,G__16515));
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (function (){var G__16517 = y;
return (p1__16149_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16149_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16517) : p1__16149_SHARP_.call(null,G__16517));
})();
if(cljs.core.truth_(or__3774__auto____$1)){
return or__3774__auto____$1;
} else {
var G__16518 = z;
return (p1__16149_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16149_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16518) : p1__16149_SHARP_.call(null,G__16518));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__16535__delegate = function (x,y,z,args){
var or__3774__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return cljs.core.some(((function (or__3774__auto__,ps__$1){
return (function (p1__16150_SHARP_){
return cljs.core.some(p1__16150_SHARP_,args);
});})(or__3774__auto__,ps__$1))
,ps__$1);
}
};
var G__16535 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16536__i = 0, G__16536__a = new Array(arguments.length -  3);
while (G__16536__i < G__16536__a.length) {G__16536__a[G__16536__i] = arguments[G__16536__i + 3]; ++G__16536__i;}
  args = new cljs.core.IndexedSeq(G__16536__a,0);
} 
return G__16535__delegate.call(this,x,y,z,args);};
G__16535.cljs$lang$maxFixedArity = 3;
G__16535.cljs$lang$applyTo = (function (arglist__16537){
var x = cljs.core.first(arglist__16537);
arglist__16537 = cljs.core.next(arglist__16537);
var y = cljs.core.first(arglist__16537);
arglist__16537 = cljs.core.next(arglist__16537);
var z = cljs.core.first(arglist__16537);
var args = cljs.core.rest(arglist__16537);
return G__16535__delegate(x,y,z,args);
});
G__16535.cljs$core$IFn$_invoke$arity$variadic = G__16535__delegate;
return G__16535;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__16538 = null;
if (arguments.length > 3) {
var G__16539__i = 0, G__16539__a = new Array(arguments.length -  3);
while (G__16539__i < G__16539__a.length) {G__16539__a[G__16539__i] = arguments[G__16539__i + 3]; ++G__16539__i;}
G__16538 = new cljs.core.IndexedSeq(G__16539__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16538);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__16534 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__16540__i = 0, G__16540__a = new Array(arguments.length -  3);
while (G__16540__i < G__16540__a.length) {G__16540__a[G__16540__i] = arguments[G__16540__i + 3]; ++G__16540__i;}
  ps = new cljs.core.IndexedSeq(G__16540__a,0);
} 
return G__16534__delegate.call(this,p1,p2,p3,ps);};
G__16534.cljs$lang$maxFixedArity = 3;
G__16534.cljs$lang$applyTo = (function (arglist__16541){
var p1 = cljs.core.first(arglist__16541);
arglist__16541 = cljs.core.next(arglist__16541);
var p2 = cljs.core.first(arglist__16541);
arglist__16541 = cljs.core.next(arglist__16541);
var p3 = cljs.core.first(arglist__16541);
var ps = cljs.core.rest(arglist__16541);
return G__16534__delegate(p1,p2,p3,ps);
});
G__16534.cljs$core$IFn$_invoke$arity$variadic = G__16534__delegate;
return G__16534;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__16542 = null;
if (arguments.length > 3) {
var G__16543__i = 0, G__16543__a = new Array(arguments.length -  3);
while (G__16543__i < G__16543__a.length) {G__16543__a[G__16543__i] = arguments[G__16543__i + 3]; ++G__16543__i;}
G__16542 = new cljs.core.IndexedSeq(G__16543__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__16542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__16598 = null;
var G__16598__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16598__1 = (function (result){
var G__16584 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16584) : rf.call(null,G__16584));
});
var G__16598__2 = (function (result,input){
var G__16585 = result;
var G__16586 = (function (){var G__16587 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16587) : f.call(null,G__16587));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16585,G__16586) : rf.call(null,G__16585,G__16586));
});
var G__16598__3 = (function() { 
var G__16599__delegate = function (result,input,inputs){
var G__16588 = result;
var G__16589 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16588,G__16589) : rf.call(null,G__16588,G__16589));
};
var G__16599 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__16600__i = 0, G__16600__a = new Array(arguments.length -  2);
while (G__16600__i < G__16600__a.length) {G__16600__a[G__16600__i] = arguments[G__16600__i + 2]; ++G__16600__i;}
  inputs = new cljs.core.IndexedSeq(G__16600__a,0);
} 
return G__16599__delegate.call(this,result,input,inputs);};
G__16599.cljs$lang$maxFixedArity = 2;
G__16599.cljs$lang$applyTo = (function (arglist__16601){
var result = cljs.core.first(arglist__16601);
arglist__16601 = cljs.core.next(arglist__16601);
var input = cljs.core.first(arglist__16601);
var inputs = cljs.core.rest(arglist__16601);
return G__16599__delegate(result,input,inputs);
});
G__16599.cljs$core$IFn$_invoke$arity$variadic = G__16599__delegate;
return G__16599;
})()
;
G__16598 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__16598__0.call(this);
case 1:
return G__16598__1.call(this,result);
case 2:
return G__16598__2.call(this,result,input);
default:
var G__16602 = null;
if (arguments.length > 2) {
var G__16603__i = 0, G__16603__a = new Array(arguments.length -  2);
while (G__16603__i < G__16603__a.length) {G__16603__a[G__16603__i] = arguments[G__16603__i + 2]; ++G__16603__i;}
G__16602 = new cljs.core.IndexedSeq(G__16603__a,0);
}
return G__16598__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__16602);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16598.cljs$lang$maxFixedArity = 2;
G__16598.cljs$lang$applyTo = G__16598__3.cljs$lang$applyTo;
G__16598.cljs$core$IFn$_invoke$arity$0 = G__16598__0;
G__16598.cljs$core$IFn$_invoke$arity$1 = G__16598__1;
G__16598.cljs$core$IFn$_invoke$arity$2 = G__16598__2;
G__16598.cljs$core$IFn$_invoke$arity$variadic = G__16598__3.cljs$core$IFn$_invoke$arity$variadic;
return G__16598;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4661__auto___16604 = size;
var i_16605 = (0);
while(true){
if((i_16605 < n__4661__auto___16604)){
cljs.core.chunk_append(b,(function (){var G__16590 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16605);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16590) : f.call(null,G__16590));
})());

var G__16606 = (i_16605 + (1));
i_16605 = G__16606;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__16591 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16591) : f.call(null,G__16591));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__16592 = cljs.core.first(s1);
var G__16593 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16592,G__16593) : f.call(null,G__16592,G__16593));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__16594 = cljs.core.first(s1);
var G__16595 = cljs.core.first(s2);
var G__16596 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16594,G__16595,G__16596) : f.call(null,G__16594,G__16595,G__16596));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__16607__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__16544_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__16544_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__16607 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__16608__i = 0, G__16608__a = new Array(arguments.length -  4);
while (G__16608__i < G__16608__a.length) {G__16608__a[G__16608__i] = arguments[G__16608__i + 4]; ++G__16608__i;}
  colls = new cljs.core.IndexedSeq(G__16608__a,0);
} 
return G__16607__delegate.call(this,f,c1,c2,c3,colls);};
G__16607.cljs$lang$maxFixedArity = 4;
G__16607.cljs$lang$applyTo = (function (arglist__16609){
var f = cljs.core.first(arglist__16609);
arglist__16609 = cljs.core.next(arglist__16609);
var c1 = cljs.core.first(arglist__16609);
arglist__16609 = cljs.core.next(arglist__16609);
var c2 = cljs.core.first(arglist__16609);
arglist__16609 = cljs.core.next(arglist__16609);
var c3 = cljs.core.first(arglist__16609);
var colls = cljs.core.rest(arglist__16609);
return G__16607__delegate(f,c1,c2,c3,colls);
});
G__16607.cljs$core$IFn$_invoke$arity$variadic = G__16607__delegate;
return G__16607;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__16610 = null;
if (arguments.length > 4) {
var G__16611__i = 0, G__16611__a = new Array(arguments.length -  4);
while (G__16611__i < G__16611__a.length) {G__16611__a[G__16611__i] = arguments[G__16611__i + 4]; ++G__16611__i;}
G__16610 = new cljs.core.IndexedSeq(G__16611__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__16610);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__16620 = null;
var G__16620__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16620__1 = (function (result){
var G__16617 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16617) : rf.call(null,G__16617));
});
var G__16620__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__16618 = result;
var G__16619 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16618,G__16619) : rf.call(null,G__16618,G__16619));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__16620 = function(result,input){
switch(arguments.length){
case 0:
return G__16620__0.call(this);
case 1:
return G__16620__1.call(this,result);
case 2:
return G__16620__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16620.cljs$core$IFn$_invoke$arity$0 = G__16620__0;
G__16620.cljs$core$IFn$_invoke$arity$1 = G__16620__1;
G__16620.cljs$core$IFn$_invoke$arity$2 = G__16620__2;
return G__16620;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__16627 = null;
var G__16627__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16627__1 = (function (result){
var G__16624 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16624) : rf.call(null,G__16624));
});
var G__16627__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__16625 = result;
var G__16626 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16625,G__16626) : rf.call(null,G__16625,G__16626));
}
});
G__16627 = function(result,input){
switch(arguments.length){
case 0:
return G__16627__0.call(this);
case 1:
return G__16627__1.call(this,result);
case 2:
return G__16627__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16627.cljs$core$IFn$_invoke$arity$0 = G__16627__0;
G__16627.cljs$core$IFn$_invoke$arity$1 = G__16627__1;
G__16627.cljs$core$IFn$_invoke$arity$2 = G__16627__2;
return G__16627;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__16628 = (n__$1 - (1));
var G__16629 = cljs.core.rest(s);
n__$1 = G__16628;
coll__$1 = G__16629;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__16632 = cljs.core.next(s);
var G__16633 = cljs.core.next(lead);
s = G__16632;
lead = G__16633;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__16646 = null;
var G__16646__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16646__1 = (function (result){
var G__16640 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16640) : rf.call(null,G__16640));
});
var G__16646__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3762__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3762__auto__)){
var G__16641 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16641) : pred.call(null,G__16641));
} else {
return and__3762__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__16642 = result;
var G__16643 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16642,G__16643) : rf.call(null,G__16642,G__16643));
}
});
G__16646 = function(result,input){
switch(arguments.length){
case 0:
return G__16646__0.call(this);
case 1:
return G__16646__1.call(this,result);
case 2:
return G__16646__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16646.cljs$core$IFn$_invoke$arity$0 = G__16646__0;
G__16646.cljs$core$IFn$_invoke$arity$1 = G__16646__1;
G__16646.cljs$core$IFn$_invoke$arity$2 = G__16646__2;
return G__16646;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3762__auto__ = s;
if(and__3762__auto__){
var G__16645 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__16645) : pred__$1.call(null,G__16645));
} else {
return and__3762__auto__;
}
})())){
var G__16647 = pred__$1;
var G__16648 = cljs.core.rest(s);
pred__$1 = G__16647;
coll__$1 = G__16648;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__16657 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16657) : f.call(null,G__16657));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__16660__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__16660 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__16661__i = 0, G__16661__a = new Array(arguments.length -  2);
while (G__16661__i < G__16661__a.length) {G__16661__a[G__16661__i] = arguments[G__16661__i + 2]; ++G__16661__i;}
  colls = new cljs.core.IndexedSeq(G__16661__a,0);
} 
return G__16660__delegate.call(this,c1,c2,colls);};
G__16660.cljs$lang$maxFixedArity = 2;
G__16660.cljs$lang$applyTo = (function (arglist__16662){
var c1 = cljs.core.first(arglist__16662);
arglist__16662 = cljs.core.next(arglist__16662);
var c2 = cljs.core.first(arglist__16662);
var colls = cljs.core.rest(arglist__16662);
return G__16660__delegate(c1,c2,colls);
});
G__16660.cljs$core$IFn$_invoke$arity$variadic = G__16660__delegate;
return G__16660;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__16663 = null;
if (arguments.length > 2) {
var G__16664__i = 0, G__16664__a = new Array(arguments.length -  2);
while (G__16664__i < G__16664__a.length) {G__16664__a[G__16664__i] = arguments[G__16664__i + 2]; ++G__16664__i;}
G__16663 = new cljs.core.IndexedSeq(G__16664__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__16663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__16679 = null;
var G__16679__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16679__1 = (function (result){
var G__16672 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16672) : rf.call(null,G__16672));
});
var G__16679__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__16673 = result;
var G__16674 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16673,G__16674) : rf.call(null,G__16673,G__16674));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__16675 = sepr;
var G__16676 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16675,G__16676) : rf.call(null,G__16675,G__16676));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__16677 = result;
var G__16678 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16677,G__16678) : rf.call(null,G__16677,G__16678));
}
});
G__16679 = function(result,input){
switch(arguments.length){
case 0:
return G__16679__0.call(this);
case 1:
return G__16679__1.call(this,result);
case 2:
return G__16679__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16679.cljs$core$IFn$_invoke$arity$0 = G__16679__0;
G__16679.cljs$core$IFn$_invoke$arity$1 = G__16679__1;
G__16679.cljs$core$IFn$_invoke$arity$2 = G__16679__2;
return G__16679;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__16688__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__16688 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__16689__i = 0, G__16689__a = new Array(arguments.length -  1);
while (G__16689__i < G__16689__a.length) {G__16689__a[G__16689__i] = arguments[G__16689__i + 1]; ++G__16689__i;}
  colls = new cljs.core.IndexedSeq(G__16689__a,0);
} 
return G__16688__delegate.call(this,f,colls);};
G__16688.cljs$lang$maxFixedArity = 1;
G__16688.cljs$lang$applyTo = (function (arglist__16690){
var f = cljs.core.first(arglist__16690);
var colls = cljs.core.rest(arglist__16690);
return G__16688__delegate(f,colls);
});
G__16688.cljs$core$IFn$_invoke$arity$variadic = G__16688__delegate;
return G__16688;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__16691 = null;
if (arguments.length > 1) {
var G__16692__i = 0, G__16692__a = new Array(arguments.length -  1);
while (G__16692__i < G__16692__a.length) {G__16692__a[G__16692__i] = arguments[G__16692__i + 1]; ++G__16692__i;}
G__16691 = new cljs.core.IndexedSeq(G__16692__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__16711 = null;
var G__16711__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16711__1 = (function (result){
var G__16705 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16705) : rf.call(null,G__16705));
});
var G__16711__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__16706 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16706) : pred.call(null,G__16706));
})())){
var G__16707 = result;
var G__16708 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16707,G__16708) : rf.call(null,G__16707,G__16708));
} else {
return result;
}
});
G__16711 = function(result,input){
switch(arguments.length){
case 0:
return G__16711__0.call(this);
case 1:
return G__16711__1.call(this,result);
case 2:
return G__16711__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16711.cljs$core$IFn$_invoke$arity$0 = G__16711__0;
G__16711.cljs$core$IFn$_invoke$arity$1 = G__16711__1;
G__16711.cljs$core$IFn$_invoke$arity$2 = G__16711__2;
return G__16711;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4661__auto___16712 = size;
var i_16713 = (0);
while(true){
if((i_16713 < n__4661__auto___16712)){
if(cljs.core.truth_((function (){var G__16709 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16713);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16709) : pred.call(null,G__16709));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16713));
} else {
}

var G__16714 = (i_16713 + (1));
i_16713 = G__16714;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__16710 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16710) : pred.call(null,G__16710));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__16721 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__16721) : branch_QMARK_.call(null,G__16721));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__16722 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__16722) : children.call(null,G__16722));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__16723_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__16723_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__16726 = to;
if(G__16726){
var bit__4448__auto__ = (G__16726.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4448__auto__) || (G__16726.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__16727 = to;
if(G__16727){
var bit__4448__auto__ = (G__16727.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4448__auto__) || (G__16727.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__16729 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16729) : f.call(null,G__16729));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__16730__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__16730 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__16731__i = 0, G__16731__a = new Array(arguments.length -  4);
while (G__16731__i < G__16731__a.length) {G__16731__a[G__16731__i] = arguments[G__16731__i + 4]; ++G__16731__i;}
  colls = new cljs.core.IndexedSeq(G__16731__a,0);
} 
return G__16730__delegate.call(this,f,c1,c2,c3,colls);};
G__16730.cljs$lang$maxFixedArity = 4;
G__16730.cljs$lang$applyTo = (function (arglist__16732){
var f = cljs.core.first(arglist__16732);
arglist__16732 = cljs.core.next(arglist__16732);
var c1 = cljs.core.first(arglist__16732);
arglist__16732 = cljs.core.next(arglist__16732);
var c2 = cljs.core.first(arglist__16732);
arglist__16732 = cljs.core.next(arglist__16732);
var c3 = cljs.core.first(arglist__16732);
var colls = cljs.core.rest(arglist__16732);
return G__16730__delegate(f,c1,c2,c3,colls);
});
G__16730.cljs$core$IFn$_invoke$arity$variadic = G__16730__delegate;
return G__16730;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__16733 = null;
if (arguments.length > 4) {
var G__16734__i = 0, G__16734__a = new Array(arguments.length -  4);
while (G__16734__i < G__16734__a.length) {G__16734__a[G__16734__i] = arguments[G__16734__i + 4]; ++G__16734__i;}
G__16733 = new cljs.core.IndexedSeq(G__16734__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__16733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__16736 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16736) : pred.call(null,G__16736));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__16751 = m__$1;
if(G__16751){
var bit__4455__auto__ = (G__16751.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4455__auto__) || (G__16751.cljs$core$ILookup$)){
return true;
} else {
if((!G__16751.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__16751);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__16751);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__16752 = sentinel;
var G__16753 = m__$2;
var G__16754 = cljs.core.next(ks__$1);
sentinel = G__16752;
m__$1 = G__16753;
ks__$1 = G__16754;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__16755,v){
var vec__16760 = p__16755;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16760,(0),null);
var ks = cljs.core.nthnext(vec__16760,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__16761,f){
var vec__16799 = p__16761;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16799,(0),null);
var ks = cljs.core.nthnext(vec__16799,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16800 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16800) : f.call(null,G__16800));
})());
}
});
var update_in__4 = (function (m,p__16762,f,a){
var vec__16801 = p__16762;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16801,(0),null);
var ks = cljs.core.nthnext(vec__16801,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16802 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16803 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16802,G__16803) : f.call(null,G__16802,G__16803));
})());
}
});
var update_in__5 = (function (m,p__16763,f,a,b){
var vec__16804 = p__16763;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16804,(0),null);
var ks = cljs.core.nthnext(vec__16804,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16805 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16806 = a;
var G__16807 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16805,G__16806,G__16807) : f.call(null,G__16805,G__16806,G__16807));
})());
}
});
var update_in__6 = (function (m,p__16764,f,a,b,c){
var vec__16808 = p__16764;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16808,(0),null);
var ks = cljs.core.nthnext(vec__16808,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16809 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16810 = a;
var G__16811 = b;
var G__16812 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16809,G__16810,G__16811,G__16812) : f.call(null,G__16809,G__16810,G__16811,G__16812));
})());
}
});
var update_in__7 = (function() { 
var G__16814__delegate = function (m,p__16765,f,a,b,c,args){
var vec__16813 = p__16765;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16813,(0),null);
var ks = cljs.core.nthnext(vec__16813,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__16814 = function (m,p__16765,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__16815__i = 0, G__16815__a = new Array(arguments.length -  6);
while (G__16815__i < G__16815__a.length) {G__16815__a[G__16815__i] = arguments[G__16815__i + 6]; ++G__16815__i;}
  args = new cljs.core.IndexedSeq(G__16815__a,0);
} 
return G__16814__delegate.call(this,m,p__16765,f,a,b,c,args);};
G__16814.cljs$lang$maxFixedArity = 6;
G__16814.cljs$lang$applyTo = (function (arglist__16816){
var m = cljs.core.first(arglist__16816);
arglist__16816 = cljs.core.next(arglist__16816);
var p__16765 = cljs.core.first(arglist__16816);
arglist__16816 = cljs.core.next(arglist__16816);
var f = cljs.core.first(arglist__16816);
arglist__16816 = cljs.core.next(arglist__16816);
var a = cljs.core.first(arglist__16816);
arglist__16816 = cljs.core.next(arglist__16816);
var b = cljs.core.first(arglist__16816);
arglist__16816 = cljs.core.next(arglist__16816);
var c = cljs.core.first(arglist__16816);
var args = cljs.core.rest(arglist__16816);
return G__16814__delegate(m,p__16765,f,a,b,c,args);
});
G__16814.cljs$core$IFn$_invoke$arity$variadic = G__16814__delegate;
return G__16814;
})()
;
update_in = function(m,p__16765,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__16765,f);
case 4:
return update_in__4.call(this,m,p__16765,f,a);
case 5:
return update_in__5.call(this,m,p__16765,f,a,b);
case 6:
return update_in__6.call(this,m,p__16765,f,a,b,c);
default:
var G__16817 = null;
if (arguments.length > 6) {
var G__16818__i = 0, G__16818__a = new Array(arguments.length -  6);
while (G__16818__i < G__16818__a.length) {G__16818__a[G__16818__i] = arguments[G__16818__i + 6]; ++G__16818__i;}
G__16817 = new cljs.core.IndexedSeq(G__16818__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__16765,f,a,b,c, G__16817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16829 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16829) : f.call(null,G__16829));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16830 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16831 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16830,G__16831) : f.call(null,G__16830,G__16831));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16832 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16833 = x;
var G__16834 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16832,G__16833,G__16834) : f.call(null,G__16832,G__16833,G__16834));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16835 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16836 = x;
var G__16837 = y;
var G__16838 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16835,G__16836,G__16837,G__16838) : f.call(null,G__16835,G__16836,G__16837,G__16838));
})());
});
var update__7 = (function() { 
var G__16839__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__16839 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__16840__i = 0, G__16840__a = new Array(arguments.length -  6);
while (G__16840__i < G__16840__a.length) {G__16840__a[G__16840__i] = arguments[G__16840__i + 6]; ++G__16840__i;}
  more = new cljs.core.IndexedSeq(G__16840__a,0);
} 
return G__16839__delegate.call(this,m,k,f,x,y,z,more);};
G__16839.cljs$lang$maxFixedArity = 6;
G__16839.cljs$lang$applyTo = (function (arglist__16841){
var m = cljs.core.first(arglist__16841);
arglist__16841 = cljs.core.next(arglist__16841);
var k = cljs.core.first(arglist__16841);
arglist__16841 = cljs.core.next(arglist__16841);
var f = cljs.core.first(arglist__16841);
arglist__16841 = cljs.core.next(arglist__16841);
var x = cljs.core.first(arglist__16841);
arglist__16841 = cljs.core.next(arglist__16841);
var y = cljs.core.first(arglist__16841);
arglist__16841 = cljs.core.next(arglist__16841);
var z = cljs.core.first(arglist__16841);
var more = cljs.core.rest(arglist__16841);
return G__16839__delegate(m,k,f,x,y,z,more);
});
G__16839.cljs$core$IFn$_invoke$arity$variadic = G__16839__delegate;
return G__16839;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__16842 = null;
if (arguments.length > 6) {
var G__16843__i = 0, G__16843__a = new Array(arguments.length -  6);
while (G__16843__i < G__16843__a.length) {G__16843__a[G__16843__i] = arguments[G__16843__i + 6]; ++G__16843__i;}
G__16842 = new cljs.core.IndexedSeq(G__16843__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__16842);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__16844 = (ll - (5));
var G__16845 = r;
ll = G__16844;
ret = G__16845;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__16850 = cljs.core.pv_aget(node,(0));
var G__16851 = (level - (5));
node = G__16850;
level = G__16851;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__16852 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__16853 = (level - (5));
node = G__16852;
level = G__16853;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__16863 = init__$2;
var G__16864 = (j + i);
var G__16865 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16863,G__16864,G__16865) : f.call(null,G__16863,G__16864,G__16865));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__16876 = (j + (1));
var G__16877 = init__$3;
j = G__16876;
init__$2 = G__16877;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16866 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16866) : cljs.core.deref.call(null,G__16866));
} else {
var G__16878 = (i + len);
var G__16879 = init__$2;
i = G__16878;
init__$1 = G__16879;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__16867 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__16867) : cljs.core.tv_editable_root.call(null,G__16867));
})(),(function (){var G__16868 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__16868) : cljs.core.tv_editable_tail.call(null,G__16868));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__16869 = init__$2;
var G__16870 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16869,G__16870) : f.call(null,G__16869,G__16870));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__16880 = (j + (1));
var G__16881 = init__$3;
j = G__16880;
init__$2 = G__16881;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16871 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16871) : cljs.core.deref.call(null,G__16871));
} else {
var G__16882 = (i + len);
var G__16883 = init__$2;
i = G__16882;
init__$1 = G__16883;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__16872 = coll__$1;
var G__16873 = cljs.core.first_array_for_longvec(coll__$1);
var G__16874 = (0);
var G__16875 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16872,G__16873,G__16874,G__16875) : cljs.core.chunked_seq.call(null,G__16872,G__16873,G__16874,G__16875));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4661__auto___16884 = len;
var i_16885 = (0);
while(true){
if((i_16885 < n__4661__auto___16884)){
(new_tail[i_16885] = (self__.tail[i_16885]));

var G__16886 = (i_16885 + (1));
i_16885 = G__16886;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__16887 = null;
var G__16887__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__16887__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__16887 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16887__2.call(this,self__,k);
case 3:
return G__16887__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16887.cljs$core$IFn$_invoke$arity$2 = G__16887__2;
G__16887.cljs$core$IFn$_invoke$arity$3 = G__16887__3;
return G__16887;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args16862){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16862)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__16888 = (i + (1));
var G__16889 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__16888;
out = G__16889;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16890__i = 0, G__16890__a = new Array(arguments.length -  0);
while (G__16890__i < G__16890__a.length) {G__16890__a[G__16890__i] = arguments[G__16890__i + 0]; ++G__16890__i;}
  args = new cljs.core.IndexedSeq(G__16890__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__16891){
var args = cljs.core.seq(arglist__16891);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__16892 = self__.vec;
var G__16893 = self__.node;
var G__16894 = self__.i;
var G__16895 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16892,G__16893,G__16894,G__16895) : cljs.core.chunked_seq.call(null,G__16892,G__16893,G__16894,G__16895));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__16896 = self__.vec;
var G__16897 = (self__.i + self__.off);
var G__16898 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16896,G__16897,G__16898) : cljs.core.subvec.call(null,G__16896,G__16897,G__16898));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__16899 = self__.vec;
var G__16900 = (self__.i + self__.off);
var G__16901 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16899,G__16900,G__16901) : cljs.core.subvec.call(null,G__16899,G__16900,G__16901));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__16902 = self__.vec;
var G__16903 = self__.node;
var G__16904 = self__.i;
var G__16905 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16902,G__16903,G__16904,G__16905) : cljs.core.chunked_seq.call(null,G__16902,G__16903,G__16904,G__16905));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__16906 = self__.vec;
var G__16907 = cljs.core.unchecked_array_for(self__.vec,end);
var G__16908 = end;
var G__16909 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16906,G__16907,G__16908,G__16909) : cljs.core.chunked_seq.call(null,G__16906,G__16907,G__16908,G__16909));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__16910 = self__.vec;
var G__16911 = self__.node;
var G__16912 = self__.i;
var G__16913 = self__.off;
var G__16914 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__16910,G__16911,G__16912,G__16913,G__16914) : cljs.core.chunked_seq.call(null,G__16910,G__16911,G__16912,G__16913,G__16914));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__16915 = self__.vec;
var G__16916 = cljs.core.unchecked_array_for(self__.vec,end);
var G__16917 = end;
var G__16918 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16915,G__16916,G__16917,G__16918) : cljs.core.chunked_seq.call(null,G__16915,G__16916,G__16917,G__16918));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__16920 = self__.meta;
var G__16921 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__16922 = self__.start;
var G__16923 = (function (){var x__4091__auto__ = self__.end;
var y__4092__auto__ = (v_pos + (1));
return ((x__4091__auto__ > y__4092__auto__) ? x__4091__auto__ : y__4092__auto__);
})();
var G__16924 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16920,G__16921,G__16922,G__16923,G__16924) : cljs.core.build_subvec.call(null,G__16920,G__16921,G__16922,G__16923,G__16924));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__16925 = self__.meta;
var G__16926 = self__.v;
var G__16927 = self__.start;
var G__16928 = (self__.end - (1));
var G__16929 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16925,G__16926,G__16927,G__16928,G__16929) : cljs.core.build_subvec.call(null,G__16925,G__16926,G__16927,G__16928,G__16929));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__16931 = meta__$1;
var G__16932 = self__.v;
var G__16933 = self__.start;
var G__16934 = self__.end;
var G__16935 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16931,G__16932,G__16933,G__16934,G__16935) : cljs.core.build_subvec.call(null,G__16931,G__16932,G__16933,G__16934,G__16935));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__16936 = self__.meta;
var G__16937 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__16938 = self__.start;
var G__16939 = (self__.end + (1));
var G__16940 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16936,G__16937,G__16938,G__16939,G__16940) : cljs.core.build_subvec.call(null,G__16936,G__16937,G__16938,G__16939,G__16940));
});

cljs.core.Subvec.prototype.call = (function() {
var G__16941 = null;
var G__16941__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__16941__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__16941 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16941__2.call(this,self__,k);
case 3:
return G__16941__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16941.cljs$core$IFn$_invoke$arity$2 = G__16941__2;
G__16941.cljs$core$IFn$_invoke$arity$3 = G__16941__3;
return G__16941;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args16919){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16919)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__16942 = meta;
var G__16943 = v.v;
var G__16944 = (v.start + start);
var G__16945 = (v.start + end);
var G__16946 = __hash;
meta = G__16942;
v = G__16943;
start = G__16944;
end = G__16945;
__hash = G__16946;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj16953 = {};
return obj16953;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__16961 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__16962 = (level - (5));
node = G__16961;
level = G__16962;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__16966 = null;
var G__16966__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16966__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16966 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16966__2.call(this,self__,k);
case 3:
return G__16966__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16966.cljs$core$IFn$_invoke$arity$2 = G__16966__2;
G__16966.cljs$core$IFn$_invoke$arity$3 = G__16966__3;
return G__16966;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args16963){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16963)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3774__auto__ = self__.front;
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3774__auto__ = self__.rear;
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__16967 = (i + incr);
i = G__16967;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__16968 = (i + (1));
var G__16969 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__16968;
out = G__16969;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj16973 = {};
return obj16973;
})();
var l = ks.length;
var i_16974 = (0);
while(true){
if((i_16974 < l)){
var k_16975 = (ks[i_16974]);
(new_obj[k_16975] = (obj[k_16975]));

var G__16976 = (i_16974 + (1));
i_16974 = G__16976;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3762__auto__ = (function (){var G__16980 = k;
return goog.isString(G__16980);
})();
if(cljs.core.truth_(and__3762__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3762__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__16981 = init__$1;
var G__16982 = k;
var G__16983 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16981,G__16982,G__16983) : f.call(null,G__16981,G__16982,G__16983));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16984 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16984) : cljs.core.deref.call(null,G__16984));
} else {
var G__16990 = cljs.core.rest(keys__$1);
var G__16991 = init__$2;
keys__$1 = G__16990;
init__$1 = G__16991;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3762__auto__ = (function (){var G__16986 = k;
return goog.isString(G__16986);
})();
if(cljs.core.truth_(and__3762__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3762__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__16987 = k;
return goog.isString(G__16987);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3762__auto__ = (function (){var G__16989 = k;
return goog.isString(G__16989);
})();
if(cljs.core.truth_(and__3762__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3762__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__16977_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__16977_SHARP_,(self__.strobj[p1__16977_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__16992 = null;
var G__16992__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16992__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16992 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16992__2.call(this,self__,k);
case 3:
return G__16992__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16992.cljs$core$IFn$_invoke$arity$2 = G__16992__2;
G__16992.cljs$core$IFn$_invoke$arity$3 = G__16992__3;
return G__16992;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args16978){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16978)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj16994 = {};
return obj16994;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__16995 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16995,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16995,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__16996 = (i + (2));
i = G__16996;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__16997 = (i + (2));
i = G__16997;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__16998 = (i + (2));
i = G__16998;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__16999 = (i + (2));
i = G__16999;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__17000 = (i + (2));
i = G__17000;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3774__auto__ = (function (){var G__17004 = k;
return goog.isString(G__17004);
})();
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_17005 = (0);
while(true){
if((i_17005 < l)){
(narr[i_17005] = (arr[i_17005]));

var G__17006 = (i_17005 + (1));
i_17005 = G__17006;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17008 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__17008) : cljs.core.keys.call(null,G__17008));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17009 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__17009) : cljs.core.vals.call(null,G__17009));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17010 = cljs.core.seq(coll);
var chunk__17011 = null;
var count__17012 = (0);
var i__17013 = (0);
while(true){
if((i__17013 < count__17012)){
var vec__17014 = chunk__17011.cljs$core$IIndexed$_nth$arity$2(null,i__17013);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17014,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17014,(1),null);
var G__17015_17028 = v;
var G__17016_17029 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17015_17028,G__17016_17029) : f.call(null,G__17015_17028,G__17016_17029));

var G__17030 = seq__17010;
var G__17031 = chunk__17011;
var G__17032 = count__17012;
var G__17033 = (i__17013 + (1));
seq__17010 = G__17030;
chunk__17011 = G__17031;
count__17012 = G__17032;
i__17013 = G__17033;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17010);
if(temp__4126__auto__){
var seq__17010__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17010__$1)){
var c__4561__auto__ = cljs.core.chunk_first(seq__17010__$1);
var G__17034 = cljs.core.chunk_rest(seq__17010__$1);
var G__17035 = c__4561__auto__;
var G__17036 = cljs.core.count(c__4561__auto__);
var G__17037 = (0);
seq__17010 = G__17034;
chunk__17011 = G__17035;
count__17012 = G__17036;
i__17013 = G__17037;
continue;
} else {
var vec__17017 = cljs.core.first(seq__17010__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17017,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17017,(1),null);
var G__17018_17038 = v;
var G__17019_17039 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17018_17038,G__17019_17039) : f.call(null,G__17018_17038,G__17019_17039));

var G__17040 = cljs.core.next(seq__17010__$1);
var G__17041 = null;
var G__17042 = (0);
var G__17043 = (0);
seq__17010 = G__17040;
chunk__17011 = G__17041;
count__17012 = G__17042;
i__17013 = G__17043;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__17020 = init__$1;
var G__17021 = (self__.arr[i]);
var G__17022 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17020,G__17021,G__17022) : f.call(null,G__17020,G__17021,G__17022));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17023 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17023) : cljs.core.deref.call(null,G__17023));
} else {
var G__17044 = (i + (2));
var G__17045 = init__$2;
i = G__17044;
init__$1 = G__17045;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__17024 = other;
if(G__17024){
var bit__4448__auto__ = (G__17024.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4448__auto__) || (G__17024.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__17046 = (i + (2));
i = G__17046;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj17026 = {};
return obj17026;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__17047 = (s + (2));
var G__17048 = d;
s = G__17047;
d = G__17048;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__17049 = (s + (2));
var G__17050 = (d + (2));
s = G__17049;
d = G__17050;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__17027 = cljs.core.aclone(self__.arr);
(G__17027[(idx + (1))] = v);

return G__17027;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__17051 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__17052 = cljs.core.next(es);
ret = G__17051;
es = G__17052;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__17053 = null;
var G__17053__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17053__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17053 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17053__2.call(this,self__,k);
case 3:
return G__17053__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17053.cljs$core$IFn$_invoke$arity$2 = G__17053__2;
G__17053.cljs$core$IFn$_invoke$arity$3 = G__17053__3;
return G__17053;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args17007){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17007)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__17054 = (i + (2));
var G__17055 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__17054;
ret = G__17055;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__17056_17064 = self__.arr;
G__17056_17064.pop();

G__17056_17064.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__17057 = self__.len;
var G__17058 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__17057,G__17058) : cljs.core.array__GT_transient_hash_map.call(null,G__17057,G__17058));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__17059 = o;
if(G__17059){
var bit__4455__auto__ = (G__17059.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4455__auto__) || (G__17059.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__17059.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17059);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17059);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__17060 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17060) : cljs.core.key.call(null,G__17060));
})(),(function (){var G__17061 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17061) : cljs.core.val.call(null,G__17061));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__17065 = cljs.core.next(es);
var G__17066 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__17062 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17062) : cljs.core.key.call(null,G__17062));
})(),(function (){var G__17063 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17063) : cljs.core.val.call(null,G__17063));
})());
es = G__17065;
tcoll__$2 = G__17066;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__17067 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__17068 = (i + (2));
out = G__17067;
i = G__17068;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__17071 = cljs.core.aclone(arr);
(G__17071[i] = a);

return G__17071;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__17072 = cljs.core.aclone(arr);
(G__17072[i] = a);

(G__17072[j] = b);

return G__17072;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__17077 = init__$1;
var G__17078 = k;
var G__17079 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17077,G__17078,G__17079) : f.call(null,G__17077,G__17078,G__17079));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17080 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17080) : cljs.core.deref.call(null,G__17080));
} else {
var G__17081 = (i + (2));
var G__17082 = init__$2;
i = G__17081;
init__$1 = G__17082;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__17083 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__17083) : cljs.core.create_inode_seq.call(null,G__17083));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_17097 = (0);
var j_17098 = (0);
while(true){
if((i_17097 < (32))){
if((((self__.bitmap >>> i_17097) & (1)) === (0))){
var G__17099 = (i_17097 + (1));
var G__17100 = j_17098;
i_17097 = G__17099;
j_17098 = G__17100;
continue;
} else {
(nodes[i_17097] = ((!(((self__.arr[j_17098]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_17098])),(self__.arr[j_17098]),(self__.arr[(j_17098 + (1))]),added_leaf_QMARK_):(self__.arr[(j_17098 + (1))])));

var G__17101 = (i_17097 + (1));
var G__17102 = (j_17098 + (2));
i_17097 = G__17101;
j_17098 = G__17102;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__17084 = edit__$1;
var G__17085 = (shift + (5));
var G__17086 = key_or_nil;
var G__17087 = val_or_node;
var G__17088 = hash;
var G__17089 = key;
var G__17090 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__17084,G__17085,G__17086,G__17087,G__17088,G__17089,G__17090) : cljs.core.create_node.call(null,G__17084,G__17085,G__17086,G__17087,G__17088,G__17089,G__17090));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_17103 = (0);
var j_17104 = (0);
while(true){
if((i_17103 < (32))){
if((((self__.bitmap >>> i_17103) & (1)) === (0))){
var G__17105 = (i_17103 + (1));
var G__17106 = j_17104;
i_17103 = G__17105;
j_17104 = G__17106;
continue;
} else {
(nodes[i_17103] = ((!(((self__.arr[j_17104]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_17104])),(self__.arr[j_17104]),(self__.arr[(j_17104 + (1))]),added_leaf_QMARK_):(self__.arr[(j_17104 + (1))])));

var G__17107 = (i_17103 + (1));
var G__17108 = (j_17104 + (2));
i_17103 = G__17107;
j_17104 = G__17108;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__17091 = (shift + (5));
var G__17092 = key_or_nil;
var G__17093 = val_or_node;
var G__17094 = hash;
var G__17095 = key;
var G__17096 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__17091,G__17092,G__17093,G__17094,G__17095,G__17096) : cljs.core.create_node.call(null,G__17091,G__17092,G__17093,G__17094,G__17095,G__17096));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__17109 = (i + (1));
var G__17110 = (j + (2));
var G__17111 = (bitmap | ((1) << i));
i = G__17109;
j = G__17110;
bitmap = G__17111;
continue;
} else {
var G__17112 = (i + (1));
var G__17113 = j;
var G__17114 = bitmap;
i = G__17112;
j = G__17113;
bitmap = G__17114;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__17115 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__17115) : cljs.core.create_array_node_seq.call(null,G__17115));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17116 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17116) : cljs.core.deref.call(null,G__17116));
} else {
var G__17117 = (i + (1));
var G__17118 = init__$2;
i = G__17117;
init__$1 = G__17118;
continue;
}
} else {
var G__17119 = (i + (1));
var G__17120 = init__$1;
i = G__17119;
init__$1 = G__17120;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__17121 = (i + (2));
i = G__17121;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__17122 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__17122) : cljs.core.create_inode_seq.call(null,G__17122));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__17123 = self__.nodes;
var G__17124 = (self__.i + (2));
var G__17125 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__17123,G__17124,G__17125) : cljs.core.create_inode_seq.call(null,G__17123,G__17124,G__17125));
} else {
var G__17126 = self__.nodes;
var G__17127 = self__.i;
var G__17128 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__17126,G__17127,G__17128) : cljs.core.create_inode_seq.call(null,G__17126,G__17127,G__17128));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__17132 = (j + (2));
j = G__17132;
continue;
}
} else {
var G__17133 = (j + (2));
j = G__17133;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__17134 = null;
var G__17135 = self__.nodes;
var G__17136 = self__.i;
var G__17137 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__17134,G__17135,G__17136,G__17137) : cljs.core.create_array_node_seq.call(null,G__17134,G__17135,G__17136,G__17137));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__17142 = (j + (1));
j = G__17142;
continue;
}
} else {
var G__17143 = (j + (1));
j = G__17143;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17145 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__17145) : cljs.core.keys.call(null,G__17145));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17146 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__17146) : cljs.core.vals.call(null,G__17146));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17147 = cljs.core.seq(coll);
var chunk__17148 = null;
var count__17149 = (0);
var i__17150 = (0);
while(true){
if((i__17150 < count__17149)){
var vec__17151 = chunk__17148.cljs$core$IIndexed$_nth$arity$2(null,i__17150);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17151,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17151,(1),null);
var G__17152_17163 = v;
var G__17153_17164 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17152_17163,G__17153_17164) : f.call(null,G__17152_17163,G__17153_17164));

var G__17165 = seq__17147;
var G__17166 = chunk__17148;
var G__17167 = count__17149;
var G__17168 = (i__17150 + (1));
seq__17147 = G__17165;
chunk__17148 = G__17166;
count__17149 = G__17167;
i__17150 = G__17168;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17147);
if(temp__4126__auto__){
var seq__17147__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17147__$1)){
var c__4561__auto__ = cljs.core.chunk_first(seq__17147__$1);
var G__17169 = cljs.core.chunk_rest(seq__17147__$1);
var G__17170 = c__4561__auto__;
var G__17171 = cljs.core.count(c__4561__auto__);
var G__17172 = (0);
seq__17147 = G__17169;
chunk__17148 = G__17170;
count__17149 = G__17171;
i__17150 = G__17172;
continue;
} else {
var vec__17154 = cljs.core.first(seq__17147__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17154,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17154,(1),null);
var G__17155_17173 = v;
var G__17156_17174 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17155_17173,G__17156_17174) : f.call(null,G__17155_17173,G__17156_17174));

var G__17175 = cljs.core.next(seq__17147__$1);
var G__17176 = null;
var G__17177 = (0);
var G__17178 = (0);
seq__17147 = G__17175;
chunk__17148 = G__17176;
count__17149 = G__17177;
i__17150 = G__17178;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__17157 = init;
var G__17158 = null;
var G__17159 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17157,G__17158,G__17159) : f.call(null,G__17157,G__17158,G__17159));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__17160 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17160) : cljs.core.deref.call(null,G__17160));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj17162 = {};
return obj17162;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__17179 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__17180 = cljs.core.next(es);
ret = G__17179;
es = G__17180;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__17181 = null;
var G__17181__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17181__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17181 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17181__2.call(this,self__,k);
case 3:
return G__17181__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17181.cljs$core$IFn$_invoke$arity$2 = G__17181__2;
G__17181.cljs$core$IFn$_invoke$arity$3 = G__17181__3;
return G__17181;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args17144){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17144)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__17182 = (i + (2));
var G__17183 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__17182;
ret = G__17183;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__17184 = (i + (1));
var G__17185 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__17184;
out = G__17185;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__17186 = o;
if(G__17186){
var bit__4455__auto__ = (G__17186.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4455__auto__) || (G__17186.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__17186.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17186);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17186);
}
})()){
return tcoll.assoc_BANG_((function (){var G__17187 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17187) : cljs.core.key.call(null,G__17187));
})(),(function (){var G__17188 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17188) : cljs.core.val.call(null,G__17188));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__17191 = cljs.core.next(es);
var G__17192 = tcoll__$1.assoc_BANG_((function (){var G__17189 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17189) : cljs.core.key.call(null,G__17189));
})(),(function (){var G__17190 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17190) : cljs.core.val.call(null,G__17190));
})());
es = G__17191;
tcoll__$1 = G__17192;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__17193 = ((ascending_QMARK_)?t.left:t.right);
var G__17194 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__17193;
stack__$1 = G__17194;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__17207 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17207) : cljs.core.deref.call(null,G__17207));
} else {
var init__$2 = (function (){var G__17208 = init__$1;
var G__17209 = node.key;
var G__17210 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17208,G__17209,G__17210) : f.call(null,G__17208,G__17209,G__17210));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17211 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17211) : cljs.core.deref.call(null,G__17211));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__17212 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17212) : cljs.core.deref.call(null,G__17212));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__17214 = null;
var G__17214__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17214__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17214 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17214__2.call(this,self__,k);
case 3:
return G__17214__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17214.cljs$core$IFn$_invoke$arity$2 = G__17214__2;
G__17214.cljs$core$IFn$_invoke$arity$3 = G__17214__3;
return G__17214;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args17213){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17213)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__17216 = null;
var G__17216__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17216__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17216 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17216__2.call(this,self__,k);
case 3:
return G__17216__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17216.cljs$core$IFn$_invoke$arity$2 = G__17216__2;
G__17216.cljs$core$IFn$_invoke$arity$3 = G__17216__3;
return G__17216;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args17215){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17215)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__17229 = k;
var G__17230 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17229,G__17230) : comp.call(null,G__17229,G__17230));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__17249 = k;
var G__17250 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17249,G__17250) : comp.call(null,G__17249,G__17250));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__17261 = k;
var G__17262 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17261,G__17262) : comp.call(null,G__17261,G__17262));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17264 = cljs.core.seq(coll);
var chunk__17265 = null;
var count__17266 = (0);
var i__17267 = (0);
while(true){
if((i__17267 < count__17266)){
var vec__17268 = chunk__17265.cljs$core$IIndexed$_nth$arity$2(null,i__17267);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17268,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17268,(1),null);
var G__17269_17281 = v;
var G__17270_17282 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17269_17281,G__17270_17282) : f.call(null,G__17269_17281,G__17270_17282));

var G__17283 = seq__17264;
var G__17284 = chunk__17265;
var G__17285 = count__17266;
var G__17286 = (i__17267 + (1));
seq__17264 = G__17283;
chunk__17265 = G__17284;
count__17266 = G__17285;
i__17267 = G__17286;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17264);
if(temp__4126__auto__){
var seq__17264__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17264__$1)){
var c__4561__auto__ = cljs.core.chunk_first(seq__17264__$1);
var G__17287 = cljs.core.chunk_rest(seq__17264__$1);
var G__17288 = c__4561__auto__;
var G__17289 = cljs.core.count(c__4561__auto__);
var G__17290 = (0);
seq__17264 = G__17287;
chunk__17265 = G__17288;
count__17266 = G__17289;
i__17267 = G__17290;
continue;
} else {
var vec__17271 = cljs.core.first(seq__17264__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17271,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17271,(1),null);
var G__17272_17291 = v;
var G__17273_17292 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17272_17291,G__17273_17292) : f.call(null,G__17272_17291,G__17273_17292));

var G__17293 = cljs.core.next(seq__17264__$1);
var G__17294 = null;
var G__17295 = (0);
var G__17296 = (0);
seq__17264 = G__17293;
chunk__17265 = G__17294;
count__17266 = G__17295;
i__17267 = G__17296;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17274 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__17274) : cljs.core.keys.call(null,G__17274));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17275 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__17275) : cljs.core.vals.call(null,G__17275));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__17276 = k;
var G__17277 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__17276,G__17277) : self__.comp.call(null,G__17276,G__17277));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__17297 = t.left;
t = G__17297;
continue;
} else {
var G__17298 = t.right;
t = G__17298;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__17299 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__17300 = cljs.core.next(es);
ret = G__17299;
es = G__17300;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__17301 = null;
var G__17301__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17301__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17301 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17301__2.call(this,self__,k);
case 3:
return G__17301__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17301.cljs$core$IFn$_invoke$arity$2 = G__17301__2;
G__17301.cljs$core$IFn$_invoke$arity$3 = G__17301__3;
return G__17301;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args17263){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17263)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__17278 = k;
var G__17279 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__17278,G__17279) : self__.comp.call(null,G__17278,G__17279));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__17302 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__17303 = t.left;
stack = G__17302;
t = G__17303;
continue;
} else {
var G__17304 = stack;
var G__17305 = t.right;
stack = G__17304;
t = G__17305;
continue;
}
} else {
if((c > (0))){
var G__17306 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__17307 = t.right;
stack = G__17306;
t = G__17307;
continue;
} else {
var G__17308 = stack;
var G__17309 = t.left;
stack = G__17308;
t = G__17309;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__17280 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17280) : cljs.core.key.call(null,G__17280));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__17310 = cljs.core.nnext(in$);
var G__17311 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__17310;
out = G__17311;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17312__i = 0, G__17312__a = new Array(arguments.length -  0);
while (G__17312__i < G__17312__a.length) {G__17312__a[G__17312__i] = arguments[G__17312__i + 0]; ++G__17312__i;}
  keyvals = new cljs.core.IndexedSeq(G__17312__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__17313){
var keyvals = cljs.core.seq(arglist__17313);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17314__i = 0, G__17314__a = new Array(arguments.length -  0);
while (G__17314__i < G__17314__a.length) {G__17314__a[G__17314__i] = arguments[G__17314__i + 0]; ++G__17314__i;}
  keyvals = new cljs.core.IndexedSeq(G__17314__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__17315){
var keyvals = cljs.core.seq(arglist__17315);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj17319 = {};
return obj17319;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__17320 = cljs.core.nnext(kvs);
kvs = G__17320;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17321__i = 0, G__17321__a = new Array(arguments.length -  0);
while (G__17321__i < G__17321__a.length) {G__17321__a[G__17321__i] = arguments[G__17321__i + 0]; ++G__17321__i;}
  keyvals = new cljs.core.IndexedSeq(G__17321__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__17322){
var keyvals = cljs.core.seq(arglist__17322);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__17323 = cljs.core.nnext(in$);
var G__17324 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__17323;
out = G__17324;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17325__i = 0, G__17325__a = new Array(arguments.length -  0);
while (G__17325__i < G__17325__a.length) {G__17325__a[G__17325__i] = arguments[G__17325__i + 0]; ++G__17325__i;}
  keyvals = new cljs.core.IndexedSeq(G__17325__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__17326){
var keyvals = cljs.core.seq(arglist__17326);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__17327 = cljs.core.nnext(in$);
var G__17328 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__17327;
out = G__17328;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__17329__i = 0, G__17329__a = new Array(arguments.length -  1);
while (G__17329__i < G__17329__a.length) {G__17329__a[G__17329__i] = arguments[G__17329__i + 1]; ++G__17329__i;}
  keyvals = new cljs.core.IndexedSeq(G__17329__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__17330){
var comparator = cljs.core.first(arglist__17330);
var keyvals = cljs.core.rest(arglist__17330);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17331 = self__.mseq;
if(G__17331){
var bit__4455__auto__ = (G__17331.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4455__auto__) || (G__17331.cljs$core$INext$)){
return true;
} else {
if((!G__17331.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17331);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17331);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17332 = self__.mseq;
if(G__17332){
var bit__4455__auto__ = (G__17332.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4455__auto__) || (G__17332.cljs$core$INext$)){
return true;
} else {
if((!G__17332.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17332);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17332);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17333 = self__.mseq;
if(G__17333){
var bit__4455__auto__ = (G__17333.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4455__auto__) || (G__17333.cljs$core$INext$)){
return true;
} else {
if((!G__17333.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17333);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17333);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17334 = self__.mseq;
if(G__17334){
var bit__4455__auto__ = (G__17334.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4455__auto__) || (G__17334.cljs$core$INext$)){
return true;
} else {
if((!G__17334.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17334);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17334);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__17335_SHARP_,p2__17336_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3774__auto__ = p1__17335_SHARP_;
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__17336_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__17337__i = 0, G__17337__a = new Array(arguments.length -  0);
while (G__17337__i < G__17337__a.length) {G__17337__a[G__17337__i] = arguments[G__17337__i + 0]; ++G__17337__i;}
  maps = new cljs.core.IndexedSeq(G__17337__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__17338){
var maps = cljs.core.seq(arglist__17338);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__17341 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__17342 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17341,G__17342) : f.call(null,G__17341,G__17342));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3774__auto__ = m1;
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__17343__i = 0, G__17343__a = new Array(arguments.length -  1);
while (G__17343__i < G__17343__a.length) {G__17343__a[G__17343__i] = arguments[G__17343__i + 1]; ++G__17343__i;}
  maps = new cljs.core.IndexedSeq(G__17343__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__17344){
var f = cljs.core.first(arglist__17344);
var maps = cljs.core.rest(arglist__17344);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$9);
var G__17345 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$9))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__17346 = cljs.core.next(keys);
ret = G__17345;
keys = G__17346;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17349 = cljs.core.seq(coll);
var chunk__17350 = null;
var count__17351 = (0);
var i__17352 = (0);
while(true){
if((i__17352 < count__17351)){
var vec__17353 = chunk__17350.cljs$core$IIndexed$_nth$arity$2(null,i__17352);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17353,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17353,(1),null);
var G__17354_17359 = v;
var G__17355_17360 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17354_17359,G__17355_17360) : f.call(null,G__17354_17359,G__17355_17360));

var G__17361 = seq__17349;
var G__17362 = chunk__17350;
var G__17363 = count__17351;
var G__17364 = (i__17352 + (1));
seq__17349 = G__17361;
chunk__17350 = G__17362;
count__17351 = G__17363;
i__17352 = G__17364;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17349);
if(temp__4126__auto__){
var seq__17349__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17349__$1)){
var c__4561__auto__ = cljs.core.chunk_first(seq__17349__$1);
var G__17365 = cljs.core.chunk_rest(seq__17349__$1);
var G__17366 = c__4561__auto__;
var G__17367 = cljs.core.count(c__4561__auto__);
var G__17368 = (0);
seq__17349 = G__17365;
chunk__17350 = G__17366;
count__17351 = G__17367;
i__17352 = G__17368;
continue;
} else {
var vec__17356 = cljs.core.first(seq__17349__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17356,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17356,(1),null);
var G__17357_17369 = v;
var G__17358_17370 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17357_17369,G__17358_17370) : f.call(null,G__17357_17369,G__17358_17370));

var G__17371 = cljs.core.next(seq__17349__$1);
var G__17372 = null;
var G__17373 = (0);
var G__17374 = (0);
seq__17349 = G__17371;
chunk__17350 = G__17372;
count__17351 = G__17373;
i__17352 = G__17374;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__17347_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__17347_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__17375 = null;
var G__17375__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17375__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17375 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17375__2.call(this,self__,k);
case 3:
return G__17375__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17375.cljs$core$IFn$_invoke$arity$2 = G__17375__2;
G__17375.cljs$core$IFn$_invoke$arity$3 = G__17375__3;
return G__17375;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args17348){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17348)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__17376 = (i + (1));
var G__17377 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__17376;
out = G__17377;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__17378 = (i + (1));
var G__17379 = cljs.core._conj_BANG_(out,(items[i]));
i = G__17378;
out = G__17379;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__17381 = null;
var G__17381__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__17381__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__17381 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17381__2.call(this,self__,k);
case 3:
return G__17381__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17381.cljs$core$IFn$_invoke$arity$2 = G__17381__2;
G__17381.cljs$core$IFn$_invoke$arity$3 = G__17381__3;
return G__17381;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args17380){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17380)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17384 = cljs.core.seq(coll);
var chunk__17385 = null;
var count__17386 = (0);
var i__17387 = (0);
while(true){
if((i__17387 < count__17386)){
var vec__17388 = chunk__17385.cljs$core$IIndexed$_nth$arity$2(null,i__17387);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17388,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17388,(1),null);
var G__17389_17394 = v;
var G__17390_17395 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17389_17394,G__17390_17395) : f.call(null,G__17389_17394,G__17390_17395));

var G__17396 = seq__17384;
var G__17397 = chunk__17385;
var G__17398 = count__17386;
var G__17399 = (i__17387 + (1));
seq__17384 = G__17396;
chunk__17385 = G__17397;
count__17386 = G__17398;
i__17387 = G__17399;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17384);
if(temp__4126__auto__){
var seq__17384__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17384__$1)){
var c__4561__auto__ = cljs.core.chunk_first(seq__17384__$1);
var G__17400 = cljs.core.chunk_rest(seq__17384__$1);
var G__17401 = c__4561__auto__;
var G__17402 = cljs.core.count(c__4561__auto__);
var G__17403 = (0);
seq__17384 = G__17400;
chunk__17385 = G__17401;
count__17386 = G__17402;
i__17387 = G__17403;
continue;
} else {
var vec__17391 = cljs.core.first(seq__17384__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17391,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17391,(1),null);
var G__17392_17404 = v;
var G__17393_17405 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17392_17404,G__17393_17405) : f.call(null,G__17392_17404,G__17393_17405));

var G__17406 = cljs.core.next(seq__17384__$1);
var G__17407 = null;
var G__17408 = (0);
var G__17409 = (0);
seq__17384 = G__17406;
chunk__17385 = G__17407;
count__17386 = G__17408;
i__17387 = G__17409;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__17382_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__17382_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__17410 = null;
var G__17410__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17410__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17410 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17410__2.call(this,self__,k);
case 3:
return G__17410__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17410.cljs$core$IFn$_invoke$arity$2 = G__17410__2;
G__17410.cljs$core$IFn$_invoke$arity$3 = G__17410__3;
return G__17410;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args17383){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17383)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4655__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4655__auto__.length)){
var G__17411 = (i + (1));
var G__17412 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__17411;
res = G__17412;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__17413 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__17414 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__17413;
out = G__17414;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__17415__delegate = function (keys){
return cljs.core.set(keys);
};
var G__17415 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__17416__i = 0, G__17416__a = new Array(arguments.length -  0);
while (G__17416__i < G__17416__a.length) {G__17416__a[G__17416__i] = arguments[G__17416__i + 0]; ++G__17416__i;}
  keys = new cljs.core.IndexedSeq(G__17416__a,0);
} 
return G__17415__delegate.call(this,keys);};
G__17415.cljs$lang$maxFixedArity = 0;
G__17415.cljs$lang$applyTo = (function (arglist__17417){
var keys = cljs.core.seq(arglist__17417);
return G__17415__delegate(keys);
});
G__17415.cljs$core$IFn$_invoke$arity$variadic = G__17415__delegate;
return G__17415;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__17418 = null;
if (arguments.length > 0) {
var G__17419__i = 0, G__17419__a = new Array(arguments.length -  0);
while (G__17419__i < G__17419__a.length) {G__17419__a[G__17419__i] = arguments[G__17419__i + 0]; ++G__17419__i;}
G__17418 = new cljs.core.IndexedSeq(G__17419__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__17418);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__17420__i = 0, G__17420__a = new Array(arguments.length -  0);
while (G__17420__i < G__17420__a.length) {G__17420__a[G__17420__i] = arguments[G__17420__i + 0]; ++G__17420__i;}
  keys = new cljs.core.IndexedSeq(G__17420__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__17421){
var keys = cljs.core.seq(arglist__17421);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__17422__i = 0, G__17422__a = new Array(arguments.length -  1);
while (G__17422__i < G__17422__a.length) {G__17422__a[G__17422__i] = arguments[G__17422__i + 1]; ++G__17422__i;}
  keys = new cljs.core.IndexedSeq(G__17422__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__17423){
var comparator = cljs.core.first(arglist__17423);
var keys = cljs.core.rest(arglist__17423);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__17424_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__17424_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__17424_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__17425_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__17425_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__17425_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__17446 = null;
var G__17446__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17446__1 = (function (result){
var G__17436 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17436) : rf.call(null,G__17436));
});
var G__17446__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__17437 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17437) : cljs.core.deref.call(null,G__17437));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__17438 = result;
var G__17439 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17438,G__17439) : rf.call(null,G__17438,G__17439));
}
});
G__17446 = function(result,input){
switch(arguments.length){
case 0:
return G__17446__0.call(this);
case 1:
return G__17446__1.call(this,result);
case 2:
return G__17446__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17446.cljs$core$IFn$_invoke$arity$0 = G__17446__0;
G__17446.cljs$core$IFn$_invoke$arity$1 = G__17446__1;
G__17446.cljs$core$IFn$_invoke$arity$2 = G__17446__2;
return G__17446;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__17444,seen__$1){
while(true){
var vec__17445 = p__17444;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17445,(0),null);
var xs__$1 = vec__17445;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__17447 = cljs.core.rest(s);
var G__17448 = seen__$1;
p__17444 = G__17447;
seen__$1 = G__17448;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__17449 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__17450 = cljs.core.next(s__$1);
ret = G__17449;
s__$1 = G__17450;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__17452 = x;
if(G__17452){
var bit__4448__auto__ = (G__17452.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4448__auto__) || (G__17452.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__17453 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__17454 = cljs.core.next(ks);
var G__17455 = cljs.core.next(vs);
map = G__17453;
ks = G__17454;
vs = G__17455;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__17466 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17466) : k.call(null,G__17466));
})() > (function (){var G__17467 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17467) : k.call(null,G__17467));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__17468__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17456_SHARP_,p2__17457_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__17456_SHARP_,p2__17457_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__17468 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__17469__i = 0, G__17469__a = new Array(arguments.length -  3);
while (G__17469__i < G__17469__a.length) {G__17469__a[G__17469__i] = arguments[G__17469__i + 3]; ++G__17469__i;}
  more = new cljs.core.IndexedSeq(G__17469__a,0);
} 
return G__17468__delegate.call(this,k,x,y,more);};
G__17468.cljs$lang$maxFixedArity = 3;
G__17468.cljs$lang$applyTo = (function (arglist__17470){
var k = cljs.core.first(arglist__17470);
arglist__17470 = cljs.core.next(arglist__17470);
var x = cljs.core.first(arglist__17470);
arglist__17470 = cljs.core.next(arglist__17470);
var y = cljs.core.first(arglist__17470);
var more = cljs.core.rest(arglist__17470);
return G__17468__delegate(k,x,y,more);
});
G__17468.cljs$core$IFn$_invoke$arity$variadic = G__17468__delegate;
return G__17468;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__17471 = null;
if (arguments.length > 3) {
var G__17472__i = 0, G__17472__a = new Array(arguments.length -  3);
while (G__17472__i < G__17472__a.length) {G__17472__a[G__17472__i] = arguments[G__17472__i + 3]; ++G__17472__i;}
G__17471 = new cljs.core.IndexedSeq(G__17472__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__17471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__17483 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17483) : k.call(null,G__17483));
})() < (function (){var G__17484 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17484) : k.call(null,G__17484));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__17485__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17473_SHARP_,p2__17474_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__17473_SHARP_,p2__17474_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__17485 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__17486__i = 0, G__17486__a = new Array(arguments.length -  3);
while (G__17486__i < G__17486__a.length) {G__17486__a[G__17486__i] = arguments[G__17486__i + 3]; ++G__17486__i;}
  more = new cljs.core.IndexedSeq(G__17486__a,0);
} 
return G__17485__delegate.call(this,k,x,y,more);};
G__17485.cljs$lang$maxFixedArity = 3;
G__17485.cljs$lang$applyTo = (function (arglist__17487){
var k = cljs.core.first(arglist__17487);
arglist__17487 = cljs.core.next(arglist__17487);
var x = cljs.core.first(arglist__17487);
arglist__17487 = cljs.core.next(arglist__17487);
var y = cljs.core.first(arglist__17487);
var more = cljs.core.rest(arglist__17487);
return G__17485__delegate(k,x,y,more);
});
G__17485.cljs$core$IFn$_invoke$arity$variadic = G__17485__delegate;
return G__17485;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__17488 = null;
if (arguments.length > 3) {
var G__17489__i = 0, G__17489__a = new Array(arguments.length -  3);
while (G__17489__i < G__17489__a.length) {G__17489__a[G__17489__i] = arguments[G__17489__i + 3]; ++G__17489__i;}
G__17488 = new cljs.core.IndexedSeq(G__17489__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__17488);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__17506 = null;
var G__17506__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17506__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__17501 = result;
var G__17502 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17501,G__17502) : rf.call(null,G__17501,G__17502));
})());
})());
var G__17503 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17503) : rf.call(null,G__17503));
});
var G__17506__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__17504 = result;
var G__17505 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17504,G__17505) : rf.call(null,G__17504,G__17505));
} else {
return result;
}
});
G__17506 = function(result,input){
switch(arguments.length){
case 0:
return G__17506__0.call(this);
case 1:
return G__17506__1.call(this,result);
case 2:
return G__17506__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17506.cljs$core$IFn$_invoke$arity$0 = G__17506__0;
G__17506.cljs$core$IFn$_invoke$arity$1 = G__17506__1;
G__17506.cljs$core$IFn$_invoke$arity$2 = G__17506__2;
return G__17506;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__17519 = null;
var G__17519__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17519__1 = (function (result){
var G__17514 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17514) : rf.call(null,G__17514));
});
var G__17519__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__17515 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17515) : pred.call(null,G__17515));
})())){
var G__17516 = result;
var G__17517 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17516,G__17517) : rf.call(null,G__17516,G__17517));
} else {
return cljs.core.reduced(result);
}
});
G__17519 = function(result,input){
switch(arguments.length){
case 0:
return G__17519__0.call(this);
case 1:
return G__17519__1.call(this,result);
case 2:
return G__17519__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17519.cljs$core$IFn$_invoke$arity$0 = G__17519__0;
G__17519.cljs$core$IFn$_invoke$arity$1 = G__17519__1;
G__17519.cljs$core$IFn$_invoke$arity$2 = G__17519__2;
return G__17519;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__17518 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17518) : pred.call(null,G__17518));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__17524 = (function (){var G__17526 = cljs.core._entry_key(sc,e);
var G__17527 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17526,G__17527) : comp.call(null,G__17526,G__17527));
})();
var G__17525 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__17524,G__17525) : test.call(null,G__17524,G__17525));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17531 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17531,(0),null);
var s = vec__17531;
if(cljs.core.truth_((function (){var G__17532 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__17532) : include.call(null,G__17532));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17533 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17533,(0),null);
var s = vec__17533;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17537 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17537,(0),null);
var s = vec__17537;
if(cljs.core.truth_((function (){var G__17538 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__17538) : include.call(null,G__17538));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17539 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17539,(0),null);
var s = vec__17539;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__17540 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__17540) : Math.ceil.call(null,G__17540));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4195__auto__ = self__.__hash;
if(!((h__4195__auto__ == null))){
return h__4195__auto__;
} else {
var h__4195__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4195__auto____$1;

return h__4195__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__17541 = ret;
var G__17542 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17541,G__17542) : f.call(null,G__17541,G__17542));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__17543 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17543) : cljs.core.deref.call(null,G__17543));
} else {
var G__17544 = (i + self__.step);
var G__17545 = ret__$1;
i = G__17544;
ret = G__17545;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__17563 = null;
var G__17563__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17563__1 = (function (result){
var G__17560 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17560) : rf.call(null,G__17560));
});
var G__17563__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__17561 = result;
var G__17562 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17561,G__17562) : rf.call(null,G__17561,G__17562));
} else {
return result;
}
});
G__17563 = function(result,input){
switch(arguments.length){
case 0:
return G__17563__0.call(this);
case 1:
return G__17563__1.call(this,result);
case 2:
return G__17563__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17563.cljs$core$IFn$_invoke$arity$0 = G__17563__0;
G__17563.cljs$core$IFn$_invoke$arity$1 = G__17563__1;
G__17563.cljs$core$IFn$_invoke$arity$2 = G__17563__2;
return G__17563;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (a,pa){
return (function() {
var G__17585 = null;
var G__17585__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17585__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__17576 = result;
var G__17577 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17576,G__17577) : rf.call(null,G__17576,G__17577));
})());
})());
var G__17578 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17578) : rf.call(null,G__17578));
});
var G__17585__2 = (function (result,input){
var pval = (function (){var G__17579 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17579) : cljs.core.deref.call(null,G__17579));
})();
var val = (function (){var G__17580 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17580) : f.call(null,G__17580));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$10)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__17581 = result;
var G__17582 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17581,G__17582) : rf.call(null,G__17581,G__17582));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__17585 = function(result,input){
switch(arguments.length){
case 0:
return G__17585__0.call(this);
case 1:
return G__17585__1.call(this,result);
case 2:
return G__17585__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17585.cljs$core$IFn$_invoke$arity$0 = G__17585__0;
G__17585.cljs$core$IFn$_invoke$arity$1 = G__17585__1;
G__17585.cljs$core$IFn$_invoke$arity$2 = G__17585__2;
return G__17585;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__17583 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17583) : f.call(null,G__17583));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__17564_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__17584 = p1__17564_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17584) : f.call(null,G__17584));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__17594 = init;
var G__17595 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17594,G__17595) : f.call(null,G__17594,G__17595));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__17690 = null;
var G__17690__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__17690__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17648 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17648) : f.call(null,G__17648));
})()],null));
});
var G__17690__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17649 = x;
var G__17650 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17649,G__17650) : f.call(null,G__17649,G__17650));
})()],null));
});
var G__17690__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17651 = x;
var G__17652 = y;
var G__17653 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17651,G__17652,G__17653) : f.call(null,G__17651,G__17652,G__17653));
})()],null));
});
var G__17690__4 = (function() { 
var G__17691__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__17691 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17692__i = 0, G__17692__a = new Array(arguments.length -  3);
while (G__17692__i < G__17692__a.length) {G__17692__a[G__17692__i] = arguments[G__17692__i + 3]; ++G__17692__i;}
  args = new cljs.core.IndexedSeq(G__17692__a,0);
} 
return G__17691__delegate.call(this,x,y,z,args);};
G__17691.cljs$lang$maxFixedArity = 3;
G__17691.cljs$lang$applyTo = (function (arglist__17693){
var x = cljs.core.first(arglist__17693);
arglist__17693 = cljs.core.next(arglist__17693);
var y = cljs.core.first(arglist__17693);
arglist__17693 = cljs.core.next(arglist__17693);
var z = cljs.core.first(arglist__17693);
var args = cljs.core.rest(arglist__17693);
return G__17691__delegate(x,y,z,args);
});
G__17691.cljs$core$IFn$_invoke$arity$variadic = G__17691__delegate;
return G__17691;
})()
;
G__17690 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17690__0.call(this);
case 1:
return G__17690__1.call(this,x);
case 2:
return G__17690__2.call(this,x,y);
case 3:
return G__17690__3.call(this,x,y,z);
default:
var G__17694 = null;
if (arguments.length > 3) {
var G__17695__i = 0, G__17695__a = new Array(arguments.length -  3);
while (G__17695__i < G__17695__a.length) {G__17695__a[G__17695__i] = arguments[G__17695__i + 3]; ++G__17695__i;}
G__17694 = new cljs.core.IndexedSeq(G__17695__a,0);
}
return G__17690__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17694);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17690.cljs$lang$maxFixedArity = 3;
G__17690.cljs$lang$applyTo = G__17690__4.cljs$lang$applyTo;
G__17690.cljs$core$IFn$_invoke$arity$0 = G__17690__0;
G__17690.cljs$core$IFn$_invoke$arity$1 = G__17690__1;
G__17690.cljs$core$IFn$_invoke$arity$2 = G__17690__2;
G__17690.cljs$core$IFn$_invoke$arity$3 = G__17690__3;
G__17690.cljs$core$IFn$_invoke$arity$variadic = G__17690__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17690;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__17696 = null;
var G__17696__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__17696__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17654 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17654) : f.call(null,G__17654));
})(),(function (){var G__17655 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17655) : g.call(null,G__17655));
})()],null));
});
var G__17696__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17656 = x;
var G__17657 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17656,G__17657) : f.call(null,G__17656,G__17657));
})(),(function (){var G__17658 = x;
var G__17659 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17658,G__17659) : g.call(null,G__17658,G__17659));
})()],null));
});
var G__17696__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17660 = x;
var G__17661 = y;
var G__17662 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17660,G__17661,G__17662) : f.call(null,G__17660,G__17661,G__17662));
})(),(function (){var G__17663 = x;
var G__17664 = y;
var G__17665 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17663,G__17664,G__17665) : g.call(null,G__17663,G__17664,G__17665));
})()],null));
});
var G__17696__4 = (function() { 
var G__17697__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__17697 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17698__i = 0, G__17698__a = new Array(arguments.length -  3);
while (G__17698__i < G__17698__a.length) {G__17698__a[G__17698__i] = arguments[G__17698__i + 3]; ++G__17698__i;}
  args = new cljs.core.IndexedSeq(G__17698__a,0);
} 
return G__17697__delegate.call(this,x,y,z,args);};
G__17697.cljs$lang$maxFixedArity = 3;
G__17697.cljs$lang$applyTo = (function (arglist__17699){
var x = cljs.core.first(arglist__17699);
arglist__17699 = cljs.core.next(arglist__17699);
var y = cljs.core.first(arglist__17699);
arglist__17699 = cljs.core.next(arglist__17699);
var z = cljs.core.first(arglist__17699);
var args = cljs.core.rest(arglist__17699);
return G__17697__delegate(x,y,z,args);
});
G__17697.cljs$core$IFn$_invoke$arity$variadic = G__17697__delegate;
return G__17697;
})()
;
G__17696 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17696__0.call(this);
case 1:
return G__17696__1.call(this,x);
case 2:
return G__17696__2.call(this,x,y);
case 3:
return G__17696__3.call(this,x,y,z);
default:
var G__17700 = null;
if (arguments.length > 3) {
var G__17701__i = 0, G__17701__a = new Array(arguments.length -  3);
while (G__17701__i < G__17701__a.length) {G__17701__a[G__17701__i] = arguments[G__17701__i + 3]; ++G__17701__i;}
G__17700 = new cljs.core.IndexedSeq(G__17701__a,0);
}
return G__17696__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17700);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17696.cljs$lang$maxFixedArity = 3;
G__17696.cljs$lang$applyTo = G__17696__4.cljs$lang$applyTo;
G__17696.cljs$core$IFn$_invoke$arity$0 = G__17696__0;
G__17696.cljs$core$IFn$_invoke$arity$1 = G__17696__1;
G__17696.cljs$core$IFn$_invoke$arity$2 = G__17696__2;
G__17696.cljs$core$IFn$_invoke$arity$3 = G__17696__3;
G__17696.cljs$core$IFn$_invoke$arity$variadic = G__17696__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17696;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__17702 = null;
var G__17702__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__17702__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17666 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17666) : f.call(null,G__17666));
})(),(function (){var G__17667 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17667) : g.call(null,G__17667));
})(),(function (){var G__17668 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__17668) : h.call(null,G__17668));
})()],null));
});
var G__17702__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17669 = x;
var G__17670 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17669,G__17670) : f.call(null,G__17669,G__17670));
})(),(function (){var G__17671 = x;
var G__17672 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17671,G__17672) : g.call(null,G__17671,G__17672));
})(),(function (){var G__17673 = x;
var G__17674 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__17673,G__17674) : h.call(null,G__17673,G__17674));
})()],null));
});
var G__17702__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17675 = x;
var G__17676 = y;
var G__17677 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17675,G__17676,G__17677) : f.call(null,G__17675,G__17676,G__17677));
})(),(function (){var G__17678 = x;
var G__17679 = y;
var G__17680 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17678,G__17679,G__17680) : g.call(null,G__17678,G__17679,G__17680));
})(),(function (){var G__17681 = x;
var G__17682 = y;
var G__17683 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__17681,G__17682,G__17683) : h.call(null,G__17681,G__17682,G__17683));
})()],null));
});
var G__17702__4 = (function() { 
var G__17703__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__17703 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17704__i = 0, G__17704__a = new Array(arguments.length -  3);
while (G__17704__i < G__17704__a.length) {G__17704__a[G__17704__i] = arguments[G__17704__i + 3]; ++G__17704__i;}
  args = new cljs.core.IndexedSeq(G__17704__a,0);
} 
return G__17703__delegate.call(this,x,y,z,args);};
G__17703.cljs$lang$maxFixedArity = 3;
G__17703.cljs$lang$applyTo = (function (arglist__17705){
var x = cljs.core.first(arglist__17705);
arglist__17705 = cljs.core.next(arglist__17705);
var y = cljs.core.first(arglist__17705);
arglist__17705 = cljs.core.next(arglist__17705);
var z = cljs.core.first(arglist__17705);
var args = cljs.core.rest(arglist__17705);
return G__17703__delegate(x,y,z,args);
});
G__17703.cljs$core$IFn$_invoke$arity$variadic = G__17703__delegate;
return G__17703;
})()
;
G__17702 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17702__0.call(this);
case 1:
return G__17702__1.call(this,x);
case 2:
return G__17702__2.call(this,x,y);
case 3:
return G__17702__3.call(this,x,y,z);
default:
var G__17706 = null;
if (arguments.length > 3) {
var G__17707__i = 0, G__17707__a = new Array(arguments.length -  3);
while (G__17707__i < G__17707__a.length) {G__17707__a[G__17707__i] = arguments[G__17707__i + 3]; ++G__17707__i;}
G__17706 = new cljs.core.IndexedSeq(G__17707__a,0);
}
return G__17702__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17706);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17702.cljs$lang$maxFixedArity = 3;
G__17702.cljs$lang$applyTo = G__17702__4.cljs$lang$applyTo;
G__17702.cljs$core$IFn$_invoke$arity$0 = G__17702__0;
G__17702.cljs$core$IFn$_invoke$arity$1 = G__17702__1;
G__17702.cljs$core$IFn$_invoke$arity$2 = G__17702__2;
G__17702.cljs$core$IFn$_invoke$arity$3 = G__17702__3;
G__17702.cljs$core$IFn$_invoke$arity$variadic = G__17702__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17702;
})()
});
var juxt__4 = (function() { 
var G__17708__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__17709 = null;
var G__17709__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17596_SHARP_,p2__17597_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17596_SHARP_,(function (){return (p2__17597_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__17597_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__17597_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17709__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17598_SHARP_,p2__17599_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17598_SHARP_,(function (){var G__17684 = x;
return (p2__17599_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__17599_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17684) : p2__17599_SHARP_.call(null,G__17684));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17709__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17600_SHARP_,p2__17601_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17600_SHARP_,(function (){var G__17685 = x;
var G__17686 = y;
return (p2__17601_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__17601_SHARP_.cljs$core$IFn$_invoke$arity$2(G__17685,G__17686) : p2__17601_SHARP_.call(null,G__17685,G__17686));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17709__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17602_SHARP_,p2__17603_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17602_SHARP_,(function (){var G__17687 = x;
var G__17688 = y;
var G__17689 = z;
return (p2__17603_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__17603_SHARP_.cljs$core$IFn$_invoke$arity$3(G__17687,G__17688,G__17689) : p2__17603_SHARP_.call(null,G__17687,G__17688,G__17689));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17709__4 = (function() { 
var G__17710__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17604_SHARP_,p2__17605_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17604_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__17605_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__17710 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17711__i = 0, G__17711__a = new Array(arguments.length -  3);
while (G__17711__i < G__17711__a.length) {G__17711__a[G__17711__i] = arguments[G__17711__i + 3]; ++G__17711__i;}
  args = new cljs.core.IndexedSeq(G__17711__a,0);
} 
return G__17710__delegate.call(this,x,y,z,args);};
G__17710.cljs$lang$maxFixedArity = 3;
G__17710.cljs$lang$applyTo = (function (arglist__17712){
var x = cljs.core.first(arglist__17712);
arglist__17712 = cljs.core.next(arglist__17712);
var y = cljs.core.first(arglist__17712);
arglist__17712 = cljs.core.next(arglist__17712);
var z = cljs.core.first(arglist__17712);
var args = cljs.core.rest(arglist__17712);
return G__17710__delegate(x,y,z,args);
});
G__17710.cljs$core$IFn$_invoke$arity$variadic = G__17710__delegate;
return G__17710;
})()
;
G__17709 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17709__0.call(this);
case 1:
return G__17709__1.call(this,x);
case 2:
return G__17709__2.call(this,x,y);
case 3:
return G__17709__3.call(this,x,y,z);
default:
var G__17713 = null;
if (arguments.length > 3) {
var G__17714__i = 0, G__17714__a = new Array(arguments.length -  3);
while (G__17714__i < G__17714__a.length) {G__17714__a[G__17714__i] = arguments[G__17714__i + 3]; ++G__17714__i;}
G__17713 = new cljs.core.IndexedSeq(G__17714__a,0);
}
return G__17709__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17713);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17709.cljs$lang$maxFixedArity = 3;
G__17709.cljs$lang$applyTo = G__17709__4.cljs$lang$applyTo;
G__17709.cljs$core$IFn$_invoke$arity$0 = G__17709__0;
G__17709.cljs$core$IFn$_invoke$arity$1 = G__17709__1;
G__17709.cljs$core$IFn$_invoke$arity$2 = G__17709__2;
G__17709.cljs$core$IFn$_invoke$arity$3 = G__17709__3;
G__17709.cljs$core$IFn$_invoke$arity$variadic = G__17709__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17709;
})()
;})(fs__$1))
};
var G__17708 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__17715__i = 0, G__17715__a = new Array(arguments.length -  3);
while (G__17715__i < G__17715__a.length) {G__17715__a[G__17715__i] = arguments[G__17715__i + 3]; ++G__17715__i;}
  fs = new cljs.core.IndexedSeq(G__17715__a,0);
} 
return G__17708__delegate.call(this,f,g,h,fs);};
G__17708.cljs$lang$maxFixedArity = 3;
G__17708.cljs$lang$applyTo = (function (arglist__17716){
var f = cljs.core.first(arglist__17716);
arglist__17716 = cljs.core.next(arglist__17716);
var g = cljs.core.first(arglist__17716);
arglist__17716 = cljs.core.next(arglist__17716);
var h = cljs.core.first(arglist__17716);
var fs = cljs.core.rest(arglist__17716);
return G__17708__delegate(f,g,h,fs);
});
G__17708.cljs$core$IFn$_invoke$arity$variadic = G__17708__delegate;
return G__17708;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__17717 = null;
if (arguments.length > 3) {
var G__17718__i = 0, G__17718__a = new Array(arguments.length -  3);
while (G__17718__i < G__17718__a.length) {G__17718__a[G__17718__i] = arguments[G__17718__i + 3]; ++G__17718__i;}
G__17717 = new cljs.core.IndexedSeq(G__17718__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__17717);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__17719 = cljs.core.next(coll);
coll = G__17719;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__17720 = (n - (1));
var G__17721 = cljs.core.next(coll);
n = G__17720;
coll = G__17721;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__17725 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17725,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17725,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17725,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_17733 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3774__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__17734_17740 = cljs.core.first(coll);
var G__17735_17741 = writer;
var G__17736_17742 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17734_17740,G__17735_17741,G__17736_17742) : print_one.call(null,G__17734_17740,G__17735_17741,G__17736_17742));
} else {
}

var coll_17743__$1 = cljs.core.next(coll);
var n_17744 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_17743__$1) && (((n_17744 == null)) || (!((n_17744 === (0)))))){
cljs.core._write(writer,sep);

var G__17737_17745 = cljs.core.first(coll_17743__$1);
var G__17738_17746 = writer;
var G__17739_17747 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17737_17745,G__17738_17746,G__17739_17747) : print_one.call(null,G__17737_17745,G__17738_17746,G__17739_17747));

var G__17748 = cljs.core.next(coll_17743__$1);
var G__17749 = (n_17744 - (1));
coll_17743__$1 = G__17748;
n_17744 = G__17749;
continue;
} else {
if((cljs.core.seq(coll_17743__$1)) && ((n_17744 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3774__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_17733;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__17754 = cljs.core.seq(ss);
var chunk__17755 = null;
var count__17756 = (0);
var i__17757 = (0);
while(true){
if((i__17757 < count__17756)){
var s = chunk__17755.cljs$core$IIndexed$_nth$arity$2(null,i__17757);
cljs.core._write(writer,s);

var G__17758 = seq__17754;
var G__17759 = chunk__17755;
var G__17760 = count__17756;
var G__17761 = (i__17757 + (1));
seq__17754 = G__17758;
chunk__17755 = G__17759;
count__17756 = G__17760;
i__17757 = G__17761;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17754);
if(temp__4126__auto__){
var seq__17754__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17754__$1)){
var c__4561__auto__ = cljs.core.chunk_first(seq__17754__$1);
var G__17762 = cljs.core.chunk_rest(seq__17754__$1);
var G__17763 = c__4561__auto__;
var G__17764 = cljs.core.count(c__4561__auto__);
var G__17765 = (0);
seq__17754 = G__17762;
chunk__17755 = G__17763;
count__17756 = G__17764;
i__17757 = G__17765;
continue;
} else {
var s = cljs.core.first(seq__17754__$1);
cljs.core._write(writer,s);

var G__17766 = cljs.core.next(seq__17754__$1);
var G__17767 = null;
var G__17768 = (0);
var G__17769 = (0);
seq__17754 = G__17766;
chunk__17755 = G__17767;
count__17756 = G__17768;
i__17757 = G__17769;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__17770__i = 0, G__17770__a = new Array(arguments.length -  1);
while (G__17770__i < G__17770__a.length) {G__17770__a[G__17770__i] = arguments[G__17770__i + 1]; ++G__17770__i;}
  ss = new cljs.core.IndexedSeq(G__17770__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__17771){
var writer = cljs.core.first(arglist__17771);
var ss = cljs.core.rest(arglist__17771);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj17773 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj17773;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__17776 = "[\\\\\"\b\f\n\r\t]";
var G__17777 = "g";
return RegExp(G__17776,G__17777);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3762__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__3762__auto__)){
var and__3762__auto____$1 = (function (){var G__17791 = obj;
if(G__17791){
var bit__4455__auto__ = (G__17791.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4455__auto__) || (G__17791.cljs$core$IMeta$)){
return true;
} else {
if((!G__17791.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__17791);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__17791);
}
})();
if(and__3762__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3762__auto____$1;
}
} else {
return and__3762__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__17792_17802 = cljs.core.meta(obj);
var G__17793_17803 = writer;
var G__17794_17804 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__17792_17802,G__17793_17803,G__17794_17804) : cljs.core.pr_writer.call(null,G__17792_17802,G__17793_17803,G__17794_17804));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__17795 = obj;
if(G__17795){
var bit__4448__auto__ = (G__17795.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4448__auto__) || (G__17795.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__17796 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__17797 = cljs.core.pr_writer;
var G__17798 = writer;
var G__17799 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__17796,G__17797,G__17798,G__17799) : cljs.core.print_map.call(null,G__17796,G__17797,G__17798,G__17799));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__17800 = obj;
return goog.isString(G__17800);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__17805 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__17805;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__17801 = obj;
if(G__17801){
var bit__4455__auto__ = (G__17801.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4455__auto__) || (G__17801.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__17801.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__17801);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__17801);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__17809 = obj;
var G__17810 = writer;
var G__17811 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$13,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__17809,G__17810,G__17811) : alt_impl.call(null,G__17809,G__17810,G__17811));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__17816 = cljs.core.seq(cljs.core.next(objs));
var chunk__17817 = null;
var count__17818 = (0);
var i__17819 = (0);
while(true){
if((i__17819 < count__17818)){
var obj = chunk__17817.cljs$core$IIndexed$_nth$arity$2(null,i__17819);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__17820 = seq__17816;
var G__17821 = chunk__17817;
var G__17822 = count__17818;
var G__17823 = (i__17819 + (1));
seq__17816 = G__17820;
chunk__17817 = G__17821;
count__17818 = G__17822;
i__17819 = G__17823;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17816);
if(temp__4126__auto__){
var seq__17816__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17816__$1)){
var c__4561__auto__ = cljs.core.chunk_first(seq__17816__$1);
var G__17824 = cljs.core.chunk_rest(seq__17816__$1);
var G__17825 = c__4561__auto__;
var G__17826 = cljs.core.count(c__4561__auto__);
var G__17827 = (0);
seq__17816 = G__17824;
chunk__17817 = G__17825;
count__17818 = G__17826;
i__17819 = G__17827;
continue;
} else {
var obj = cljs.core.first(seq__17816__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__17828 = cljs.core.next(seq__17816__$1);
var G__17829 = null;
var G__17830 = (0);
var G__17831 = (0);
seq__17816 = G__17828;
chunk__17817 = G__17829;
count__17818 = G__17830;
i__17819 = G__17831;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17832__i = 0, G__17832__a = new Array(arguments.length -  0);
while (G__17832__i < G__17832__a.length) {G__17832__a[G__17832__i] = arguments[G__17832__i + 0]; ++G__17832__i;}
  objs = new cljs.core.IndexedSeq(G__17832__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__17833){
var objs = cljs.core.seq(arglist__17833);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17834__i = 0, G__17834__a = new Array(arguments.length -  0);
while (G__17834__i < G__17834__a.length) {G__17834__a[G__17834__i] = arguments[G__17834__i + 0]; ++G__17834__i;}
  objs = new cljs.core.IndexedSeq(G__17834__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__17835){
var objs = cljs.core.seq(arglist__17835);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17836__i = 0, G__17836__a = new Array(arguments.length -  0);
while (G__17836__i < G__17836__a.length) {G__17836__a[G__17836__i] = arguments[G__17836__i + 0]; ++G__17836__i;}
  objs = new cljs.core.IndexedSeq(G__17836__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__17837){
var objs = cljs.core.seq(arglist__17837);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17838__i = 0, G__17838__a = new Array(arguments.length -  0);
while (G__17838__i < G__17838__a.length) {G__17838__a[G__17838__i] = arguments[G__17838__i + 0]; ++G__17838__i;}
  objs = new cljs.core.IndexedSeq(G__17838__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__17839){
var objs = cljs.core.seq(arglist__17839);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17840__i = 0, G__17840__a = new Array(arguments.length -  0);
while (G__17840__i < G__17840__a.length) {G__17840__a[G__17840__i] = arguments[G__17840__i + 0]; ++G__17840__i;}
  objs = new cljs.core.IndexedSeq(G__17840__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__17841){
var objs = cljs.core.seq(arglist__17841);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17842__i = 0, G__17842__a = new Array(arguments.length -  0);
while (G__17842__i < G__17842__a.length) {G__17842__a[G__17842__i] = arguments[G__17842__i + 0]; ++G__17842__i;}
  objs = new cljs.core.IndexedSeq(G__17842__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__17843){
var objs = cljs.core.seq(arglist__17843);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17844__i = 0, G__17844__a = new Array(arguments.length -  0);
while (G__17844__i < G__17844__a.length) {G__17844__a[G__17844__i] = arguments[G__17844__i + 0]; ++G__17844__i;}
  objs = new cljs.core.IndexedSeq(G__17844__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__17845){
var objs = cljs.core.seq(arglist__17845);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17846__i = 0, G__17846__a = new Array(arguments.length -  0);
while (G__17846__i < G__17846__a.length) {G__17846__a[G__17846__i] = arguments[G__17846__i + 0]; ++G__17846__i;}
  objs = new cljs.core.IndexedSeq(G__17846__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__17847){
var objs = cljs.core.seq(arglist__17847);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__17854_17860 = cljs.core.key(e);
var G__17855_17861 = w;
var G__17856_17862 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17854_17860,G__17855_17861,G__17856_17862) : print_one.call(null,G__17854_17860,G__17855_17861,G__17856_17862));

cljs.core._write(w," ");

var G__17857 = cljs.core.val(e);
var G__17858 = w;
var G__17859 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17857,G__17858,G__17859) : print_one.call(null,G__17857,G__17858,G__17859));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__17863__i = 0, G__17863__a = new Array(arguments.length -  2);
while (G__17863__i < G__17863__a.length) {G__17863__a[G__17863__i] = arguments[G__17863__i + 2]; ++G__17863__i;}
  args = new cljs.core.IndexedSeq(G__17863__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__17864){
var iref = cljs.core.first(arglist__17864);
arglist__17864 = cljs.core.next(arglist__17864);
var f = cljs.core.first(arglist__17864);
var args = cljs.core.rest(arglist__17864);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__17867 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17867) : cljs.core.atom.call(null,G__17867));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__17869 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17869) : cljs.core.deref.call(null,G__17869));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__17870_SHARP_,p2__17871_SHARP_){
var ret = (function (){var G__17874 = p1__17870_SHARP_;
var G__17875 = p2__17871_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17874,G__17875) : rf.call(null,G__17874,G__17875));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__17878 = null;
var G__17878__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17878__1 = (function (result){
var G__17877 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17877) : rf.call(null,G__17877));
});
var G__17878__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__17878 = function(result,input){
switch(arguments.length){
case 0:
return G__17878__0.call(this);
case 1:
return G__17878__1.call(this,result);
case 2:
return G__17878__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17878.cljs$core$IFn$_invoke$arity$0 = G__17878__0;
G__17878.cljs$core$IFn$_invoke$arity$1 = G__17878__1;
G__17878.cljs$core$IFn$_invoke$arity$2 = G__17878__2;
return G__17878;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (pa){
return (function() {
var G__17887 = null;
var G__17887__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17887__1 = (function (result){
var G__17883 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17883) : rf.call(null,G__17883));
});
var G__17887__2 = (function (result,input){
var prior = (function (){var G__17884 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17884) : cljs.core.deref.call(null,G__17884));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__17885 = result;
var G__17886 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17885,G__17886) : rf.call(null,G__17885,G__17886));
}
});
G__17887 = function(result,input){
switch(arguments.length){
case 0:
return G__17887__0.call(this);
case 1:
return G__17887__1.call(this,result);
case 2:
return G__17887__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17887.cljs$core$IFn$_invoke$arity$0 = G__17887__0;
G__17887.cljs$core$IFn$_invoke$arity$1 = G__17887__1;
G__17887.cljs$core$IFn$_invoke$arity$2 = G__17887__2;
return G__17887;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4752__auto__ = this;
return cljs.core.es6_iterator(this__4752__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17889_SHARP_,p2__17888_SHARP_){
var G__17891 = p2__17888_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__17891) : proc.call(null,G__17891));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj17893 = {};
return obj17893;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3762__auto__ = x;
if(and__3762__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3762__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4418__auto__ = (((x == null))?null:x);
return (function (){var or__3774__auto__ = (cljs.core._clj__GT_js[(function (){var G__17897 = x__4418__auto__;
return goog.typeOf(G__17897);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3762__auto__ = x;
if(and__3762__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3762__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4418__auto__ = (((x == null))?null:x);
return (function (){var or__3774__auto__ = (cljs.core._key__GT_js[(function (){var G__17901 = x__4418__auto__;
return goog.typeOf(G__17901);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__17904 = k;
if(G__17904){
var bit__4455__auto__ = null;
if(cljs.core.truth_((function (){var or__3774__auto__ = bit__4455__auto__;
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return G__17904.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__17904.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17904);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17904);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__17905 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__17905) : cljs.core.clj__GT_js.call(null,G__17905));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__17921 = x;
if(G__17921){
var bit__4455__auto__ = null;
if(cljs.core.truth_((function (){var or__3774__auto__ = bit__4455__auto__;
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return G__17921.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__17921.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17921);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17921);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj17923 = {};
return obj17923;
})();
var seq__17924_17934 = cljs.core.seq(x);
var chunk__17925_17935 = null;
var count__17926_17936 = (0);
var i__17927_17937 = (0);
while(true){
if((i__17927_17937 < count__17926_17936)){
var vec__17928_17938 = chunk__17925_17935.cljs$core$IIndexed$_nth$arity$2(null,i__17927_17937);
var k_17939 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17928_17938,(0),null);
var v_17940 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17928_17938,(1),null);
(m[cljs.core.key__GT_js(k_17939)] = clj__GT_js(v_17940));

var G__17941 = seq__17924_17934;
var G__17942 = chunk__17925_17935;
var G__17943 = count__17926_17936;
var G__17944 = (i__17927_17937 + (1));
seq__17924_17934 = G__17941;
chunk__17925_17935 = G__17942;
count__17926_17936 = G__17943;
i__17927_17937 = G__17944;
continue;
} else {
var temp__4126__auto___17945 = cljs.core.seq(seq__17924_17934);
if(temp__4126__auto___17945){
var seq__17924_17946__$1 = temp__4126__auto___17945;
if(cljs.core.chunked_seq_QMARK_(seq__17924_17946__$1)){
var c__4561__auto___17947 = cljs.core.chunk_first(seq__17924_17946__$1);
var G__17948 = cljs.core.chunk_rest(seq__17924_17946__$1);
var G__17949 = c__4561__auto___17947;
var G__17950 = cljs.core.count(c__4561__auto___17947);
var G__17951 = (0);
seq__17924_17934 = G__17948;
chunk__17925_17935 = G__17949;
count__17926_17936 = G__17950;
i__17927_17937 = G__17951;
continue;
} else {
var vec__17929_17952 = cljs.core.first(seq__17924_17946__$1);
var k_17953 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17929_17952,(0),null);
var v_17954 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17929_17952,(1),null);
(m[cljs.core.key__GT_js(k_17953)] = clj__GT_js(v_17954));

var G__17955 = cljs.core.next(seq__17924_17946__$1);
var G__17956 = null;
var G__17957 = (0);
var G__17958 = (0);
seq__17924_17934 = G__17955;
chunk__17925_17935 = G__17956;
count__17926_17936 = G__17957;
i__17927_17937 = G__17958;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__17930_17959 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__17931_17960 = null;
var count__17932_17961 = (0);
var i__17933_17962 = (0);
while(true){
if((i__17933_17962 < count__17932_17961)){
var x_17963__$1 = chunk__17931_17960.cljs$core$IIndexed$_nth$arity$2(null,i__17933_17962);
arr.push(x_17963__$1);

var G__17964 = seq__17930_17959;
var G__17965 = chunk__17931_17960;
var G__17966 = count__17932_17961;
var G__17967 = (i__17933_17962 + (1));
seq__17930_17959 = G__17964;
chunk__17931_17960 = G__17965;
count__17932_17961 = G__17966;
i__17933_17962 = G__17967;
continue;
} else {
var temp__4126__auto___17968 = cljs.core.seq(seq__17930_17959);
if(temp__4126__auto___17968){
var seq__17930_17969__$1 = temp__4126__auto___17968;
if(cljs.core.chunked_seq_QMARK_(seq__17930_17969__$1)){
var c__4561__auto___17970 = cljs.core.chunk_first(seq__17930_17969__$1);
var G__17971 = cljs.core.chunk_rest(seq__17930_17969__$1);
var G__17972 = c__4561__auto___17970;
var G__17973 = cljs.core.count(c__4561__auto___17970);
var G__17974 = (0);
seq__17930_17959 = G__17971;
chunk__17931_17960 = G__17972;
count__17932_17961 = G__17973;
i__17933_17962 = G__17974;
continue;
} else {
var x_17975__$1 = cljs.core.first(seq__17930_17969__$1);
arr.push(x_17975__$1);

var G__17976 = cljs.core.next(seq__17930_17969__$1);
var G__17977 = null;
var G__17978 = (0);
var G__17979 = (0);
seq__17930_17959 = G__17976;
chunk__17931_17960 = G__17977;
count__17932_17961 = G__17978;
i__17933_17962 = G__17979;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj17981 = {};
return obj17981;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3762__auto__ = x;
if(and__3762__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3762__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4418__auto__ = (((x == null))?null:x);
return (function (){var or__3774__auto__ = (cljs.core._js__GT_clj[(function (){var G__17985 = x__4418__auto__;
return goog.typeOf(G__17985);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$14,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__18042__delegate = function (x,opts){
var map__18015 = opts;
var map__18015__$1 = ((cljs.core.seq_QMARK_(map__18015))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__18015):map__18015);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__18015__$1,cljs.core.constant$keyword$14);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__18015,map__18015__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__18031 = x__$1;
if(G__18031){
var bit__4455__auto__ = null;
if(cljs.core.truth_((function (){var or__3774__auto__ = bit__4455__auto__;
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return G__18031.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__18031.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__18031);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__18031);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4530__auto__ = ((function (map__18015,map__18015__$1,keywordize_keys,keyfn){
return (function iter__18032(s__18033){
return (new cljs.core.LazySeq(null,((function (map__18015,map__18015__$1,keywordize_keys,keyfn){
return (function (){
var s__18033__$1 = s__18033;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__18033__$1);
if(temp__4126__auto__){
var s__18033__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__18033__$2)){
var c__4528__auto__ = cljs.core.chunk_first(s__18033__$2);
var size__4529__auto__ = cljs.core.count(c__4528__auto__);
var b__18035 = cljs.core.chunk_buffer(size__4529__auto__);
if((function (){var i__18034 = (0);
while(true){
if((i__18034 < size__4529__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4528__auto__,i__18034);
cljs.core.chunk_append(b__18035,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__18040 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18040) : keyfn.call(null,G__18040));
})(),thisfn((x__$1[k]))], null));

var G__18043 = (i__18034 + (1));
i__18034 = G__18043;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__18035),iter__18032(cljs.core.chunk_rest(s__18033__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__18035),null);
}
} else {
var k = cljs.core.first(s__18033__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__18041 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18041) : keyfn.call(null,G__18041));
})(),thisfn((x__$1[k]))], null),iter__18032(cljs.core.rest(s__18033__$2)));
}
} else {
return null;
}
break;
}
});})(map__18015,map__18015__$1,keywordize_keys,keyfn))
,null,null));
});})(map__18015,map__18015__$1,keywordize_keys,keyfn))
;
return iter__4530__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__18015,map__18015__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__18042 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__18044__i = 0, G__18044__a = new Array(arguments.length -  1);
while (G__18044__i < G__18044__a.length) {G__18044__a[G__18044__i] = arguments[G__18044__i + 1]; ++G__18044__i;}
  opts = new cljs.core.IndexedSeq(G__18044__a,0);
} 
return G__18042__delegate.call(this,x,opts);};
G__18042.cljs$lang$maxFixedArity = 1;
G__18042.cljs$lang$applyTo = (function (arglist__18045){
var x = cljs.core.first(arglist__18045);
var opts = cljs.core.rest(arglist__18045);
return G__18042__delegate(x,opts);
});
G__18042.cljs$core$IFn$_invoke$arity$variadic = G__18042__delegate;
return G__18042;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__18046 = null;
if (arguments.length > 1) {
var G__18047__i = 0, G__18047__a = new Array(arguments.length -  1);
while (G__18047__i < G__18047__a.length) {G__18047__a[G__18047__i] = arguments[G__18047__i + 1]; ++G__18047__i;}
G__18046 = new cljs.core.IndexedSeq(G__18047__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__18046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__18050 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__18050) : cljs.core.atom.call(null,G__18050));
})();
return ((function (mem){
return (function() { 
var G__18052__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__18051 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18051) : cljs.core.deref.call(null,G__18051));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__18052 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__18053__i = 0, G__18053__a = new Array(arguments.length -  0);
while (G__18053__i < G__18053__a.length) {G__18053__a[G__18053__i] = arguments[G__18053__i + 0]; ++G__18053__i;}
  args = new cljs.core.IndexedSeq(G__18053__a,0);
} 
return G__18052__delegate.call(this,args);};
G__18052.cljs$lang$maxFixedArity = 0;
G__18052.cljs$lang$applyTo = (function (arglist__18054){
var args = cljs.core.seq(arglist__18054);
return G__18052__delegate(args);
});
G__18052.cljs$core$IFn$_invoke$arity$variadic = G__18052__delegate;
return G__18052;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__18056 = ret;
f = G__18056;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__18057__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__18057 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__18058__i = 0, G__18058__a = new Array(arguments.length -  1);
while (G__18058__i < G__18058__a.length) {G__18058__a[G__18058__i] = arguments[G__18058__i + 1]; ++G__18058__i;}
  args = new cljs.core.IndexedSeq(G__18058__a,0);
} 
return G__18057__delegate.call(this,f,args);};
G__18057.cljs$lang$maxFixedArity = 1;
G__18057.cljs$lang$applyTo = (function (arglist__18059){
var f = cljs.core.first(arglist__18059);
var args = cljs.core.rest(arglist__18059);
return G__18057__delegate(f,args);
});
G__18057.cljs$core$IFn$_invoke$arity$variadic = G__18057__delegate;
return G__18057;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__18060 = null;
if (arguments.length > 1) {
var G__18061__i = 0, G__18061__a = new Array(arguments.length -  1);
while (G__18061__i < G__18061__a.length) {G__18061__a[G__18061__i] = arguments[G__18061__i + 1]; ++G__18061__i;}
G__18060 = new cljs.core.IndexedSeq(G__18061__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__18060);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__18064 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18064) : Math.floor.call(null,G__18064));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__18066 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18066) : f.call(null,G__18066));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$16,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__18068 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__18068) : cljs.core.atom.call(null,G__18068));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__18069__i = 0, G__18069__a = new Array(arguments.length -  1);
while (G__18069__i < G__18069__a.length) {G__18069__a[G__18069__i] = arguments[G__18069__i + 1]; ++G__18069__i;}
  args = new cljs.core.IndexedSeq(G__18069__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__18070){
var f = cljs.core.first(arglist__18070);
var args = cljs.core.rest(arglist__18070);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__18135 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18135) : cljs.core.deref.call(null,G__18135));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3774__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
var and__3762__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3762__auto__){
var and__3762__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3762__auto____$1){
var and__3762__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3762__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__18160 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__18158 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__18158) : child.call(null,G__18158));
})(),(function (){var G__18159 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__18159) : parent.call(null,G__18159));
})());
var G__18161 = (i + (1));
ret = G__18160;
i = G__18161;
continue;
}
break;
}
} else {
return and__3762__auto____$2;
}
} else {
return and__3762__auto____$1;
}
} else {
return and__3762__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__18165 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18165) : cljs.core.deref.call(null,G__18165));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__18169 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18169) : cljs.core.deref.call(null,G__18169));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__18173 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18173) : cljs.core.deref.call(null,G__18173));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){

var tp = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__18182 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__18182) : targets.call(null,G__18182));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__18183 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__18183) : sources.call(null,G__18183));
})()));
});})(tp,td,ta))
;
var or__3774__auto__ = ((cljs.core.contains_QMARK_((function (){var G__18187 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__18187) : tp.call(null,G__18187));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__18188 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__18188) : ta.call(null,G__18188));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__18189 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__18189) : ta.call(null,G__18189));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$17,tf(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$16,tf(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__18196 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__18196) : parentMap.call(null,G__18196));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__18197 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__18197) : parentMap.call(null,G__18197));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__18190_SHARP_){
return cljs.core.cons(cljs.core.first(p1__18190_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__18190_SHARP_),cljs.core.second(p1__18190_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__18198 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__18198) : parentMap.call(null,G__18198));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__18191_SHARP_,p2__18192_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__18191_SHARP_,p2__18192_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__18201 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18201) : cljs.core.deref.call(null,G__18201));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__18202 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18202) : cljs.core.deref.call(null,G__18202));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__18218 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18218) : cljs.core.deref.call(null,G__18218));
})().call(null,x);
var or__3774__auto__ = (cljs.core.truth_((function (){var and__3762__auto__ = xprefs;
if(cljs.core.truth_(and__3762__auto__)){
var G__18220 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__18220) : xprefs.call(null,G__18220));
} else {
return and__3762__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__18221 = cljs.core.rest(ps);
ps = G__18221;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3774__auto____$1)){
return or__3774__auto____$1;
} else {
var or__3774__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__18222 = cljs.core.rest(ps);
ps = G__18222;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3774__auto____$2)){
return or__3774__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3774__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3774__auto__)){
return or__3774__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__18236){
var vec__18237 = p__18236;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18237,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18237,(1),null);
var e = vec__18237;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__18238 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18238) : cljs.core.deref.call(null,G__18238));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3774__auto__ = (be == null);
if(or__3774__auto__){
return or__3774__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__18239 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18239) : cljs.core.deref.call(null,G__18239));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__18240 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18240) : cljs.core.deref.call(null,G__18240));
})(),(function (){var G__18241 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18241) : cljs.core.deref.call(null,G__18241));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj18243 = {};
return obj18243;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3762__auto__ = mf;
if(and__3762__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3762__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4418__auto__ = (((mf == null))?null:mf);
return (function (){var or__3774__auto__ = (cljs.core._reset[(function (){var G__18247 = x__4418__auto__;
return goog.typeOf(G__18247);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._reset["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3762__auto__ = mf;
if(and__3762__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3762__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4418__auto__ = (((mf == null))?null:mf);
return (function (){var or__3774__auto__ = (cljs.core._add_method[(function (){var G__18251 = x__4418__auto__;
return goog.typeOf(G__18251);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._add_method["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3762__auto__ = mf;
if(and__3762__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3762__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4418__auto__ = (((mf == null))?null:mf);
return (function (){var or__3774__auto__ = (cljs.core._remove_method[(function (){var G__18255 = x__4418__auto__;
return goog.typeOf(G__18255);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3762__auto__ = mf;
if(and__3762__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3762__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4418__auto__ = (((mf == null))?null:mf);
return (function (){var or__3774__auto__ = (cljs.core._prefer_method[(function (){var G__18259 = x__4418__auto__;
return goog.typeOf(G__18259);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3762__auto__ = mf;
if(and__3762__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3762__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4418__auto__ = (((mf == null))?null:mf);
return (function (){var or__3774__auto__ = (cljs.core._get_method[(function (){var G__18263 = x__4418__auto__;
return goog.typeOf(G__18263);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._get_method["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3762__auto__ = mf;
if(and__3762__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3762__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4418__auto__ = (((mf == null))?null:mf);
return (function (){var or__3774__auto__ = (cljs.core._methods[(function (){var G__18267 = x__4418__auto__;
return goog.typeOf(G__18267);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._methods["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3762__auto__ = mf;
if(and__3762__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3762__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4418__auto__ = (((mf == null))?null:mf);
return (function (){var or__3774__auto__ = (cljs.core._prefers[(function (){var G__18271 = x__4418__auto__;
return goog.typeOf(G__18271);
})()]);
if(or__3774__auto__){
return or__3774__auto__;
} else {
var or__3774__auto____$1 = (cljs.core._prefers["_"]);
if(or__3774__auto____$1){
return or__3774__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__18273 = this$__$1;
return goog.getUid(G__18273);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__18274 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18274) : cljs.core.deref.call(null,G__18274));
})(),(function (){var G__18275 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18275) : cljs.core.deref.call(null,G__18275));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__18276 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18276) : cljs.core.deref.call(null,G__18276));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__18277 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18277) : cljs.core.deref.call(null,G__18277));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__18278 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18278) : cljs.core.deref.call(null,G__18278));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__18279 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18279) : cljs.core.deref.call(null,G__18279));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__19120 = null;
var G__19120__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__19120__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18280 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__18280) : self__.dispatch_fn.call(null,G__18280));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18281 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__18281) : target_fn.call(null,G__18281));
});
var G__19120__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18282 = a;
var G__18283 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__18282,G__18283) : self__.dispatch_fn.call(null,G__18282,G__18283));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18284 = a;
var G__18285 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__18284,G__18285) : target_fn.call(null,G__18284,G__18285));
});
var G__19120__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18286 = a;
var G__18287 = b;
var G__18288 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__18286,G__18287,G__18288) : self__.dispatch_fn.call(null,G__18286,G__18287,G__18288));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18289 = a;
var G__18290 = b;
var G__18291 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__18289,G__18290,G__18291) : target_fn.call(null,G__18289,G__18290,G__18291));
});
var G__19120__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18292 = a;
var G__18293 = b;
var G__18294 = c;
var G__18295 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__18292,G__18293,G__18294,G__18295) : self__.dispatch_fn.call(null,G__18292,G__18293,G__18294,G__18295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18296 = a;
var G__18297 = b;
var G__18298 = c;
var G__18299 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__18296,G__18297,G__18298,G__18299) : target_fn.call(null,G__18296,G__18297,G__18298,G__18299));
});
var G__19120__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18300 = a;
var G__18301 = b;
var G__18302 = c;
var G__18303 = d;
var G__18304 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__18300,G__18301,G__18302,G__18303,G__18304) : self__.dispatch_fn.call(null,G__18300,G__18301,G__18302,G__18303,G__18304));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18305 = a;
var G__18306 = b;
var G__18307 = c;
var G__18308 = d;
var G__18309 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__18305,G__18306,G__18307,G__18308,G__18309) : target_fn.call(null,G__18305,G__18306,G__18307,G__18308,G__18309));
});
var G__19120__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18310 = a;
var G__18311 = b;
var G__18312 = c;
var G__18313 = d;
var G__18314 = e;
var G__18315 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__18310,G__18311,G__18312,G__18313,G__18314,G__18315) : self__.dispatch_fn.call(null,G__18310,G__18311,G__18312,G__18313,G__18314,G__18315));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18316 = a;
var G__18317 = b;
var G__18318 = c;
var G__18319 = d;
var G__18320 = e;
var G__18321 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__18316,G__18317,G__18318,G__18319,G__18320,G__18321) : target_fn.call(null,G__18316,G__18317,G__18318,G__18319,G__18320,G__18321));
});
var G__19120__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18322 = a;
var G__18323 = b;
var G__18324 = c;
var G__18325 = d;
var G__18326 = e;
var G__18327 = f;
var G__18328 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__18322,G__18323,G__18324,G__18325,G__18326,G__18327,G__18328) : self__.dispatch_fn.call(null,G__18322,G__18323,G__18324,G__18325,G__18326,G__18327,G__18328));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18329 = a;
var G__18330 = b;
var G__18331 = c;
var G__18332 = d;
var G__18333 = e;
var G__18334 = f;
var G__18335 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__18329,G__18330,G__18331,G__18332,G__18333,G__18334,G__18335) : target_fn.call(null,G__18329,G__18330,G__18331,G__18332,G__18333,G__18334,G__18335));
});
var G__19120__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18336 = a;
var G__18337 = b;
var G__18338 = c;
var G__18339 = d;
var G__18340 = e;
var G__18341 = f;
var G__18342 = g;
var G__18343 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__18336,G__18337,G__18338,G__18339,G__18340,G__18341,G__18342,G__18343) : self__.dispatch_fn.call(null,G__18336,G__18337,G__18338,G__18339,G__18340,G__18341,G__18342,G__18343));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18344 = a;
var G__18345 = b;
var G__18346 = c;
var G__18347 = d;
var G__18348 = e;
var G__18349 = f;
var G__18350 = g;
var G__18351 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__18344,G__18345,G__18346,G__18347,G__18348,G__18349,G__18350,G__18351) : target_fn.call(null,G__18344,G__18345,G__18346,G__18347,G__18348,G__18349,G__18350,G__18351));
});
var G__19120__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18352 = a;
var G__18353 = b;
var G__18354 = c;
var G__18355 = d;
var G__18356 = e;
var G__18357 = f;
var G__18358 = g;
var G__18359 = h;
var G__18360 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__18352,G__18353,G__18354,G__18355,G__18356,G__18357,G__18358,G__18359,G__18360) : self__.dispatch_fn.call(null,G__18352,G__18353,G__18354,G__18355,G__18356,G__18357,G__18358,G__18359,G__18360));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18361 = a;
var G__18362 = b;
var G__18363 = c;
var G__18364 = d;
var G__18365 = e;
var G__18366 = f;
var G__18367 = g;
var G__18368 = h;
var G__18369 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__18361,G__18362,G__18363,G__18364,G__18365,G__18366,G__18367,G__18368,G__18369) : target_fn.call(null,G__18361,G__18362,G__18363,G__18364,G__18365,G__18366,G__18367,G__18368,G__18369));
});
var G__19120__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18370 = a;
var G__18371 = b;
var G__18372 = c;
var G__18373 = d;
var G__18374 = e;
var G__18375 = f;
var G__18376 = g;
var G__18377 = h;
var G__18378 = i;
var G__18379 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376,G__18377,G__18378,G__18379) : self__.dispatch_fn.call(null,G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376,G__18377,G__18378,G__18379));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18380 = a;
var G__18381 = b;
var G__18382 = c;
var G__18383 = d;
var G__18384 = e;
var G__18385 = f;
var G__18386 = g;
var G__18387 = h;
var G__18388 = i;
var G__18389 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__18380,G__18381,G__18382,G__18383,G__18384,G__18385,G__18386,G__18387,G__18388,G__18389) : target_fn.call(null,G__18380,G__18381,G__18382,G__18383,G__18384,G__18385,G__18386,G__18387,G__18388,G__18389));
});
var G__19120__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18390 = a;
var G__18391 = b;
var G__18392 = c;
var G__18393 = d;
var G__18394 = e;
var G__18395 = f;
var G__18396 = g;
var G__18397 = h;
var G__18398 = i;
var G__18399 = j;
var G__18400 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__18390,G__18391,G__18392,G__18393,G__18394,G__18395,G__18396,G__18397,G__18398,G__18399,G__18400) : self__.dispatch_fn.call(null,G__18390,G__18391,G__18392,G__18393,G__18394,G__18395,G__18396,G__18397,G__18398,G__18399,G__18400));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18401 = a;
var G__18402 = b;
var G__18403 = c;
var G__18404 = d;
var G__18405 = e;
var G__18406 = f;
var G__18407 = g;
var G__18408 = h;
var G__18409 = i;
var G__18410 = j;
var G__18411 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__18401,G__18402,G__18403,G__18404,G__18405,G__18406,G__18407,G__18408,G__18409,G__18410,G__18411) : target_fn.call(null,G__18401,G__18402,G__18403,G__18404,G__18405,G__18406,G__18407,G__18408,G__18409,G__18410,G__18411));
});
var G__19120__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18412 = a;
var G__18413 = b;
var G__18414 = c;
var G__18415 = d;
var G__18416 = e;
var G__18417 = f;
var G__18418 = g;
var G__18419 = h;
var G__18420 = i;
var G__18421 = j;
var G__18422 = k;
var G__18423 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__18412,G__18413,G__18414,G__18415,G__18416,G__18417,G__18418,G__18419,G__18420,G__18421,G__18422,G__18423) : self__.dispatch_fn.call(null,G__18412,G__18413,G__18414,G__18415,G__18416,G__18417,G__18418,G__18419,G__18420,G__18421,G__18422,G__18423));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18424 = a;
var G__18425 = b;
var G__18426 = c;
var G__18427 = d;
var G__18428 = e;
var G__18429 = f;
var G__18430 = g;
var G__18431 = h;
var G__18432 = i;
var G__18433 = j;
var G__18434 = k;
var G__18435 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430,G__18431,G__18432,G__18433,G__18434,G__18435) : target_fn.call(null,G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430,G__18431,G__18432,G__18433,G__18434,G__18435));
});
var G__19120__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18436 = a;
var G__18437 = b;
var G__18438 = c;
var G__18439 = d;
var G__18440 = e;
var G__18441 = f;
var G__18442 = g;
var G__18443 = h;
var G__18444 = i;
var G__18445 = j;
var G__18446 = k;
var G__18447 = l;
var G__18448 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__18436,G__18437,G__18438,G__18439,G__18440,G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448) : self__.dispatch_fn.call(null,G__18436,G__18437,G__18438,G__18439,G__18440,G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18449 = a;
var G__18450 = b;
var G__18451 = c;
var G__18452 = d;
var G__18453 = e;
var G__18454 = f;
var G__18455 = g;
var G__18456 = h;
var G__18457 = i;
var G__18458 = j;
var G__18459 = k;
var G__18460 = l;
var G__18461 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__18449,G__18450,G__18451,G__18452,G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461) : target_fn.call(null,G__18449,G__18450,G__18451,G__18452,G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461));
});
var G__19120__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18462 = a;
var G__18463 = b;
var G__18464 = c;
var G__18465 = d;
var G__18466 = e;
var G__18467 = f;
var G__18468 = g;
var G__18469 = h;
var G__18470 = i;
var G__18471 = j;
var G__18472 = k;
var G__18473 = l;
var G__18474 = m;
var G__18475 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__18462,G__18463,G__18464,G__18465,G__18466,G__18467,G__18468,G__18469,G__18470,G__18471,G__18472,G__18473,G__18474,G__18475) : self__.dispatch_fn.call(null,G__18462,G__18463,G__18464,G__18465,G__18466,G__18467,G__18468,G__18469,G__18470,G__18471,G__18472,G__18473,G__18474,G__18475));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18476 = a;
var G__18477 = b;
var G__18478 = c;
var G__18479 = d;
var G__18480 = e;
var G__18481 = f;
var G__18482 = g;
var G__18483 = h;
var G__18484 = i;
var G__18485 = j;
var G__18486 = k;
var G__18487 = l;
var G__18488 = m;
var G__18489 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484,G__18485,G__18486,G__18487,G__18488,G__18489) : target_fn.call(null,G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484,G__18485,G__18486,G__18487,G__18488,G__18489));
});
var G__19120__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18490 = a;
var G__18491 = b;
var G__18492 = c;
var G__18493 = d;
var G__18494 = e;
var G__18495 = f;
var G__18496 = g;
var G__18497 = h;
var G__18498 = i;
var G__18499 = j;
var G__18500 = k;
var G__18501 = l;
var G__18502 = m;
var G__18503 = n;
var G__18504 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__18490,G__18491,G__18492,G__18493,G__18494,G__18495,G__18496,G__18497,G__18498,G__18499,G__18500,G__18501,G__18502,G__18503,G__18504) : self__.dispatch_fn.call(null,G__18490,G__18491,G__18492,G__18493,G__18494,G__18495,G__18496,G__18497,G__18498,G__18499,G__18500,G__18501,G__18502,G__18503,G__18504));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18505 = a;
var G__18506 = b;
var G__18507 = c;
var G__18508 = d;
var G__18509 = e;
var G__18510 = f;
var G__18511 = g;
var G__18512 = h;
var G__18513 = i;
var G__18514 = j;
var G__18515 = k;
var G__18516 = l;
var G__18517 = m;
var G__18518 = n;
var G__18519 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__18505,G__18506,G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514,G__18515,G__18516,G__18517,G__18518,G__18519) : target_fn.call(null,G__18505,G__18506,G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514,G__18515,G__18516,G__18517,G__18518,G__18519));
});
var G__19120__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18520 = a;
var G__18521 = b;
var G__18522 = c;
var G__18523 = d;
var G__18524 = e;
var G__18525 = f;
var G__18526 = g;
var G__18527 = h;
var G__18528 = i;
var G__18529 = j;
var G__18530 = k;
var G__18531 = l;
var G__18532 = m;
var G__18533 = n;
var G__18534 = o;
var G__18535 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__18520,G__18521,G__18522,G__18523,G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530,G__18531,G__18532,G__18533,G__18534,G__18535) : self__.dispatch_fn.call(null,G__18520,G__18521,G__18522,G__18523,G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530,G__18531,G__18532,G__18533,G__18534,G__18535));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18536 = a;
var G__18537 = b;
var G__18538 = c;
var G__18539 = d;
var G__18540 = e;
var G__18541 = f;
var G__18542 = g;
var G__18543 = h;
var G__18544 = i;
var G__18545 = j;
var G__18546 = k;
var G__18547 = l;
var G__18548 = m;
var G__18549 = n;
var G__18550 = o;
var G__18551 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18536,G__18537,G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545,G__18546,G__18547,G__18548,G__18549,G__18550,G__18551) : target_fn.call(null,G__18536,G__18537,G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545,G__18546,G__18547,G__18548,G__18549,G__18550,G__18551));
});
var G__19120__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18552 = a;
var G__18553 = b;
var G__18554 = c;
var G__18555 = d;
var G__18556 = e;
var G__18557 = f;
var G__18558 = g;
var G__18559 = h;
var G__18560 = i;
var G__18561 = j;
var G__18562 = k;
var G__18563 = l;
var G__18564 = m;
var G__18565 = n;
var G__18566 = o;
var G__18567 = p;
var G__18568 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18552,G__18553,G__18554,G__18555,G__18556,G__18557,G__18558,G__18559,G__18560,G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568) : self__.dispatch_fn.call(null,G__18552,G__18553,G__18554,G__18555,G__18556,G__18557,G__18558,G__18559,G__18560,G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18569 = a;
var G__18570 = b;
var G__18571 = c;
var G__18572 = d;
var G__18573 = e;
var G__18574 = f;
var G__18575 = g;
var G__18576 = h;
var G__18577 = i;
var G__18578 = j;
var G__18579 = k;
var G__18580 = l;
var G__18581 = m;
var G__18582 = n;
var G__18583 = o;
var G__18584 = p;
var G__18585 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18569,G__18570,G__18571,G__18572,G__18573,G__18574,G__18575,G__18576,G__18577,G__18578,G__18579,G__18580,G__18581,G__18582,G__18583,G__18584,G__18585) : target_fn.call(null,G__18569,G__18570,G__18571,G__18572,G__18573,G__18574,G__18575,G__18576,G__18577,G__18578,G__18579,G__18580,G__18581,G__18582,G__18583,G__18584,G__18585));
});
var G__19120__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18586 = a;
var G__18587 = b;
var G__18588 = c;
var G__18589 = d;
var G__18590 = e;
var G__18591 = f;
var G__18592 = g;
var G__18593 = h;
var G__18594 = i;
var G__18595 = j;
var G__18596 = k;
var G__18597 = l;
var G__18598 = m;
var G__18599 = n;
var G__18600 = o;
var G__18601 = p;
var G__18602 = q;
var G__18603 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__18586,G__18587,G__18588,G__18589,G__18590,G__18591,G__18592,G__18593,G__18594,G__18595,G__18596,G__18597,G__18598,G__18599,G__18600,G__18601,G__18602,G__18603) : self__.dispatch_fn.call(null,G__18586,G__18587,G__18588,G__18589,G__18590,G__18591,G__18592,G__18593,G__18594,G__18595,G__18596,G__18597,G__18598,G__18599,G__18600,G__18601,G__18602,G__18603));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18604 = a;
var G__18605 = b;
var G__18606 = c;
var G__18607 = d;
var G__18608 = e;
var G__18609 = f;
var G__18610 = g;
var G__18611 = h;
var G__18612 = i;
var G__18613 = j;
var G__18614 = k;
var G__18615 = l;
var G__18616 = m;
var G__18617 = n;
var G__18618 = o;
var G__18619 = p;
var G__18620 = q;
var G__18621 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__18604,G__18605,G__18606,G__18607,G__18608,G__18609,G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619,G__18620,G__18621) : target_fn.call(null,G__18604,G__18605,G__18606,G__18607,G__18608,G__18609,G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619,G__18620,G__18621));
});
var G__19120__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18622 = a;
var G__18623 = b;
var G__18624 = c;
var G__18625 = d;
var G__18626 = e;
var G__18627 = f;
var G__18628 = g;
var G__18629 = h;
var G__18630 = i;
var G__18631 = j;
var G__18632 = k;
var G__18633 = l;
var G__18634 = m;
var G__18635 = n;
var G__18636 = o;
var G__18637 = p;
var G__18638 = q;
var G__18639 = r;
var G__18640 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__18622,G__18623,G__18624,G__18625,G__18626,G__18627,G__18628,G__18629,G__18630,G__18631,G__18632,G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640) : self__.dispatch_fn.call(null,G__18622,G__18623,G__18624,G__18625,G__18626,G__18627,G__18628,G__18629,G__18630,G__18631,G__18632,G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18641 = a;
var G__18642 = b;
var G__18643 = c;
var G__18644 = d;
var G__18645 = e;
var G__18646 = f;
var G__18647 = g;
var G__18648 = h;
var G__18649 = i;
var G__18650 = j;
var G__18651 = k;
var G__18652 = l;
var G__18653 = m;
var G__18654 = n;
var G__18655 = o;
var G__18656 = p;
var G__18657 = q;
var G__18658 = r;
var G__18659 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18641,G__18642,G__18643,G__18644,G__18645,G__18646,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659) : target_fn.call(null,G__18641,G__18642,G__18643,G__18644,G__18645,G__18646,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659));
});
var G__19120__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18660 = a;
var G__18661 = b;
var G__18662 = c;
var G__18663 = d;
var G__18664 = e;
var G__18665 = f;
var G__18666 = g;
var G__18667 = h;
var G__18668 = i;
var G__18669 = j;
var G__18670 = k;
var G__18671 = l;
var G__18672 = m;
var G__18673 = n;
var G__18674 = o;
var G__18675 = p;
var G__18676 = q;
var G__18677 = r;
var G__18678 = s;
var G__18679 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18660,G__18661,G__18662,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678,G__18679) : self__.dispatch_fn.call(null,G__18660,G__18661,G__18662,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678,G__18679));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18680 = a;
var G__18681 = b;
var G__18682 = c;
var G__18683 = d;
var G__18684 = e;
var G__18685 = f;
var G__18686 = g;
var G__18687 = h;
var G__18688 = i;
var G__18689 = j;
var G__18690 = k;
var G__18691 = l;
var G__18692 = m;
var G__18693 = n;
var G__18694 = o;
var G__18695 = p;
var G__18696 = q;
var G__18697 = r;
var G__18698 = s;
var G__18699 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18680,G__18681,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699) : target_fn.call(null,G__18680,G__18681,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699));
});
var G__19120__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__19120 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__19120__1.call(this,self__);
case 2:
return G__19120__2.call(this,self__,a);
case 3:
return G__19120__3.call(this,self__,a,b);
case 4:
return G__19120__4.call(this,self__,a,b,c);
case 5:
return G__19120__5.call(this,self__,a,b,c,d);
case 6:
return G__19120__6.call(this,self__,a,b,c,d,e);
case 7:
return G__19120__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__19120__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__19120__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__19120__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__19120__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__19120__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__19120__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__19120__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__19120__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__19120__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__19120__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__19120__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__19120__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__19120__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__19120__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__19120__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19120.cljs$core$IFn$_invoke$arity$1 = G__19120__1;
G__19120.cljs$core$IFn$_invoke$arity$2 = G__19120__2;
G__19120.cljs$core$IFn$_invoke$arity$3 = G__19120__3;
G__19120.cljs$core$IFn$_invoke$arity$4 = G__19120__4;
G__19120.cljs$core$IFn$_invoke$arity$5 = G__19120__5;
G__19120.cljs$core$IFn$_invoke$arity$6 = G__19120__6;
G__19120.cljs$core$IFn$_invoke$arity$7 = G__19120__7;
G__19120.cljs$core$IFn$_invoke$arity$8 = G__19120__8;
G__19120.cljs$core$IFn$_invoke$arity$9 = G__19120__9;
G__19120.cljs$core$IFn$_invoke$arity$10 = G__19120__10;
G__19120.cljs$core$IFn$_invoke$arity$11 = G__19120__11;
G__19120.cljs$core$IFn$_invoke$arity$12 = G__19120__12;
G__19120.cljs$core$IFn$_invoke$arity$13 = G__19120__13;
G__19120.cljs$core$IFn$_invoke$arity$14 = G__19120__14;
G__19120.cljs$core$IFn$_invoke$arity$15 = G__19120__15;
G__19120.cljs$core$IFn$_invoke$arity$16 = G__19120__16;
G__19120.cljs$core$IFn$_invoke$arity$17 = G__19120__17;
G__19120.cljs$core$IFn$_invoke$arity$18 = G__19120__18;
G__19120.cljs$core$IFn$_invoke$arity$19 = G__19120__19;
G__19120.cljs$core$IFn$_invoke$arity$20 = G__19120__20;
G__19120.cljs$core$IFn$_invoke$arity$21 = G__19120__21;
G__19120.cljs$core$IFn$_invoke$arity$22 = G__19120__22;
return G__19120;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args18272){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18272)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18700 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__18700) : self__.dispatch_fn.call(null,G__18700));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18701 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__18701) : target_fn.call(null,G__18701));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18702 = a;
var G__18703 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__18702,G__18703) : self__.dispatch_fn.call(null,G__18702,G__18703));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18704 = a;
var G__18705 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__18704,G__18705) : target_fn.call(null,G__18704,G__18705));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18706 = a;
var G__18707 = b;
var G__18708 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__18706,G__18707,G__18708) : self__.dispatch_fn.call(null,G__18706,G__18707,G__18708));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18709 = a;
var G__18710 = b;
var G__18711 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__18709,G__18710,G__18711) : target_fn.call(null,G__18709,G__18710,G__18711));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18712 = a;
var G__18713 = b;
var G__18714 = c;
var G__18715 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__18712,G__18713,G__18714,G__18715) : self__.dispatch_fn.call(null,G__18712,G__18713,G__18714,G__18715));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18716 = a;
var G__18717 = b;
var G__18718 = c;
var G__18719 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__18716,G__18717,G__18718,G__18719) : target_fn.call(null,G__18716,G__18717,G__18718,G__18719));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18720 = a;
var G__18721 = b;
var G__18722 = c;
var G__18723 = d;
var G__18724 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__18720,G__18721,G__18722,G__18723,G__18724) : self__.dispatch_fn.call(null,G__18720,G__18721,G__18722,G__18723,G__18724));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18725 = a;
var G__18726 = b;
var G__18727 = c;
var G__18728 = d;
var G__18729 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__18725,G__18726,G__18727,G__18728,G__18729) : target_fn.call(null,G__18725,G__18726,G__18727,G__18728,G__18729));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18730 = a;
var G__18731 = b;
var G__18732 = c;
var G__18733 = d;
var G__18734 = e;
var G__18735 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__18730,G__18731,G__18732,G__18733,G__18734,G__18735) : self__.dispatch_fn.call(null,G__18730,G__18731,G__18732,G__18733,G__18734,G__18735));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18736 = a;
var G__18737 = b;
var G__18738 = c;
var G__18739 = d;
var G__18740 = e;
var G__18741 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__18736,G__18737,G__18738,G__18739,G__18740,G__18741) : target_fn.call(null,G__18736,G__18737,G__18738,G__18739,G__18740,G__18741));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18742 = a;
var G__18743 = b;
var G__18744 = c;
var G__18745 = d;
var G__18746 = e;
var G__18747 = f;
var G__18748 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__18742,G__18743,G__18744,G__18745,G__18746,G__18747,G__18748) : self__.dispatch_fn.call(null,G__18742,G__18743,G__18744,G__18745,G__18746,G__18747,G__18748));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18749 = a;
var G__18750 = b;
var G__18751 = c;
var G__18752 = d;
var G__18753 = e;
var G__18754 = f;
var G__18755 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__18749,G__18750,G__18751,G__18752,G__18753,G__18754,G__18755) : target_fn.call(null,G__18749,G__18750,G__18751,G__18752,G__18753,G__18754,G__18755));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18756 = a;
var G__18757 = b;
var G__18758 = c;
var G__18759 = d;
var G__18760 = e;
var G__18761 = f;
var G__18762 = g;
var G__18763 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__18756,G__18757,G__18758,G__18759,G__18760,G__18761,G__18762,G__18763) : self__.dispatch_fn.call(null,G__18756,G__18757,G__18758,G__18759,G__18760,G__18761,G__18762,G__18763));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18764 = a;
var G__18765 = b;
var G__18766 = c;
var G__18767 = d;
var G__18768 = e;
var G__18769 = f;
var G__18770 = g;
var G__18771 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__18764,G__18765,G__18766,G__18767,G__18768,G__18769,G__18770,G__18771) : target_fn.call(null,G__18764,G__18765,G__18766,G__18767,G__18768,G__18769,G__18770,G__18771));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18772 = a;
var G__18773 = b;
var G__18774 = c;
var G__18775 = d;
var G__18776 = e;
var G__18777 = f;
var G__18778 = g;
var G__18779 = h;
var G__18780 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__18772,G__18773,G__18774,G__18775,G__18776,G__18777,G__18778,G__18779,G__18780) : self__.dispatch_fn.call(null,G__18772,G__18773,G__18774,G__18775,G__18776,G__18777,G__18778,G__18779,G__18780));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18781 = a;
var G__18782 = b;
var G__18783 = c;
var G__18784 = d;
var G__18785 = e;
var G__18786 = f;
var G__18787 = g;
var G__18788 = h;
var G__18789 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__18781,G__18782,G__18783,G__18784,G__18785,G__18786,G__18787,G__18788,G__18789) : target_fn.call(null,G__18781,G__18782,G__18783,G__18784,G__18785,G__18786,G__18787,G__18788,G__18789));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18790 = a;
var G__18791 = b;
var G__18792 = c;
var G__18793 = d;
var G__18794 = e;
var G__18795 = f;
var G__18796 = g;
var G__18797 = h;
var G__18798 = i;
var G__18799 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__18790,G__18791,G__18792,G__18793,G__18794,G__18795,G__18796,G__18797,G__18798,G__18799) : self__.dispatch_fn.call(null,G__18790,G__18791,G__18792,G__18793,G__18794,G__18795,G__18796,G__18797,G__18798,G__18799));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18800 = a;
var G__18801 = b;
var G__18802 = c;
var G__18803 = d;
var G__18804 = e;
var G__18805 = f;
var G__18806 = g;
var G__18807 = h;
var G__18808 = i;
var G__18809 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__18800,G__18801,G__18802,G__18803,G__18804,G__18805,G__18806,G__18807,G__18808,G__18809) : target_fn.call(null,G__18800,G__18801,G__18802,G__18803,G__18804,G__18805,G__18806,G__18807,G__18808,G__18809));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18810 = a;
var G__18811 = b;
var G__18812 = c;
var G__18813 = d;
var G__18814 = e;
var G__18815 = f;
var G__18816 = g;
var G__18817 = h;
var G__18818 = i;
var G__18819 = j;
var G__18820 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__18810,G__18811,G__18812,G__18813,G__18814,G__18815,G__18816,G__18817,G__18818,G__18819,G__18820) : self__.dispatch_fn.call(null,G__18810,G__18811,G__18812,G__18813,G__18814,G__18815,G__18816,G__18817,G__18818,G__18819,G__18820));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18821 = a;
var G__18822 = b;
var G__18823 = c;
var G__18824 = d;
var G__18825 = e;
var G__18826 = f;
var G__18827 = g;
var G__18828 = h;
var G__18829 = i;
var G__18830 = j;
var G__18831 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__18821,G__18822,G__18823,G__18824,G__18825,G__18826,G__18827,G__18828,G__18829,G__18830,G__18831) : target_fn.call(null,G__18821,G__18822,G__18823,G__18824,G__18825,G__18826,G__18827,G__18828,G__18829,G__18830,G__18831));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18832 = a;
var G__18833 = b;
var G__18834 = c;
var G__18835 = d;
var G__18836 = e;
var G__18837 = f;
var G__18838 = g;
var G__18839 = h;
var G__18840 = i;
var G__18841 = j;
var G__18842 = k;
var G__18843 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__18832,G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840,G__18841,G__18842,G__18843) : self__.dispatch_fn.call(null,G__18832,G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840,G__18841,G__18842,G__18843));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18844 = a;
var G__18845 = b;
var G__18846 = c;
var G__18847 = d;
var G__18848 = e;
var G__18849 = f;
var G__18850 = g;
var G__18851 = h;
var G__18852 = i;
var G__18853 = j;
var G__18854 = k;
var G__18855 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__18844,G__18845,G__18846,G__18847,G__18848,G__18849,G__18850,G__18851,G__18852,G__18853,G__18854,G__18855) : target_fn.call(null,G__18844,G__18845,G__18846,G__18847,G__18848,G__18849,G__18850,G__18851,G__18852,G__18853,G__18854,G__18855));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18856 = a;
var G__18857 = b;
var G__18858 = c;
var G__18859 = d;
var G__18860 = e;
var G__18861 = f;
var G__18862 = g;
var G__18863 = h;
var G__18864 = i;
var G__18865 = j;
var G__18866 = k;
var G__18867 = l;
var G__18868 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__18856,G__18857,G__18858,G__18859,G__18860,G__18861,G__18862,G__18863,G__18864,G__18865,G__18866,G__18867,G__18868) : self__.dispatch_fn.call(null,G__18856,G__18857,G__18858,G__18859,G__18860,G__18861,G__18862,G__18863,G__18864,G__18865,G__18866,G__18867,G__18868));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18869 = a;
var G__18870 = b;
var G__18871 = c;
var G__18872 = d;
var G__18873 = e;
var G__18874 = f;
var G__18875 = g;
var G__18876 = h;
var G__18877 = i;
var G__18878 = j;
var G__18879 = k;
var G__18880 = l;
var G__18881 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__18869,G__18870,G__18871,G__18872,G__18873,G__18874,G__18875,G__18876,G__18877,G__18878,G__18879,G__18880,G__18881) : target_fn.call(null,G__18869,G__18870,G__18871,G__18872,G__18873,G__18874,G__18875,G__18876,G__18877,G__18878,G__18879,G__18880,G__18881));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18882 = a;
var G__18883 = b;
var G__18884 = c;
var G__18885 = d;
var G__18886 = e;
var G__18887 = f;
var G__18888 = g;
var G__18889 = h;
var G__18890 = i;
var G__18891 = j;
var G__18892 = k;
var G__18893 = l;
var G__18894 = m;
var G__18895 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__18882,G__18883,G__18884,G__18885,G__18886,G__18887,G__18888,G__18889,G__18890,G__18891,G__18892,G__18893,G__18894,G__18895) : self__.dispatch_fn.call(null,G__18882,G__18883,G__18884,G__18885,G__18886,G__18887,G__18888,G__18889,G__18890,G__18891,G__18892,G__18893,G__18894,G__18895));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18896 = a;
var G__18897 = b;
var G__18898 = c;
var G__18899 = d;
var G__18900 = e;
var G__18901 = f;
var G__18902 = g;
var G__18903 = h;
var G__18904 = i;
var G__18905 = j;
var G__18906 = k;
var G__18907 = l;
var G__18908 = m;
var G__18909 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__18896,G__18897,G__18898,G__18899,G__18900,G__18901,G__18902,G__18903,G__18904,G__18905,G__18906,G__18907,G__18908,G__18909) : target_fn.call(null,G__18896,G__18897,G__18898,G__18899,G__18900,G__18901,G__18902,G__18903,G__18904,G__18905,G__18906,G__18907,G__18908,G__18909));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18910 = a;
var G__18911 = b;
var G__18912 = c;
var G__18913 = d;
var G__18914 = e;
var G__18915 = f;
var G__18916 = g;
var G__18917 = h;
var G__18918 = i;
var G__18919 = j;
var G__18920 = k;
var G__18921 = l;
var G__18922 = m;
var G__18923 = n;
var G__18924 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__18910,G__18911,G__18912,G__18913,G__18914,G__18915,G__18916,G__18917,G__18918,G__18919,G__18920,G__18921,G__18922,G__18923,G__18924) : self__.dispatch_fn.call(null,G__18910,G__18911,G__18912,G__18913,G__18914,G__18915,G__18916,G__18917,G__18918,G__18919,G__18920,G__18921,G__18922,G__18923,G__18924));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18925 = a;
var G__18926 = b;
var G__18927 = c;
var G__18928 = d;
var G__18929 = e;
var G__18930 = f;
var G__18931 = g;
var G__18932 = h;
var G__18933 = i;
var G__18934 = j;
var G__18935 = k;
var G__18936 = l;
var G__18937 = m;
var G__18938 = n;
var G__18939 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__18925,G__18926,G__18927,G__18928,G__18929,G__18930,G__18931,G__18932,G__18933,G__18934,G__18935,G__18936,G__18937,G__18938,G__18939) : target_fn.call(null,G__18925,G__18926,G__18927,G__18928,G__18929,G__18930,G__18931,G__18932,G__18933,G__18934,G__18935,G__18936,G__18937,G__18938,G__18939));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18940 = a;
var G__18941 = b;
var G__18942 = c;
var G__18943 = d;
var G__18944 = e;
var G__18945 = f;
var G__18946 = g;
var G__18947 = h;
var G__18948 = i;
var G__18949 = j;
var G__18950 = k;
var G__18951 = l;
var G__18952 = m;
var G__18953 = n;
var G__18954 = o;
var G__18955 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__18940,G__18941,G__18942,G__18943,G__18944,G__18945,G__18946,G__18947,G__18948,G__18949,G__18950,G__18951,G__18952,G__18953,G__18954,G__18955) : self__.dispatch_fn.call(null,G__18940,G__18941,G__18942,G__18943,G__18944,G__18945,G__18946,G__18947,G__18948,G__18949,G__18950,G__18951,G__18952,G__18953,G__18954,G__18955));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18956 = a;
var G__18957 = b;
var G__18958 = c;
var G__18959 = d;
var G__18960 = e;
var G__18961 = f;
var G__18962 = g;
var G__18963 = h;
var G__18964 = i;
var G__18965 = j;
var G__18966 = k;
var G__18967 = l;
var G__18968 = m;
var G__18969 = n;
var G__18970 = o;
var G__18971 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18956,G__18957,G__18958,G__18959,G__18960,G__18961,G__18962,G__18963,G__18964,G__18965,G__18966,G__18967,G__18968,G__18969,G__18970,G__18971) : target_fn.call(null,G__18956,G__18957,G__18958,G__18959,G__18960,G__18961,G__18962,G__18963,G__18964,G__18965,G__18966,G__18967,G__18968,G__18969,G__18970,G__18971));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18972 = a;
var G__18973 = b;
var G__18974 = c;
var G__18975 = d;
var G__18976 = e;
var G__18977 = f;
var G__18978 = g;
var G__18979 = h;
var G__18980 = i;
var G__18981 = j;
var G__18982 = k;
var G__18983 = l;
var G__18984 = m;
var G__18985 = n;
var G__18986 = o;
var G__18987 = p;
var G__18988 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18972,G__18973,G__18974,G__18975,G__18976,G__18977,G__18978,G__18979,G__18980,G__18981,G__18982,G__18983,G__18984,G__18985,G__18986,G__18987,G__18988) : self__.dispatch_fn.call(null,G__18972,G__18973,G__18974,G__18975,G__18976,G__18977,G__18978,G__18979,G__18980,G__18981,G__18982,G__18983,G__18984,G__18985,G__18986,G__18987,G__18988));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18989 = a;
var G__18990 = b;
var G__18991 = c;
var G__18992 = d;
var G__18993 = e;
var G__18994 = f;
var G__18995 = g;
var G__18996 = h;
var G__18997 = i;
var G__18998 = j;
var G__18999 = k;
var G__19000 = l;
var G__19001 = m;
var G__19002 = n;
var G__19003 = o;
var G__19004 = p;
var G__19005 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18989,G__18990,G__18991,G__18992,G__18993,G__18994,G__18995,G__18996,G__18997,G__18998,G__18999,G__19000,G__19001,G__19002,G__19003,G__19004,G__19005) : target_fn.call(null,G__18989,G__18990,G__18991,G__18992,G__18993,G__18994,G__18995,G__18996,G__18997,G__18998,G__18999,G__19000,G__19001,G__19002,G__19003,G__19004,G__19005));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19006 = a;
var G__19007 = b;
var G__19008 = c;
var G__19009 = d;
var G__19010 = e;
var G__19011 = f;
var G__19012 = g;
var G__19013 = h;
var G__19014 = i;
var G__19015 = j;
var G__19016 = k;
var G__19017 = l;
var G__19018 = m;
var G__19019 = n;
var G__19020 = o;
var G__19021 = p;
var G__19022 = q;
var G__19023 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__19006,G__19007,G__19008,G__19009,G__19010,G__19011,G__19012,G__19013,G__19014,G__19015,G__19016,G__19017,G__19018,G__19019,G__19020,G__19021,G__19022,G__19023) : self__.dispatch_fn.call(null,G__19006,G__19007,G__19008,G__19009,G__19010,G__19011,G__19012,G__19013,G__19014,G__19015,G__19016,G__19017,G__19018,G__19019,G__19020,G__19021,G__19022,G__19023));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19024 = a;
var G__19025 = b;
var G__19026 = c;
var G__19027 = d;
var G__19028 = e;
var G__19029 = f;
var G__19030 = g;
var G__19031 = h;
var G__19032 = i;
var G__19033 = j;
var G__19034 = k;
var G__19035 = l;
var G__19036 = m;
var G__19037 = n;
var G__19038 = o;
var G__19039 = p;
var G__19040 = q;
var G__19041 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__19024,G__19025,G__19026,G__19027,G__19028,G__19029,G__19030,G__19031,G__19032,G__19033,G__19034,G__19035,G__19036,G__19037,G__19038,G__19039,G__19040,G__19041) : target_fn.call(null,G__19024,G__19025,G__19026,G__19027,G__19028,G__19029,G__19030,G__19031,G__19032,G__19033,G__19034,G__19035,G__19036,G__19037,G__19038,G__19039,G__19040,G__19041));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19042 = a;
var G__19043 = b;
var G__19044 = c;
var G__19045 = d;
var G__19046 = e;
var G__19047 = f;
var G__19048 = g;
var G__19049 = h;
var G__19050 = i;
var G__19051 = j;
var G__19052 = k;
var G__19053 = l;
var G__19054 = m;
var G__19055 = n;
var G__19056 = o;
var G__19057 = p;
var G__19058 = q;
var G__19059 = r;
var G__19060 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__19042,G__19043,G__19044,G__19045,G__19046,G__19047,G__19048,G__19049,G__19050,G__19051,G__19052,G__19053,G__19054,G__19055,G__19056,G__19057,G__19058,G__19059,G__19060) : self__.dispatch_fn.call(null,G__19042,G__19043,G__19044,G__19045,G__19046,G__19047,G__19048,G__19049,G__19050,G__19051,G__19052,G__19053,G__19054,G__19055,G__19056,G__19057,G__19058,G__19059,G__19060));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19061 = a;
var G__19062 = b;
var G__19063 = c;
var G__19064 = d;
var G__19065 = e;
var G__19066 = f;
var G__19067 = g;
var G__19068 = h;
var G__19069 = i;
var G__19070 = j;
var G__19071 = k;
var G__19072 = l;
var G__19073 = m;
var G__19074 = n;
var G__19075 = o;
var G__19076 = p;
var G__19077 = q;
var G__19078 = r;
var G__19079 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__19061,G__19062,G__19063,G__19064,G__19065,G__19066,G__19067,G__19068,G__19069,G__19070,G__19071,G__19072,G__19073,G__19074,G__19075,G__19076,G__19077,G__19078,G__19079) : target_fn.call(null,G__19061,G__19062,G__19063,G__19064,G__19065,G__19066,G__19067,G__19068,G__19069,G__19070,G__19071,G__19072,G__19073,G__19074,G__19075,G__19076,G__19077,G__19078,G__19079));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19080 = a;
var G__19081 = b;
var G__19082 = c;
var G__19083 = d;
var G__19084 = e;
var G__19085 = f;
var G__19086 = g;
var G__19087 = h;
var G__19088 = i;
var G__19089 = j;
var G__19090 = k;
var G__19091 = l;
var G__19092 = m;
var G__19093 = n;
var G__19094 = o;
var G__19095 = p;
var G__19096 = q;
var G__19097 = r;
var G__19098 = s;
var G__19099 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__19080,G__19081,G__19082,G__19083,G__19084,G__19085,G__19086,G__19087,G__19088,G__19089,G__19090,G__19091,G__19092,G__19093,G__19094,G__19095,G__19096,G__19097,G__19098,G__19099) : self__.dispatch_fn.call(null,G__19080,G__19081,G__19082,G__19083,G__19084,G__19085,G__19086,G__19087,G__19088,G__19089,G__19090,G__19091,G__19092,G__19093,G__19094,G__19095,G__19096,G__19097,G__19098,G__19099));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19100 = a;
var G__19101 = b;
var G__19102 = c;
var G__19103 = d;
var G__19104 = e;
var G__19105 = f;
var G__19106 = g;
var G__19107 = h;
var G__19108 = i;
var G__19109 = j;
var G__19110 = k;
var G__19111 = l;
var G__19112 = m;
var G__19113 = n;
var G__19114 = o;
var G__19115 = p;
var G__19116 = q;
var G__19117 = r;
var G__19118 = s;
var G__19119 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__19100,G__19101,G__19102,G__19103,G__19104,G__19105,G__19106,G__19107,G__19108,G__19109,G__19110,G__19111,G__19112,G__19113,G__19114,G__19115,G__19116,G__19117,G__19118,G__19119) : target_fn.call(null,G__19100,G__19101,G__19102,G__19103,G__19104,G__19105,G__19106,G__19107,G__19108,G__19109,G__19110,G__19111,G__19112,G__19113,G__19114,G__19115,G__19116,G__19117,G__19118,G__19119));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__19121 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__19121);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4361__auto__,writer__4362__auto__,opt__4363__auto__){
return cljs.core._write(writer__4362__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__19126 = msg;
return Error(G__19126);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__19131 = x;
var G__19132 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__19131,G__19132) : pred.call(null,G__19131,G__19132));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__19133 = y;
var G__19134 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__19133,G__19134) : pred.call(null,G__19133,G__19134));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$18;
} else {
return cljs.core.constant$keyword$19;
}
});
